<%args>
    $show_filters => 0
    $seedlot_id => undef
    $seedlot_name => undef
    $multi_seedlot => !(defined $seedlot_id && defined $seedlot_name) ? 1 : 0
</%args>

<& /util/import_javascript.mas, classes => [ 'CXGN.List', 'jquery', 'jquery.dataTables', 'jquery.dataTables-buttons-min', 'jszip-min', 'buttons.bootstrap-min', 'buttons.html5-min' ],  &>

<br /><br />

<&| /page/info_section.mas, title=>"Filter Events",  collapsible=>1, collapsed=>!$show_filters, subtitle=>"Filter maintenance events based on date, type, and/or value" &>

    <div class="well">

        <p>Add one or more filters to apply to the table of displayed maintenance events.  To add a filter, enter the properties for a filter type 
        and click the add button to add the filter to the list.  Once you're done adding filters, click the Filter button to display the results.</p>
        <br />
        
        <!-- Filter Form -->
        <form class="form-horizontal" id="seedlot_maintenance_event_form" name="seedlot_maintenance_event_form">

% if ( $multi_seedlot ) {
            <!-- Seedlot (by user-input) -->
            <div class="form-group">
                <label class="col-sm-3 control-label">Seedlot(s): </label>
                <div class="col-sm-8">
                    <div class="panel panel-info">
                        <div class="panel-heading">Enter the name(s) of the Seedlot(s) - one per line</div>
                        <div class="panel-body">
                            <textarea id="event_filter_seedlot_names" class="form-control" rows=5></textarea>
                        </div>
                    </div>

                    <div style="text-align: center"><strong>OR</strong></div>
                </div>
                <div class="col-sm-1">
                    <button id="event_filter_seedlot_names_add" class='btn btn-info btn-sm'>Add</button>
                </div>
            </div>

            <!-- Seedlot (by list) -->
            <div class="form-group">
                <label class="col-sm-3 control-label"></label>
                <div class="col-sm-8">
                    <div class="panel panel-info">
                        <div class="panel-heading">Select a List of Seedlots</div>
                        <div class="panel-body"><div id="event_filter_seedlot_list"></div></div>
                    </div>
                </div>
                <div class="col-sm-1">
                    <button id="event_filter_seedlot_list_add" class='btn btn-info btn-sm'>Add</button>
                </div>
            </div>
% } else {
            <!-- Single Seedlot Name -->
            <div class="form-group">
                <label class="col-sm-3 control-label">Seedlot: </label>
                <div class="col-sm-8">
                    <input class="form-control" type="text" value="<% $seedlot_name %>" disabled>
                </div>
                <div class="col-sm-1"></div>
            </div>
% }
        
            <!-- Date -->
            <div class="form-group">
                <label class="col-sm-3 control-label">Date: </label>
                <div class="col-sm-4">
                    <input class="form-control" id="event_filter_date" type="text" placeholder="YYYY-MM-DD" value="">
                </div>
                <div class="col-sm-4">
                    <select class="form-control" id="event_filter_date_type">
                        <option value="eq">on</option>
                        <option value="lte">on or before</option>
                        <option value="lt">before</option>
                        <option value="gte">on or after</option>
                        <option value="gt">after</option>
                    </select>
                </div>
                <div class="col-sm-1">
                    <button id="event_filter_date_add" class='btn btn-info btn-sm'>Add</button>
                </div>
            </div>

            <!-- Type -->
            <div class="form-group">
                <label class="col-sm-3 control-label">Type: </label>
                <div class="col-sm-4">
                    <select class="form-control" id="event_filter_type" disabled><option>Loading...</option></select>
                </div>
                <div class="col-sm-4" id="event_filter_type_value">
                    
                </div>
                <div class="col-sm-1">
                    <button id="event_filter_type_add" class='btn btn-info btn-sm'>Add</button>
                </div>
            </div>

            <!-- Operator -->
            <div class="form-group">
                <label class="col-sm-3 control-label">Operator: </label>
                <div class="col-sm-8">
                    <select class="form-control" id="event_filter_operators" multiple disabled><option>Loading...</option></select>
                </div>
                <div class="col-sm-1">
                    <button id="event_filter_operators_add" class='btn btn-info btn-sm'>Add</button>
                </div>
            </div>

        </form>

        <br /><br />

        <!-- Filter Table -->
        <p><strong>Applied Filters:</strong></p>

        <table class="table table-striped">
            <thead>
                <tr>
                    <th>Property</th>
                    <th>Comparison</th>
                    <th>Value</th>
                    <th>Remove</th>
                </tr>
            </thead>
            <tbody id="event_filter_table"></tbody>
        </table>

        <br /><br />

        <!-- Submit Filters -->
        <button id="event_filter_submit" class="btn btn-primary btn-block" style="max-width: 400px; margin: 0 auto">Filter</button>

    </div>

</&>

<br /><br />

<table id="seedlot_maintenance_events" class="table table-hover table-bordered"></table>


<script type="text/javascript">

let events = [];        // List of maintenance events for the Seedlot
let ontology = [];      // Event type ontology
let filters = [];       // List of filter properties

let lo = new CXGN.List();
let multi_seedlot = <% $multi_seedlot %> === 1;

jQuery(document).ready(function() {
    
    // Load the Events
    getEvents();
    getOntology(function() {
        setTypeFilter();
    });

    // Add list selection, if enabled
    if ( multi_seedlot ) {
        jQuery('#event_filter_seedlot_list').html(lo.listSelect('event_filter_seedlot', [ 'seedlots' ], 'select', undefined, undefined));
    }

    // Click and Change Listeners
    jQuery("#event_filter_seedlot_names_add").click(addSeedlotNamesFilter);
    jQuery("#event_filter_seedlot_list_add").click(addSeedlotListFilter);
    jQuery("#event_filter_date_add").click(addDateFilter);
    jQuery("#event_filter_type_add").click(addTypeFilter);
    jQuery("#event_filter_operators_add").click(addOperatorFilter);
    jQuery("#event_filter_type").change(setTypeFilterValues);
    jQuery("#event_filter_submit").click(getEvents);

    // Set DataTables Buttons
    let DT_BUTTONS = [
        {
            extend: 'excelHtml5',
            title: 'seedlot_events',
            exportOptions: {
                orthogonal: 'export'
            }
        },
        {
            extend: 'csvHtml5',
            title: 'seedlot_events',
            exportOptions: {
                orthogonal: 'export'
            }
        }
    ];

    // Set the Columns
    let columns = [];
    if ( multi_seedlot ) {
        columns = columns.concat([
            { 
                title: "Seedlot", 
                data: "stock_name", 
                render: function(data, type, row) {
                    if ( type === 'display' ) {
                        let url = "/breeders/seedlot/" + row.stock_id;
                        return "<a href='" + url + "'>" + data + "</a>";
                    }
                    return data;
                }
            }
        ]);
    }
    columns = columns.concat([
        { title: "Event ID", data: "stockprop_id" },
        {
            title: "Event Date", 
            data: "timestamp",
            render: function(data, type, row) {
                if ( type === "display" ) {
                    let dow = ["Sun", "Mon", "Tue", "Wed", "Thu", "Fri", "Sat"];
                    let month = ["Jan", "Feb", "Mar", "Apr", "May", "Jun", "Jul", "Aug", "Sep", "Oct", "Nov", "Dec"];
                    let d = new Date(data);
                    let h = d.getHours();
                    let m = d.getMinutes();
                    let s = d.getSeconds();
                    if ( h <= 9 ) h = '0' + h;
                    if ( m <= 9 ) m = '0' + m;
                    if ( s <= 9 ) s = '0' + s;
                    let ts = dow[d.getDay()] + " " + month[d.getMonth()] + " " + d.getDate() + " " + h + ":" + m + ":" + s + " " + d.getFullYear();
                    return ts;
                }
                return data;
            }
        },
        { title: "Event Type", data: "cvterm_name" },
        { title: "Value", data: "value" },
        { 
            title: "Notes", 
            data: "notes",
            render: function(data, type, row) {
                return data ? data : '';
            }
        },
        { title: "Operator", data: "operator" }
    ]);

    // Init DataTable
    jQuery('#seedlot_maintenance_events').DataTable({
        dom: 'Bfrtip',
        autoWidth: false,
        pageLength: multi_seedlot ? 50 : 10,
        data: [],
        columns: columns,
        order: [[ multi_seedlot ? 2 : 1, "desc" ]],
        buttons: DT_BUTTONS
    });

});


/**
    * Get the Maintenance Events
    * - Query the database
    * - call displayEvents() to populate the table
    */
function getEvents() {
    events = [];

    // Build filter arguments
    let _filters = { names: [], dates: [], types: [], operators: [] };
    for ( let i = 0; i < filters.length; i++ ) {
        if ( filters[i].type_id === 'name' ) {
            _filters.names = _filters.names.concat(filters[i].value);
        }
        else if ( filters[i].type_id === 'date' ) {
            _filters.dates.push({date: filters[i].value, comp: filters[i].comp});
        }
        else if ( filters[i].type_id === 'operator' ) {
            _filters.operators = _filters.operators.concat(filters[i].value);
        }
        else {
            _filters.types.push({type: filters[i].type_id, values: filters[i].value});
        }
    }
    if ( !multi_seedlot ) {
        _filters.names = ["<% $seedlot_name %>"];
    }

    console.log(JSON.stringify(_filters, null, 2));

    // Disable Filter button
    jQuery("#event_filter_submit").html("Searching...");
    jQuery("#event_filter_submit").attr("disabled", true);

    // Make request
    jQuery.ajax({
        type: 'POST',
        url: '/ajax/breeders/seedlot/maintenance/search',
        data: JSON.stringify({filters: _filters}),
        contentType: "application/json; charset=utf-8",
        dataType: "json",
        success: function(data) {
            console.log(data);
            if ( data && data.events ) {
                events = data.events;
            }
            else {
                alert("ERROR: Could not load maintenance events!");
            }
        },
        error: function() {
            alert("ERROR: Could not load maintenance events!");
        },
        complete: function() {
            displayEvents();
            setOperators();

            jQuery("#event_filter_submit").html("Filter");
            jQuery("#event_filter_submit").attr("disabled", false);
        }
    });
}

/**
 * Redraw the display of the Maintenance Events in the table
 */
function displayEvents() {
    let dt = jQuery('#seedlot_maintenance_events').DataTable();
    dt.clear();
    dt.rows.add(events);
    dt.draw();
}


//
// FILTER FUNCTIONS
//


/**
 * Get the maintenance event ontology
 * @param {Function} [callback] Callback function()
 */
function getOntology(callback) {
    jQuery.ajax({
        type: 'GET',
        dataType: 'json',
        url: '/ajax/breeders/seedlot/maintenance/ontology',
        success: function(data) {
            if ( data && data.ontology ) {
                ontology = data.ontology;
                if ( callback ) return callback();
            }
            else {
                alert("ERROR: Could not fetch ontology terms");
            }
        },
        error: function() {
            alert("ERROR: Could not fetch ontology terms");
        }
    });
    
}

/**
 * Parse the event ontology for event types
 * - Populate event type select
 * - Call setTypeFilterValues to set initial values
 */
function setTypeFilter() {
    
    // Populate type select
    let html = "<option value=''>...Select Maintenance Event Type...</option>";
    if ( ontology ) {
        for ( let i = 0; i < ontology.length; i++ ) {
            html += "<optgroup label='" + ontology[i].name + "'>";
            if ( ontology[i].children ) {
                for ( let j = 0; j < ontology[i].children.length; j++ ) {
                    html += "<option value='" + ontology[i].children[j].cvterm_id + "'>" + ontology[i].children[j].name + "</option>";
                }
            }
            html += "</optgroup>";
        }
    }
    jQuery("#event_filter_type").html(html);
    jQuery("#event_filter_type").attr("disabled", false);

    // Set the values
    setTypeFilterValues();

}

/**
 * Populate the event type input values based on the currently selected event type with:
 *  - a multi-select with the values for the currently selected event type, if set in the ontology
 *  - a text input, if not set in the ontology
 */
function setTypeFilterValues() {
    let id = jQuery("#event_filter_type").val();

    // Build input based on possible values of selected event type
    let html = "";
    let input_type;
    if ( id && id !== '' && ontology ) {
        let values = [];
        for ( let i = 0; i < ontology.length; i++ ) {
            for ( let j = 0; j < ontology[i].children.length; j++ ) {
                if ( ontology[i].children[j].cvterm_id === parseInt(id) ) {
                    values = ontology[i].children[j].children;
                }
            }
        }
        if ( values && values.length > 0 ) {
            input_type = "select";
            html += "<select class='form-control' id='event_filter_type_value_select' multiple>";
            for ( let i = 0; i < values.length; i++ ) {
                html += "<option value='" + values[i].name + "'>" + values[i].name + "</option>";
            }
            html += "</select>";
        }
        else {
            input_type = "user";
            html += "<input class='form-control' id='event_filter_type_value_user' type='text'>";
        }
    }
    else {
        input_type = "none";
    }

    jQuery("#event_filter_type_value").data("input-type", input_type);
    jQuery("#event_filter_type_value").html(html);
}

/**
 * Populate the operators select with the event operators
 */
function setOperators() {
    let operators = [];
    for ( let i = 0; i < events.length; i++ ) {
        if ( !operators.includes(events[i].operator)) operators.push(events[i].operator);
    }
    let html = "";
    for ( let i = 0; i < operators.length; i++ ) {
        html += "<option value='" + operators[i] + "'>" + operators[i] + "</option>";
    }
    jQuery("#event_filter_operators").html(html);
    jQuery("#event_filter_operators").attr("disabled", false);
}


/**
 * Add a Name Filter - from the user-entered list of names
 */
function addSeedlotNamesFilter() {
    let names = jQuery("#event_filter_seedlot_names").val();
    names = names ? names.split('\n') : [];
    addFilter('name', 'name', names && names.length > 0 ? names : undefined, 'eq');
    return false;
}

/**
 * Add a Name Filter - from the user-selected list of Seedlots
 */
function addSeedlotListFilter() {
    let list_id = jQuery("#event_filter_seedlot_list_select").val();
    let names = list_id ? lo.getList(list_id) : [];
    addFilter('name', 'name', names && names.length > 0 ? names : undefined, 'eq');
    return false;
}


/**
 * Add a Date Filter
 */
function addDateFilter() {
    let d = jQuery('#event_filter_date').val();
    let t = jQuery('#event_filter_date_type').val();

    // Check date format
    let regex = /^[0-9]{4}-[0-9]{2}-[0-9]{2}$/;
    if ( !d.match(regex) ) {
        alert("Incorrect date format - the date must be in the format of YYYY-MM-DD");
        return false;
    }

    // Add Filter
    addFilter('date', 'date', d, t);
    return false;
}

/**
 * Add a Type/Value Filter
 */
function addTypeFilter() {
    
    // Get event type
    let type_id = jQuery('#event_filter_type').val();
    let type_name = jQuery('#event_filter_type option:selected').text();
    
    // Get event value(s)
    let values;
    let input_type = jQuery('#event_filter_type_value').data('input-type');
    if ( input_type === 'select' ) {
        values = jQuery('#event_filter_type_value_select').val();
    }
    else if ( input_type === 'user' ) {
        let v = jQuery('#event_filter_type_value_user').val();
        values = v && v !== '' ? [v] : undefined;
    }
    
    addFilter(type_id, type_name, values, 'eq');
    return false;
}

/*
 * Add an Operator Filter
 */
function addOperatorFilter() {
    let operators = jQuery('#event_filter_operators').val();
    addFilter('operator', 'operator', operators, 'eq');
    return false;
}

/**
 * Add a Filter to the list of added filters
 * - call displayFilters() to update table
 * @param {string|int} type_id ID of the filter type (cvterm_id, date, operator)
 * @param {string} type_name Name of the filter type (cvterm name, date, operator)
 * @param {string|int} value Value of the filter for comparison (type value, date, operator names)
 * @param {string} comp Comparison used for the filter (eq, lte, lt, gte, gt)
 */
function addFilter(type_id, type_name, value, comp) {
    filters.push({
        type_id: type_id,
        type_name: type_name,
        value: value,
        comp: comp
    });
    displayFilters();
}

/**
 * Remove the specified filter from the list of added filters
 * - call displayFilters() to update table
 * @param {int} i Index of filter to remove
 */
function removeFilter(i) {
    filters.splice(i, 1);
    displayFilters();
}

/**
 * Update the table of added filters
 */
function displayFilters() {
    let html = "";
    for ( let i = 0; i < filters.length; i++ ) {
        let v = filters[i].value;
        if ( !v ) v = "<em>Any Value</em>";
        html += "<tr>";
        html += "<td>" + filters[i].type_name + "</td>";
        html += "<td>" + filters[i].comp + "</td>";
        html += "<td>" + v + "</td>";
        html += "<td><button class='btn btn-danger btn-xs' onclick='removeFilter(" + i + ")'><span class='glyphicon glyphicon-remove'></span></button></td>";
        html += "</tr>";
    }
    jQuery("#event_filter_table").html(html);
}


</script>