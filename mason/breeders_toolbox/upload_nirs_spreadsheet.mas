
<%args>
</%args>

<& /util/import_javascript.mas, classes => [ 'jquery', 'jqueryui', 'jquery.iframe-post-form', 'CXGN.BreedersToolbox.UploadPhenotype', 'CXGN.BreederSearch', 'CXGN.Trial' ] &>

<div id="manage_drone_imagery_top_div">

    <& /page/page_title.mas, title=>"" &>

<%perl>
my $buttons_html = "<button class='btn btn-primary' style='margin:3px' id='upload_drone_imagery_link'>Upload NIRS Spreadsheet</button><button class='btn btn-success' style='margin:3px' id='keras_cnn_drone_imagery_link'>NIRs Models</button>
<!-- <button class='btn btn-success' style='margin:3px' id='drone_imagery_calculate_statistics_link'>Calculate Statistics</button> -->
";
</%perl>

    <& /page/detail_page_2_col_section.mas, info_section_collapsed => 0, info_section_title => "<h4 style='display:inline'>NIRs Analysis</h4>", info_section_subtitle => 'Upload and analysis tools for NIRs', buttons_html => $buttons_html, icon_class => undef, col1_width_class => "col-sm-0", col2_width_class => "col-sm-12", info_section_id => "manage_drone_imagery_main" &>

</div>

<div class="modal fade" id="upload_phenotype_spreadsheet_dialog" name="upload_phenotype_spreadsheet_dialog" tabindex="-1" role="dialog" aria-labelledby="addSpreadsheetNIRSDialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="addSpreadsheetNIRSDialog">Upload NIRS Spreadsheet</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">

            <&| /page/explanation.mas, title=>'Template Information' &>
                <p>
                <b>File format information</b>
                <br>
                <a id="phenotype_upload_spreadsheet_format_info">Spreadsheet Format</a>
                </p>
            </&>

            <form class="form-horizontal" role="form" method="post" enctype="multipart/form-data" encoding="multipart/form-data" id="upload_spreadsheet_phenotype_file_form" name="upload_spreadsheet_phenotype_file_form">
                <div class="form-group">
                    <label class="col-sm-3 control-label">Spreadsheet Format: </label>
                    <div class="col-sm-9" >
                        <b>General upload format.</b>
                        <select class="form-control" id="upload_spreadsheet_phenotype_file_format" name="upload_spreadsheet_phenotype_file_format">
                            <option value="scio">NIRS all formats</option>
                            <!-- <option value="nirs">General NIRS upload</option> -->
                            
                        </select>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">Timestamps Included: </label>
                    <div class="col-sm-9" >
                        <input type="checkbox" id="upload_spreadsheet_phenotype_timestamp_checkbox" name="upload_spreadsheet_phenotype_timestamp_checkbox" />
                    </div>
                </div>
                <div id="upload_spreadsheet_phenotype_data_level_div">
                    <div class="form-group">
                        <label class="col-sm-3 control-label">Data Level: </label>
                        <div class="col-sm-9" >
                            <select class="form-control" id="upload_spreadsheet_phenotype_data_level" name="upload_spreadsheet_phenotype_data_level">
                                <option value="plots">Plots</option>
                                <option value="plants">Plants</option>
                                <option value="subplots">Subplots</option>
                                <option value="tissue_samples">Tissue Samples</option>
                            </select>
                        </div>
                    </div>
                </div>
                <div class="form-group">
                    <label class="col-sm-3 control-label">NIRS Spreadsheet: </label>
                    <div class="col-sm-9" >
                        <input type="file" id="upload_spreadsheet_phenotype_file_input" name="upload_spreadsheet_phenotype_file_input" encoding="multipart/form-data" />
                    </div>
                </div>


                <div id="upload_phenotype_spreadsheet_verify_status"></div>
                </div>
            </form><br/>

        </div>

        <div class="modal-footer">
            <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            <button type="button" class="btn btn-info" name="upload_spreadsheet_phenotype_submit_verify" id="upload_spreadsheet_phenotype_submit_verify">Verify</button>
            <button disabled type="button" class="btn btn-primary" name="upload_spreadsheet_phenotype_submit_store" id="upload_spreadsheet_phenotype_submit_store" title="First Verify Your File">Store</button>
        </div>

    </div>
  </div>
</div>

<div class="modal fade" id="phenotype_upload_spreadsheet_info_dialog" name="phenotype_upload_spreadsheet_info_dialog" tabindex="-1" role="dialog" aria-labelledby="phenotypeUploadInfoDialog">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="phenotypeUploadInfoDialog">Template Information</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">

            <h5>With this model is possible to upload NIRS data just need to follow these columns</h5>

            <h3>Upload NIRS .csv:</h3>

            <ul>
                <li><strong>id</strong>: It is an optional identification for each NIRS read. The id must be an integer.</li>
                <li><strong>sampling_id</strong>: It is an optional identification for each sample. Strings are allowed.</li>
                <li><strong>sampling_date</strong>: It is an optional field. The format allowed is: YYYY-MM-DD.</li>
                <li><strong>observationunit_name</strong>: It is a requiered field which matches with the databank. It can be the plot name, subplots, plant name, or tissue sample, depending how your trial is designed.</li>
                <li><strong>device_id</strong>: It is an optional field to identify your device. Strings are allowed.</li>
                <li><strong>device_type</strong>: It is a required field. It is possible upload data for a single device type. They can be:<strong>SCiO, QST, Foss6500, BunchiN500, or LinkSquare</strong>.</li>
                <li><strong>comments</strong>: Optional field for general comments.</li>
                <li>All other columns are required wavelengths. You can add how many columns you want upload, there isn't a limit.</li>
            </ul>
            <table class="table table-hover table-bordered table-condensed" >
                        <thead></thead>
                        <tbody>
                            <tr>
                                <td>id</td>
                                <td>sample_id</td>
                                <td>sampling_date</td>
                                <td>obserbationunit_name</td>
                                <td>device_id</td>
                                <td>device_type</td>
                                <td>comments</td>
                            </tr>
                        </tbody>
                    </table>

            <h3>Template for Upload NIRS .csv:</h3>
            <ul>
                <li>The observationunit_name and device_type must be valid for BreedBase.</li>
                <li><a href="https://docs.google.com/spreadsheets/d/1Zxxwhq6Dz1PvvUEMz3Xj3gBYTkchp4tGDfgsIHDNJB8/edit?usp=sharing">Upload NIRS .csv template</a></li>
            </ul>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_imagery_calculate_statistics_dialog" name="drone_imagery_calculate_statistics_dialog" tabindex="-1" role="dialog" aria-labelledby="droneImageryCalculateStatisticsDialog" data-backdrop="static">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryCalculateStatisticsDialog">Calculate statistics on NIRS phenotypes</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">

            <&| /util/workflow.mas, id=> "drone_imagery_calculate_statistics_workflow" &>
                <&| /util/workflow.mas:step, title=> "Field Trial" &>
                    <& /page/page_title.mas, title=>"Select the field trial(s) you are interested in." &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Field Trial(s): </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_calculate_statistics_trial_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_calculate_statistics_field_trial_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Trait Selection" &>
                    <& /page/page_title.mas, title=>"Select the observation variable(s) you are interested in downloading" &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Observation Variable Type: </label>
                            <div class="col-sm-9" >
                                <select class="form-control" id="drone_imagery_calculate_statistics_select_observation_variable_type">
                                    <option value="time_ontology">Time Series</option>
                                    <option value="">Single Trait</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Observation Variables Phenotyped in the Selected Field Trial: </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_calculate_statistics_trait_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_calculate_statistics_trait_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Statistics" &>
                    <& /page/page_title.mas, title=>"Select statistics to calculate" &>

                    <select class="form-control" id="drone_imagery_calculate_statistics_select_input">
                        <option value="">Select A Cross Validation Method</option>
                        <option value="random">Random</option>
                        <option value="stratified">Stratified</option>
                        <option value="cv1">CV1</option>
                        <option value="cv2">CV2</option>
                        <option value="cv0">CV0</option>
                        <option value="cv00">CV00</option>
                    </select>
                    <br>
                    <select class="form-control" id="nirs_model_algorithm">
                        <option value="">Available Model Algorithm</option>
                        <option value="random">PLSR</option>
                        <option value="stratified">Random Forest</option>
                        <option value="cv1">CVM with linear kernel</option>
                        <option value="cv2">CVM with radial kernel</option>
                    </select>

                    <div class="form-group form-inline">
                        <br>
                       <label for = niter_select>Number of sampling iterations&nbsp</label>
                       <input type="number" id="niter_select" name="niter_select" min="1" max="100" step="1" value="10">
                       <br>
                    </div> 
                    <div class="form-group form-inline">
                       <label for = tuneLength_select>Tuning length&nbsp</label>
                       <input type="number" id="tuneLength_select" name="tuneLength_select" min="1" max="30" step="1" value="10">
                       <br>
                    </div>
                    <div class="form-group form-inline">
                        <input type="checkbox" id="preprocessing_select" name="preprocessing_select" value="preprocessing">
                        <label for="preprocessing_select">&nbspInclude preprocessing?</label>
                        <br>
                    </div>

                    <div class="form-group form-inline">
                        <input type="checkbox" id="rf_var_imp_select" name="rf_var_imp_select" value="rfvarim">
                        <label for="rf_var_imp_select">&nbspShow random forest variable importance? (Note this may take a long time to run)</label>
                        <br>
                    </div>

                    <div id="drone_imagery_calculate_statistics_genotyping_protocol_div" style="display:none">
                        <hr>
                        <form class="form-horizontal">
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Genotyping Protocol To Calculate Genomic Relationship Matrix: </label>
                                <div class="col-sm-9" >
                                    <div id="drone_imagery_calculate_statistics_genotyping_protocol_select_div"></div>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Compute Genotypes From Parents: </label>
                                <div class="col-sm-9" >
                                    <select class="form-control" id="drone_image_calculate_statistics_genotyping_protocol_compute_from_parents_select">
                                        <option value="no">No</option>
                                        <option value="yes">Yes</option>
                                    </select>
                                </div>
                            </div>
                            <div class="form-group">
                                <label class="col-sm-3 control-label">Inversion Tolerance: </label>
                                <div class="col-sm-9" >
                                    <select class="form-control" id="drone_image_calculate_statistics_tolparinv_select">
                                        <option value="0.000001">0.000001</option>
                                        <option value="0.00001">0.00001</option>
                                        <option value="0.0001">0.0001</option>
                                        <option value="0.001">0.001</option>
                                        <option value="0.01">0.01</option>
                                    </select>
                                </div>
                            </div>
                        </form>
                    </div>

                    <div id="drone_imagery_calculate_statistics_marss_div" style="display:none">
                        $$x_t = Bx_{t-1} + u + w_t\\ w_t \sim MVN(0,Q)\\ y_t = Zx_t + a + v_t\\ v_t \sim MVN(0,R)\\ x_0 \sim MVN(\pi, \Lambda)$$
                        <hr>
                        <select class="form-control" id="drone_imagery_calculate_statistics_select_marss" name="drone_imagery_calculate_statistics_select_marss">
                            <option value="marss_predict_last_time_point">Predict Last Time Point</option>
                            <option value="marss_predict_last_two_time_points">Predict Last Two Time Point</option>
                        </select>
                    </div>

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_calculate_statistics_select_step">Submit</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Results" &>
                    <& /page/page_title.mas, title=>"Statistics results" &>

                    <hr>
                    <button class="btn btn-primary" id="drone_imagery_calculate_statistics_analysis_save_blups_genetic" style="display:none">Go To Save Analysis Results For Genetic BLUPS</button>
                    <button class="btn btn-primary" id="drone_imagery_calculate_statistics_analysis_save_blups_spatial" style="display:none">Go To Save Analysis Results For Spatial BLUPS</button>
                    <hr>

                    <div id ="drone_imagery_calculate_statistics_result_div">
                    </div>
                </&>
            </&>

        </div>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_imagery_keras_cnn_dialog" name="drone_imagery_keras_cnn_dialog" tabindex="-1" role="dialog" aria-labelledby="droneImageryKerasCNNDialog" data-backdrop="static">
  <div class="modal-dialog" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryKerasCNNDialog">Train and Predict Using NIRs Model</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">
            <button class="btn btn-primary" id="drone_imagery_keras_cnn_train_link">Train NIRs Model Using Spectrum and Phenotypes In Database</button>
            <br/><br/>
            <button class="btn btn-primary" id="drone_imagery_keras_cnn_predict_link">Predict Phenotypes Using Trained NIRs Model CNN</button>
            <br/><br/>
            <!-- <button class="btn btn-primary" id="drone_imagery_keras_cnn_autoencoder_vegetation_indices_link">Calculate NDVI and NDRE from Keras CNN Autoencoder Model</button> -->
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_imagery_train_keras_cnn_dialog" name="drone_imagery_train_keras_cnn_dialog" tabindex="-1" role="dialog" aria-labelledby="droneImageryTrainKerasCNNDialog" data-backdrop="static">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryTrainKerasCNNDialog">Train NIRs Model</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">

            <&| /util/workflow.mas, id=> "drone_imagery_train_keras_model_workflow" &>
                <&| /util/workflow.mas:step, title=> "Intro" &>
                    <& /page/page_title.mas, title=>"This workflow will guide you through NIRs model using spectrum and phenotypes in the database." &>
                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" onclick="Workflow.complete(this); return false;">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Field Trial(s)" &>
                    <& /page/page_title.mas, title=>"Select the field trial(s) you are interested in" &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Field Trial(s): </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_train_keras_cnn_trial_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_train_keras_model_field_trial_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Trait Selection" &>
                    <& /page/page_title.mas, title=>"Select the trait you are interested in predicting" &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Trait Phenotyped in the Selected Field Trial(s) To Predict: </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_train_keras_cnn_trait_select_div"></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Traits Phenotyped in the Selected Field Trial(s) As Auxiliary Trait(s): </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_train_keras_cnn_aux_trait_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <br/><br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_train_keras_model_trait_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Population Selection" &>
                    <& /page/page_title.mas, title=>"Select the population(s) you are specifically interested in predicting. Leave blank if you want to train on images from all germplasm in the selected field trial(s)." &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-5 control-label">Population(s) to include in training (Leave blank to include images from all germplasm in the selected field trials): </label>
                            <div class="col-sm-7" >
                                <div id="drone_imagery_train_keras_cnn_population_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <br/><br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_train_keras_model_population_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Drone Run Selection" &>
                    <& /page/page_title.mas, title=>"Select the drone runs you are interested in using in the model" &>


                    <select class="form-control" id="drone_imagery_calculate_statistics_select_input">
                        <option value="">Select A Cross Validation Method</option>
                        <option value="random">Random</option>
                        <option value="stratified">Stratified</option>
                        <option value="cv1">CV1</option>
                        <option value="cv2">CV2</option>
                        <option value="cv0">CV0</option>
                        <option value="cv00">CV00</option>
                    </select>
                    <br>
                    <select class="form-control" id="nirs_model_algorithm">
                        <option value="">Available Model Algorithm</option>
                        <option value="random">PLSR</option>
                        <option value="stratified">Random Forest</option>
                        <option value="cv1">CVM with linear kernel</option>
                        <option value="cv2">CVM with radial kernel</option>
                    </select>

                    <div class="form-group form-inline">
                        <br>
                       <label for = niter_select>Number of sampling iterations&nbsp</label>
                       <input type="number" id="niter_select" name="niter_select" min="1" max="100" step="1" value="10">
                       <br>
                    </div> 
                    <div class="form-group form-inline">
                       <label for = tuneLength_select>Tuning length&nbsp</label>
                       <input type="number" id="tuneLength_select" name="tuneLength_select" min="1" max="30" step="1" value="10">
                       <br>
                    </div>
                    <div class="form-group form-inline">
                        <input type="checkbox" id="preprocessing_select" name="preprocessing_select" value="preprocessing">
                        <label for="preprocessing_select">&nbspInclude preprocessing?</label>
                        <br>
                    </div>

                    <div class="form-group form-inline">
                        <input type="checkbox" id="rf_var_imp_select" name="rf_var_imp_select" value="rfvarim">
                        <label for="rf_var_imp_select">&nbspShow random forest variable importance? (Note this may take a long time to run)</label>
                        <br>
                    </div>

                    <!-- <table class="table table-bordered table-hover" id="drone_image_train_keras_drone_runs_table">
                        <thead>
                            <tr>
                                <th>Select <br/><input type="checkbox" id="drone_image_train_keras_drone_runs_table_select_all" checked>Select All</th>
                                <th>Drone Run Name</th>
                                <th>Drone Run Type</th>
                                <th>Drone Run Description</th>
                                <th>Drone Run Date</th>
                                <th>Drone Run GDD</th>
                                <th>Camera Type</th>
                                <th>Field Trial Name</th>
                                <th>Field Trial Description</th>
                            </tr>
                        </thead>
                    </table> -->

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_train_keras_model_drone_run_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Images Selection" &>
                    <& /page/page_title.mas, title=>"Select the types of images you are interested in using in the model" &>

                    <table class="table table-bordered table-hover" id="drone_image_train_keras_plot_polygon_image_type_table">
                        <thead>
                            <tr>
                                <!--th>Select <br/><input type="checkbox" id="drone_image_train_keras_plot_polygon_image_type_table_select_all" checked>Select All</th-->
                                <th>Select</th>
                                <th>Field Trial</th>
                                <th>Drone Run Name</th>
                                <th>Drone Run Band Name</th>
                                <th>Drone Run Band Type</th>
                                <th>Plot Polygon Type</th>
                                <th>Number of Images</th>
                            </tr>
                        </thead>
                    </table>

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_train_keras_model_plot_polygon_type_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Confirm" &>
                    <& /page/page_title.mas, title=>"Train the model!" &>

                    <br/><br/>
                    <div class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Model Type: </label>
                            <div class="col-sm-8" >
                                <select class="form-control" id="drone_image_train_keras_model_type" name="drone_image_train_keras_model_type" >
                                    <option value="KerasCNNSequentialSoftmaxCategorical">Keras CNN Sequential 16-32-64-128-512 Linear Regression</option>
                                    <option value="KerasCNNMLPExample">Keras CNN and MLP Example</option>
                                    <option value="SimpleKerasTunerCNNSequentialSoftmaxCategorical">Simple Keras Tuner CNN Sequential 16-32-64-128-512 Linear Regression</option>
                                    <option value="KerasTunerCNNSequentialSoftmaxCategorical">Keras Tuner CNN Sequential 16-32-64-128-512 Linear Regression</option>
                                    <option value="KerasCNNInceptionResNetV2">Keras CNN InceptionResNetV2 Linear Regression</option>
                                    <option value="KerasCNNLSTMDenseNet121ImageNetWeights">Keras LSTM DenseNet121 ImageNet Weights Linear Regression</option>
                                    <option value="KerasCNNInceptionResNetV2ImageNetWeights">Keras CNN Pre-Trained InceptionResNetV2 ImageNet Weights Linear Regression</option>
                                    <option value="KerasCNNDenseNet121ImageNetWeights">Keras DenseNet121 ImageNet Weights Linear Regression</option>
                                </select>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Model Name: </label>
                            <div class="col-sm-8" >
                                <input class="form-control" type="text" id="drone_image_train_keras_model_name" name="drone_image_train_keras_model_name" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Model Description: </label>
                            <div class="col-sm-8" >
                                <input class="form-control" type="text" id="drone_image_train_keras_model_desc" name="drone_image_train_keras_model_desc" />
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Genotyping Protocol for GRM: </label>
                            <div class="col-sm-8" >
                                <div id="drone_image_train_keras_model_genotyping_protocol_div"></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-4 control-label">Use Parents of Accessions For In-silico Hybrid: </label>
                            <div class="col-sm-8" >
                                <select class="form-control" id="drone_image_train_keras_model_use_parents_grm" name="drone_image_train_keras_model_use_parents_grm" >
                                    <option value="yes">Yes, GRM for parents of accessions if genotyped</option>
                                    <option value="no">No, GRM for accessions if genotyped</option>
                                </select>
                            </div>
                        </div>
                    </div>

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_train_keras_model_confirm_step">Train and Save Keras CNN Model</button>
                    </center>

                    <div id="drone_imagery_train_keras_model_results_div">
                    </div>
                </&>
            </&>

        </div>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_imagery_predict_keras_cnn_dialog" name="drone_imagery_predict_keras_cnn_dialog" tabindex="-1" role="dialog" aria-labelledby="droneImageryPredictKerasCNNDialog" data-backdrop="static">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryPredictKerasCNNDialog">Predict Phenotypes Using Trained Keras CNN Model</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">

            <&| /util/workflow.mas, id=> "drone_imagery_predict_keras_model_workflow" &>
                <&| /util/workflow.mas:step, title=> "Intro" &>
                    <& /page/page_title.mas, title=>"This workflow will guide you through predicting phenotypes from trained Kera CNN Models and images in the database." &>
                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" onclick="Workflow.complete(this); return false;">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Field Trial" &>
                    <& /page/page_title.mas, title=>"Select the field trial(s) you are interested in sourcing images from for prediction" &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Field Trial: </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_predict_keras_cnn_trial_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_predict_keras_model_field_trial_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Keras CNN Model Selection" &>
                    <& /page/page_title.mas, title=>"Select the Keras CNN Model for prediction" &>

                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Trained Keras CNN Model: </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_predict_keras_cnn_model_select_div"></div>
                            </div>
                        </div>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Traits Phenotyped in the Selected Field Trial(s) As Auxiliary Trait(s) (Currently Only For Mixed MLP/CNN Model): </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_predict_keras_cnn_aux_trait_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <br/><br/>

                    <center>
                    <button class="btn btn-primary" id="drone_imagery_predict_keras_model_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Population Selection" &>
                    <& /page/page_title.mas, title=>"Select the population(s) you are specifically interested in predicting. Leave blank if you want to train on images from all germplasm in the selected field trial(s)." &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-5 control-label">Population(s) to include in training (Leave blank to include images from all germplasm in the selected field trials): </label>
                            <div class="col-sm-7" >
                                <div id="drone_imagery_predict_keras_cnn_population_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <br/><br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_predict_keras_model_population_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Drone Run Selection" &>
                    <& /page/page_title.mas, title=>"Select the drone runs you are interested in sourcing images from for prediction" &>

                    <table class="table table-bordered table-hover" id="drone_image_predict_keras_drone_runs_table">
                        <thead>
                            <tr>
                                <th>Select <br/><input type="checkbox" id="drone_image_predict_keras_drone_runs_table_select_all" checked>Select All</th>
                                <th>Drone Run Name</th>
                                <th>Drone Run Type</th>
                                <th>Drone Run Description</th>
                                <th>Drone Run Date</th>
                                <th>Drone Run GDD</th>
                                <th>Camera Type</th>
                                <th>Field Trial Name</th>
                                <th>Field Trial Description</th>
                            </tr>
                        </thead>
                    </table>

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_predict_keras_model_drone_run_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Images Selection" &>
                    <& /page/page_title.mas, title=>"Select the types of images you are interested sourcing images from for prediction" &>

                    <table class="table table-bordered table-hover" id="drone_image_predict_keras_plot_polygon_image_type_table">
                        <thead>
                            <tr>
                                <!--th>Select <br/><input type="checkbox" id="drone_image_predict_keras_plot_polygon_image_type_table_select_all" checked>Select All</th-->
                                <th>Select</th>
                                <th>Field Trial</th>
                                <th>Drone Run Name</th>
                                <th>Drone Run Band Name</th>
                                <th>Drone Run Band Type</th>
                                <th>Plot Polygon Type</th>
                                <th>Number of Images</th>
                            </tr>
                        </thead>
                    </table>

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_predict_keras_model_plot_polygon_type_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Confirm" &>
                    <& /page/page_title.mas, title=>"Predict Phenotypes!" &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Prediction Model: </label>
                            <div class="col-sm-9" >
                                <select class="form-control" id="drone_imagery_keras_model_prediction_select">
                                    <option value="standard_cnn">Standard CNN Prediction</option>
                                    <option value="cnn_prediction_mixed_model">CNN Prediction For Mixed Model Prediction</option>
                                </select>
                            </div>
                        </div>
                    </form>

                    <div id="drone_imagery_keras_model_prediction_cnn_prediction_mixed_model_div" style="display:none">
                        $$y_t = \beta_{CNN,pred} + rep + 1|\mbox{GermplasmName}$$
                    </div>
                    <br/><br/>

                    <center>
                    <button class="btn btn-primary" id="drone_imagery_predict_keras_model_confirm_step">Submit</button>
                    </center>

                    <div id="drone_imagery_predict_keras_model_results_div">
                    </div>
                </&>
            </&>

        </div>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_imagery_keras_cnn_autoencoder_vi_dialog" name="drone_imagery_keras_cnn_autoencoder_vi_dialog" tabindex="-1" role="dialog" aria-labelledby="droneImageryAutoencoderKerasCNNVIDialog" data-backdrop="static">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryAutoencoderKerasCNNVIDialog">NDVI and NDRE from autoencoder Keras CNN</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">

            <&| /util/workflow.mas, id=> "drone_imagery_autoencoder_keras_model_vi_workflow" &>
                <&| /util/workflow.mas:step, title=> "Intro" &>
                    <& /page/page_title.mas, title=>"This workflow will guide you through extracted NDVI and NDRE values for autoencoder Keras CNN." &>
                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" onclick="Workflow.complete(this); return false;">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Field Trial" &>
                    <& /page/page_title.mas, title=>"Select the field trial(s) you are interested in sourcing images from for prediction" &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Field Trial: </label>
                            <div class="col-sm-9" >
                                <div id="drone_imagery_autoencoder_keras_cnn_vi_trial_select_div"></div>
                            </div>
                        </div>
                    </form>
                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_autoencoder_keras_vi_model_field_trial_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Drone Run Selection" &>
                    <& /page/page_title.mas, title=>"Select the drone runs you are interested in sourcing images from" &>

                    <table class="table table-bordered table-hover" id="drone_image_autoencoder_keras_vi_drone_runs_table">
                        <thead>
                            <tr>
                                <th>Select <br/><input type="checkbox" id="drone_image_autoencoder_keras_vi_drone_runs_table_select_all" checked>Select All</th>
                                <th>Drone Run Name</th>
                                <th>Drone Run Type</th>
                                <th>Drone Run Description</th>
                                <th>Drone Run Date</th>
                                <th>Drone Run GDD</th>
                                <th>Camera Type</th>
                                <th>Field Trial Name</th>
                                <th>Field Trial Description</th>
                            </tr>
                        </thead>
                    </table>

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_autoencoder_keras_vi_model_drone_run_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Images Selection" &>
                    <& /page/page_title.mas, title=>"Select the types of images you are interested sourcing images from" &>

                    <table class="table table-bordered table-hover" id="drone_image_autoencoder_keras_vi_plot_polygon_image_type_table">
                        <thead>
                            <tr>
                                <!--th>Select <br/><input type="checkbox" id="drone_image_autoencoder_keras_vi_plot_polygon_image_type_table_select_all" checked>Select All</th-->
                                <th>Select</th>
                                <th>Field Trial</th>
                                <th>Drone Run Name</th>
                                <th>Drone Run Band Name</th>
                                <th>Drone Run Band Type</th>
                                <th>Plot Polygon Type</th>
                                <th>Number of Images</th>
                            </tr>
                        </thead>
                    </table>

                    <br/><br/>
                    <center>
                    <button class="btn btn-primary" id="drone_imagery_autoencoder_keras_vi_model_plot_polygon_type_select_step">Go to Next Step</button>
                    </center>
                </&>
                <&| /util/workflow.mas:step, title=> "Confirm" &>
                    <& /page/page_title.mas, title=>"Calculate NDVI and NDRE Autoencoder Phenotypes" &>
                    <br/><br/>
                    <form class="form-horizontal">
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Autoencoder Model: </label>
                            <div class="col-sm-9" >
                                <select class="form-control" id="drone_imagery_keras_model_autoencoder_vi_select">
                                    <option value="keras_autoencoder_64_32_filters_16_latent">Keras Autoencoder</option>
                                </select>
                            </div>
                        </div>
                    </form>

                    <center>
                    <button class="btn btn-primary" id="drone_imagery_autoencoder_keras_vi_model_confirm_step">Submit</button>
                    </center>

                    <div id="drone_imagery_autoencoder_keras_vi_model_results_div">
                    </div>
                </&>
            </&>

        </div>

      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_imagery_standard_process_complete_dialog" name="drone_imagery_standard_process_complete_dialog" tabindex="-1" role="dialog" aria-labelledby="droneImageryStandardProcessCompleteDialog" data-backdrop="static">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryStandardProcessCompleteDialog">Standard Process Complete</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">
            <p>
                <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;"></span>
                It will take time to finish processing your drone run and calculating phenotypes for all plot polygon images, vegetative indices, and processing combinations. Once it is complete, the "Processing Icon" on the Manage->Drone Imagery page will disappear from the drone run.
            </p>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-primary" data-dismiss="modal">Finish</button>
      </div>
    </div>
  </div>
</div>




<script defer="defer">

jQuery(document).ready(function() {

    jQuery('#upload_spreadsheet_phenotypes_link').click( function() {
        jQuery('#upload_phenotype_spreadsheet_dialog').modal("show");
    });

    jQuery("#phenotype_upload_spreadsheet_format_info").click( function () {
        jQuery("#phenotype_upload_spreadsheet_info_dialog" ).modal("show");
    });

});


// Calculate statistics
    //

    var manage_drone_imagery_calculate_statistics_field_trial_id_array = undefined;
    var manage_drone_imagery_calculate_statistics_field_trial_id_string = "";
    var manage_drone_imagery_calculate_statistics_observation_variable_type;
    var manage_drone_imagery_calculate_statistics_trait_ids = [];
    var manage_drone_imagery_calculate_statistics_trait_names = [];
    var manage_drone_imagery_calculate_statistics_accession_names = [];
    var manage_drone_imagery_calculate_statistics_plot_names = [];
    var manage_drone_imagery_calculate_statistics_select = '';
    var manage_drone_imagery_calculate_statistics_result_blup_genetic_data = {};
    var manage_drone_imagery_calculate_statistics_result_blup_spatial_data = {};
    var manage_drone_imagery_calculate_statistics_phenotype_training_file;
    var manage_drone_imagery_calculate_statistics_grm_training_file;
    var manage_drone_imagery_calculate_statistics_response = {};

    jQuery('#drone_imagery_calculate_statistics_link').click(function(){
        get_select_box('trials', 'drone_imagery_calculate_statistics_trial_select_div', { 'name' : 'drone_imagery_calculate_statistics_field_trial_id', 'id' : 'drone_imagery_calculate_statistics_field_trial_id', 'empty':1, 'multiple':1 });

        jQuery('#drone_imagery_calculate_statistics_dialog').modal('show');
    });

    jQuery('#drone_imagery_calculate_statistics_select_observation_variable_type').change(function(){
        manage_drone_imagery_calculate_statistics_observation_variable_type = jQuery('#drone_imagery_calculate_statistics_select_observation_variable_type').val();
        if (manage_drone_imagery_calculate_statistics_observation_variable_type == 'time_ontology') {
            get_select_box('traits', 'drone_imagery_calculate_statistics_trait_select_div', { 'name' : 'drone_imagery_calculate_statistics_trait_id_select', 'id' : 'drone_imagery_calculate_statistics_trait_id_select', 'empty':1, 'multiple':1, 'size': 20, 'trial_ids':manage_drone_imagery_calculate_statistics_field_trial_id_string, 'stock_type':'plot', 'contains_composable_cv_type':manage_drone_imagery_calculate_statistics_observation_variable_type, 'select_format':'component_table_select' });
        }
        else {
            get_select_box('traits', 'drone_imagery_calculate_statistics_trait_select_div', { 'name' : 'drone_imagery_calculate_statistics_trait_id_select', 'id' : 'drone_imagery_calculate_statistics_trait_id_select', 'empty':1, 'multiple':1, 'size': 20, 'trial_ids':manage_drone_imagery_calculate_statistics_field_trial_id_string, 'stock_type':'plot', 'contains_composable_cv_type':manage_drone_imagery_calculate_statistics_observation_variable_type });
        }
    });

    jQuery('#drone_imagery_calculate_statistics_field_trial_select_step').click(function(){
        manage_drone_imagery_calculate_statistics_field_trial_id_array = undefined;
        manage_drone_imagery_calculate_statistics_field_trial_id_string = "";
        manage_drone_imagery_calculate_statistics_field_trial_id_array = jQuery('#drone_imagery_calculate_statistics_field_trial_id').val();
        manage_drone_imagery_calculate_statistics_field_trial_id_string = manage_drone_imagery_calculate_statistics_field_trial_id_array.join(",");
        manage_drone_imagery_calculate_statistics_observation_variable_type = jQuery('#drone_imagery_calculate_statistics_select_observation_variable_type').val();
        if (manage_drone_imagery_calculate_statistics_field_trial_id_string == '') {
            alert('Please select a field trial first!');
        } else {
            if (manage_drone_imagery_calculate_statistics_observation_variable_type == 'time_ontology') {
                get_select_box('traits', 'drone_imagery_calculate_statistics_trait_select_div', { 'name' : 'drone_imagery_calculate_statistics_trait_id_select', 'id' : 'drone_imagery_calculate_statistics_trait_id_select', 'empty':1, 'multiple':1, 'size': 20, 'trial_ids':manage_drone_imagery_calculate_statistics_field_trial_id_string, 'stock_type':'plot', 'contains_composable_cv_type':manage_drone_imagery_calculate_statistics_observation_variable_type, 'select_format':'component_table_select' });
            }
            else {
                get_select_box('traits', 'drone_imagery_calculate_statistics_trait_select_div', { 'name' : 'drone_imagery_calculate_statistics_trait_id_select', 'id' : 'drone_imagery_calculate_statistics_trait_id_select', 'empty':1, 'multiple':1, 'size': 20, 'trial_ids':manage_drone_imagery_calculate_statistics_field_trial_id_string, 'stock_type':'plot', 'contains_composable_cv_type':manage_drone_imagery_calculate_statistics_observation_variable_type });
            }

            Workflow.complete("#drone_imagery_calculate_statistics_field_trial_select_step");
            Workflow.focus('#drone_imagery_calculate_statistics_workflow', 1);
        }
        return false;
    });

    jQuery('#drone_imagery_calculate_statistics_trait_select_step').click(function(){
        get_select_box('genotyping_protocol', 'drone_imagery_calculate_statistics_genotyping_protocol_select_div', { 'name' : 'drone_image_calculate_statistics_genotyping_protocol_select', 'id' : 'drone_image_calculate_statistics_genotyping_protocol_select', 'empty':1 });

        manage_drone_imagery_calculate_statistics_trait_ids = [];

        if (manage_drone_imagery_calculate_statistics_observation_variable_type == 'time_ontology') {
            jQuery('input[name="drone_imagery_calculate_statistics_trait_id_select"]').each(function() {
                if (this.checked){
                    manage_drone_imagery_calculate_statistics_trait_ids.push(jQuery(this).val());
                }
            });
        }
        else {
            manage_drone_imagery_calculate_statistics_trait_ids = jQuery('#drone_imagery_calculate_statistics_trait_id_select').val();
            if (manage_drone_imagery_calculate_statistics_trait_ids == null || manage_drone_imagery_calculate_statistics_trait_ids == undefined) {
                alert('Please select at least one observation variable!');
                return false;
            }
        }

        if (manage_drone_imagery_calculate_statistics_trait_ids.length < 1){
            alert('Please select at least one observation variable!');
        } else {
            Workflow.complete("#drone_imagery_calculate_statistics_trait_select_step");
            Workflow.focus('#drone_imagery_calculate_statistics_workflow', 2);
        }
        return false;
    });

    jQuery('#drone_imagery_calculate_statistics_select_input').change(function(){
        manage_drone_imagery_calculate_statistics_select = jQuery('#drone_imagery_calculate_statistics_select_input').val();
        if (manage_drone_imagery_calculate_statistics_select == 'marss_germplasmname_block') {
            jQuery('#drone_imagery_calculate_statistics_marss_div').show();
            jQuery('#drone_imagery_calculate_statistics_genotyping_protocol_div').hide();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_genetic').hide();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_spatial').hide();
        }
        else if (manage_drone_imagery_calculate_statistics_select == 'lmer_germplasmname_replicate') {
            jQuery('#drone_imagery_calculate_statistics_marss_div').hide();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_genetic').show();
            jQuery('#drone_imagery_calculate_statistics_genotyping_protocol_div').hide();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_spatial').hide();
        }
        else if (manage_drone_imagery_calculate_statistics_select == 'sommer_grm_spatial_genetic_blups') {
            jQuery('#drone_imagery_calculate_statistics_marss_div').hide();
            jQuery('#drone_imagery_calculate_statistics_genotyping_protocol_div').show();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_genetic').show();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_spatial').show();
        }
        else {
            jQuery('#drone_imagery_calculate_statistics_marss_div').hide();
            jQuery('#drone_imagery_calculate_statistics_genotyping_protocol_div').hide();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_genetic').hide();
            jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_spatial').hide();
        }
    });

    jQuery('#drone_imagery_calculate_statistics_select_step').click(function(){
        manage_drone_imagery_calculate_statistics_select = jQuery('#drone_imagery_calculate_statistics_select_input').val();

        if (manage_drone_imagery_calculate_statistics_select == 'marss_germplasmname_block' && manage_drone_imagery_calculate_statistics_observation_variable_type != 'time_ontology') {
            alert('The MARSS model fit and prediction only works for Time Series traits! Please go to Trait Selection and select time series traits.');
            return false;
        }

        jQuery.ajax({
            url : '/api/drone_imagery/calculate_statistics',
            type : 'POST',
            data : {
                'observation_variable_id_list':JSON.stringify(manage_drone_imagery_calculate_statistics_trait_ids),
                'field_trial_id_list':JSON.stringify(manage_drone_imagery_calculate_statistics_field_trial_id_array),
                'statistics_select':manage_drone_imagery_calculate_statistics_select,
                'statistics_select_marss_options':jQuery('#drone_imagery_calculate_statistics_select_marss').val(),
                'protocol_id':jQuery('#drone_image_calculate_statistics_genotyping_protocol_select').val(),
                'compute_from_parents':jQuery('#drone_image_calculate_statistics_genotyping_protocol_compute_from_parents_select').val(),
                'tolparinv':jQuery('#drone_image_calculate_statistics_tolparinv_select').val()
            },
            beforeSend: function() {
                jQuery("#working_modal").modal("show");
            },
            success: function(response){
                console.log(response);
                jQuery("#working_modal").modal("hide");

                if (response.error) {
                    alert(response.error);
                }
                else {
                    manage_drone_imagery_calculate_statistics_response = response;

                    var html = '';
                    if (response.unique_accessions.length > 0 && response.unique_traits.length > 0) {
                        manage_drone_imagery_calculate_statistics_accession_names = response.unique_accessions;
                        manage_drone_imagery_calculate_statistics_trait_names = response.unique_traits;
                        manage_drone_imagery_calculate_statistics_result_blup_genetic_data = response.result_blup_genetic_data;
                        manage_drone_imagery_calculate_statistics_phenotype_training_file = response.stats_tempfile;
                        manage_drone_imagery_calculate_statistics_grm_training_file = response.grm_file;

                        html = html + '<table class="table table-bordered table-hover"><thead><tr><th>Accessions</th>';
                        for (var i=0; i<response.unique_traits.length; i++) {
                            html = html + '<th>'+response.unique_traits[i]+'</th>';
                        }
                        html = html + '</tr></thead><tbody>';
                        for (var k=0; k<response.unique_accessions.length; k++) {
                            var acc = response.unique_accessions[k];
                            html = html + '<tr><td>'+acc+'</td>';
                            for (var i=0; i<response.unique_traits.length; i++) {
                                html = html + '<td>'+response.result_blup_genetic_data[acc][response.unique_traits[i]][0]+'</td>';
                            }
                            html = html + '</tr>';
                        }
                        html = html + '</tbody></table>';
                    }

                    if (response.unique_plots.length > 0 && response.unique_traits.length > 0) {
                        manage_drone_imagery_calculate_statistics_plot_names = response.unique_plots;
                        manage_drone_imagery_calculate_statistics_trait_names = response.unique_traits;
                        manage_drone_imagery_calculate_statistics_result_blup_spatial_data = response.result_blup_spatial_data;

                        html = html + '<table class="table table-bordered table-hover"><thead><tr><th>Accessions</th>';
                        for (var i=0; i<response.unique_traits.length; i++) {
                            html = html + '<th>'+response.unique_traits[i]+'</th>';
                        }
                        html = html + '</tr></thead><tbody>';
                        for (var k=0; k<response.unique_plots.length; k++) {
                            var plot = response.unique_plots[k];
                            html = html + '<tr><td>'+plot+'</td>';
                            for (var i=0; i<response.unique_traits.length; i++) {
                                html = html + '<td>'+response.result_blup_spatial_data[plot][response.unique_traits[i]][0]+'</td>';
                            }
                            html = html + '</tr>';
                        }
                        html = html + '</tbody></table>';
                    }

                    if (response.results.length > 0) {
                        html = '<table class="table table-bordered table-hover"><thead><tr><th>Observation Variable</th><th>Statistics</th><th>Plot</th></tr></thead><tbody>';
                        for (var i=0; i<response.results.length; i++) {
                            html = html + '<tr><td>'+response.results[i][0]+'</td><td>'+response.results[i][1]+'</td><td><img src="'+response.results[i][2]+'"></td></tr>';
                        }
                        html = html + '</tbody></table>';
                    }
                    jQuery('#drone_imagery_calculate_statistics_result_div').html(html);

                    Workflow.complete("#drone_imagery_calculate_statistics_select_step");
                    Workflow.focus('#drone_imagery_calculate_statistics_workflow', 3);
                }
            },
            error: function(response){
                jQuery("#working_modal").modal("hide");
                alert('Error calculating statistics!')
            }
        });
    });

    jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_genetic').click(function(){
        jQuery('#generic_save_analysis_dialog').modal('show');

        var drone_imagery_stats_parameters = {};
        var drone_imagery_stats_protocol = '';
        var drone_imagery_stats_auxiliary_files = [];
        var drone_imagery_stats_result_summary = {};

        if (manage_drone_imagery_calculate_statistics_select == 'sommer_grm_spatial_genetic_blups') {
            var drone_imagery_stats_tolparinv_param = jQuery('#drone_image_calculate_statistics_tolparinv_select').val();
            var drone_imagery_stats_numbers_traits = manage_drone_imagery_calculate_statistics_response.unique_traits.length;

            var drone_imagery_stats_mv_traits = [];
            for (var i=1; i<drone_imagery_stats_numbers_traits+1; i++) {
                drone_imagery_stats_mv_traits.push('t'+i);
            }
            var drone_imagery_stats_mv_traits_string = drone_imagery_stats_mv_traits.join();

            drone_imagery_stats_protocol = 'mmer('+drone_imagery_stats_mv_traits_string+'~1, random=~vs(id, Gu=geno_mat, Gtc=unsm('+drone_imagery_stats_numbers_traits+')) +vs(rowNumberFactor, Gtc=diag('+drone_imagery_stats_numbers_traits+')) +vs(colNumberFactor, Gtc=diag('+drone_imagery_stats_numbers_traits+')), rcov=~vs(units, Gtc=unsm('+drone_imagery_stats_numbers_traits+')), data=mat, tolparinv='+drone_imagery_stats_tolparinv_param+');';

            drone_imagery_stats_parameters = {
                'tolparinv':drone_imagery_stats_tolparinv_param,
                'genotyping_protocol_id':jQuery('#drone_image_calculate_statistics_genotyping_protocol_select').val(),
                'compute_genotypes_from_parents':jQuery('#drone_image_calculate_statistics_genotyping_protocol_compute_from_parents_select').val(),
                'protocol':drone_imagery_stats_protocol
            };

            drone_imagery_stats_auxiliary_files = [{'auxiliary_model_file':manage_drone_imagery_calculate_statistics_response.grm_file, auxiliary_model_file_archive_type:'nicksmixedmodels_v1.01_sommer_grm_spatial_genetic_blups_grm_file'}];
        }
        if (manage_drone_imagery_calculate_statistics_select == 'lmer_germplasmname_replicate') {
            drone_imagery_stats_protocol = 'lmer(t1~replicate + 1|germplasmName, data=mat, na.action = na.omit)';
            drone_imagery_stats_parameters = {
                'protocol':drone_imagery_stats_protocol
            };
        }

        jQuery('#generic_save_analysis_protocol').val(drone_imagery_stats_protocol);
        jQuery('#generic_save_analysis_model_properties').val(JSON.stringify(drone_imagery_stats_parameters));
        //jQuery('#generic_save_analysis_dataset_id').val();
        jQuery('#generic_save_analysis_accession_names').val(JSON.stringify(manage_drone_imagery_calculate_statistics_response.unique_accessions));
        jQuery('#generic_save_analysis_trait_names').val(JSON.stringify(manage_drone_imagery_calculate_statistics_response.unique_traits));
        jQuery('#generic_save_analysis_statistical_ontology_term').val(manage_drone_imagery_calculate_statistics_response.statistical_ontology_term);
        //jQuery('#generic_save_analysis_design').val();
        jQuery('#generic_save_analysis_result_values').val(JSON.stringify(manage_drone_imagery_calculate_statistics_response.result_blup_genetic_data));
        jQuery('#generic_save_analysis_result_values_type').val(manage_drone_imagery_calculate_statistics_response.analysis_result_values_type);
        jQuery('#generic_save_analysis_result_summary_values').val(JSON.stringify(drone_imagery_stats_result_summary));
        jQuery('#generic_save_analysis_model_language').val(manage_drone_imagery_calculate_statistics_response.analysis_model_language);
        jQuery('#generic_save_analysis_model_type').val(manage_drone_imagery_calculate_statistics_response.analysis_model_type);
        jQuery('#generic_save_analysis_model_application_name').val(manage_drone_imagery_calculate_statistics_response.application_name);
        jQuery('#generic_save_analysis_model_application_version').val(manage_drone_imagery_calculate_statistics_response.application_version);
        //jQuery('#generic_save_analysis_model_file').val();
        //jQuery('#generic_save_analysis_model_archived_model_file_type').val();
        jQuery('#generic_save_analysis_model_training_data_file').val(manage_drone_imagery_calculate_statistics_response.stats_tempfile);
        jQuery('#generic_save_analysis_model_archived_training_data_file_type').val(manage_drone_imagery_calculate_statistics_response.analysis_model_training_data_file_type);
        jQuery('#generic_save_analysis_model_auxiliary_files').val(JSON.stringify(drone_imagery_stats_auxiliary_files));

        return false;
    });

    jQuery('#drone_imagery_calculate_statistics_analysis_save_blups_spatial').click(function(){
        if (manage_drone_imagery_calculate_statistics_field_trial_id_array.length>1) {
            alert('Saving spatial BLUPs currently only implemented for a single trial, so only select one field trial in your analysis');
            return false;
        }

        jQuery('#generic_save_analysis_dialog').modal('show');

        var drone_imagery_stats_result_summary = {};

        var drone_imagery_stats_tolparinv_param = jQuery('#drone_image_calculate_statistics_tolparinv_select').val();
        var drone_imagery_stats_numbers_traits = manage_drone_imagery_calculate_statistics_response.unique_traits.length;

        var drone_imagery_stats_mv_traits = [];
        for (var i=1; i<drone_imagery_stats_numbers_traits+1; i++) {
            drone_imagery_stats_mv_traits.push('t'+i);
        }
        var drone_imagery_stats_mv_traits_string = drone_imagery_stats_mv_traits.join();

        var drone_imagery_stats_protocol = 'mmer('+drone_imagery_stats_mv_traits_string+'~1, random=~vs(id, Gu=geno_mat, Gtc=unsm('+drone_imagery_stats_numbers_traits+')) +vs(rowNumberFactor, Gtc=diag('+drone_imagery_stats_numbers_traits+')) +vs(colNumberFactor, Gtc=diag('+drone_imagery_stats_numbers_traits+')), rcov=~vs(units, Gtc=unsm('+drone_imagery_stats_numbers_traits+')), data=mat, tolparinv='+drone_imagery_stats_tolparinv_param+');';

        var drone_imagery_stats_parameters = {
            'tolparinv':drone_imagery_stats_tolparinv_param,
            'genotyping_protocol_id':jQuery('#drone_image_calculate_statistics_genotyping_protocol_select').val(),
            'compute_genotypes_from_parents':jQuery('#drone_image_calculate_statistics_genotyping_protocol_compute_from_parents_select').val(),
            'protocol':drone_imagery_stats_protocol
        };

        var drone_imagery_stats_auxiliary_files = [{'auxiliary_model_file':manage_drone_imagery_calculate_statistics_response.grm_file, auxiliary_model_file_archive_type:'nicksmixedmodels_v1.01_sommer_grm_spatial_genetic_blups_grm_file'}];

        jQuery('#generic_save_analysis_protocol').val(drone_imagery_stats_protocol);
        jQuery('#generic_save_analysis_model_properties').val(JSON.stringify(drone_imagery_stats_parameters));
        //jQuery('#generic_save_analysis_dataset_id').val();
        jQuery('#generic_save_analysis_accession_names').val(JSON.stringify(manage_drone_imagery_calculate_statistics_response.unique_accessions));
        jQuery('#generic_save_analysis_trait_names').val(JSON.stringify(manage_drone_imagery_calculate_statistics_response.unique_traits));
        jQuery('#generic_save_analysis_statistical_ontology_term').val(manage_drone_imagery_calculate_statistics_response.statistical_ontology_term);
        jQuery('#generic_save_analysis_design').val(JSON.stringify(manage_drone_imagery_calculate_statistics_response.field_trial_design));
        jQuery('#generic_save_analysis_result_values').val(JSON.stringify(manage_drone_imagery_calculate_statistics_response.result_blup_spatial_data));
        jQuery('#generic_save_analysis_result_values_type').val('analysis_result_values_match_precomputed_design');
        jQuery('#generic_save_analysis_result_summary_values').val(JSON.stringify(drone_imagery_stats_result_summary));
        jQuery('#generic_save_analysis_model_language').val(manage_drone_imagery_calculate_statistics_response.analysis_model_language);
        jQuery('#generic_save_analysis_model_type').val(manage_drone_imagery_calculate_statistics_response.analysis_model_type);
        jQuery('#generic_save_analysis_model_application_name').val(manage_drone_imagery_calculate_statistics_response.application_name);
        jQuery('#generic_save_analysis_model_application_version').val(manage_drone_imagery_calculate_statistics_response.application_version);
        //jQuery('#generic_save_analysis_model_file').val();
        //jQuery('#generic_save_analysis_model_archived_model_file_type').val();
        jQuery('#generic_save_analysis_model_training_data_file').val(manage_drone_imagery_calculate_statistics_response.stats_tempfile);
        jQuery('#generic_save_analysis_model_archived_training_data_file_type').val(manage_drone_imagery_calculate_statistics_response.analysis_model_training_data_file_type);
        jQuery('#generic_save_analysis_model_auxiliary_files').val(JSON.stringify(drone_imagery_stats_auxiliary_files));

        return false;
    });
//
//
// Keras CNN Training JS
    //

    var manage_drone_imagery_train_keras_drone_run_ids = [];
    var manage_drone_imagery_train_keras_field_trial_id_array = [];
    var manage_drone_imagery_train_keras_field_trial_id_string = '';
    var manage_drone_imagery_train_keras_trait_id;
    var manage_drone_imagery_train_keras_aux_trait_ids;
    var manage_drone_imagery_train_keras_plot_polygon_type_ids = [];
    var manage_drone_imagery_train_keras_temporary_model_file = '';
    var manage_drone_imagery_train_keras_temporary_model_input_file = '';
    var manage_drone_imagery_train_keras_temporary_model_input_aux_file = '';
    var manage_drone_imagery_train_keras_class_map = '';

    var manage_drone_imagery_predict_keras_drone_run_ids = [];
    var manage_drone_imagery_predict_keras_field_trial_id_array = [];
    var manage_drone_imagery_predict_keras_field_trial_id_string = '';
    var manage_drone_imagery_predict_keras_plot_polygon_type_ids = [];
    var manage_drone_imagery_predict_keras_model_id = '';
    var manage_drone_imagery_predict_keras_aux_trait_ids;

    var manage_drone_imagery_autoencoder_keras_vi_field_trial_id_array = [];
    var manage_drone_imagery_autoencoder_keras_vi_field_trial_id_string = '';
    var manage_drone_imagery_autoencoder_keras_vi_drone_run_ids = [];
    var manage_drone_imagery_autoencoder_keras_vi_plot_polygon_type_ids = [];
    var manage_drone_imagery_autoencoder_keras_vi_time_cvterm_id = '';

    jQuery('#keras_cnn_drone_imagery_link').click(function(){
        jQuery('#drone_imagery_keras_cnn_dialog').modal('show');
    });

    jQuery('#drone_imagery_keras_cnn_train_link').click(function(){
        get_select_box('trials', 'drone_imagery_train_keras_cnn_trial_select_div', { 'name' : 'drone_imagery_train_keras_cnn_field_trial_id', 'id' : 'drone_imagery_train_keras_cnn_field_trial_id', 'empty':1, 'multiple':1 });

        jQuery('#drone_imagery_train_keras_cnn_dialog').modal('show');
    });

    jQuery('#drone_imagery_train_keras_model_field_trial_select_step').click(function(){
        manage_drone_imagery_train_keras_field_trial_id_array = [];
        manage_drone_imagery_train_keras_field_trial_id_string = '';
        manage_drone_imagery_train_keras_field_trial_id_array = jQuery('#drone_imagery_train_keras_cnn_field_trial_id').val();
        manage_drone_imagery_train_keras_field_trial_id_string = manage_drone_imagery_train_keras_field_trial_id_array.join(",");
        if (manage_drone_imagery_train_keras_field_trial_id_string == '') {
            alert('Please select a field trial first!');
        } else {
            get_select_box('traits', 'drone_imagery_train_keras_cnn_trait_select_div', { 'name' : 'drone_imagery_train_keras_cnn_trait_id', 'id' : 'drone_imagery_train_keras_cnn_trait_id', 'empty':1, 'trial_ids':manage_drone_imagery_train_keras_field_trial_id_string, 'stock_type':'plot' });

            get_select_box('traits', 'drone_imagery_train_keras_cnn_aux_trait_select_div', { 'name' : 'drone_imagery_train_keras_cnn_aux_trait_ids', 'id' : 'drone_imagery_train_keras_cnn_aux_trait_ids', 'empty':1, 'multiple':1, 'trial_ids':manage_drone_imagery_train_keras_field_trial_id_string, 'stock_type':'plot' });

            jQuery('#drone_image_train_keras_drone_runs_table').DataTable({
                paging : false,
                destroy : true,
                ajax : '/api/drone_imagery/drone_runs?select_checkbox_name=train_keras_drone_imagery_drone_run_select&checkbox_select_all=1&field_trial_ids='+manage_drone_imagery_train_keras_field_trial_id_string
            });

            Workflow.complete("#drone_imagery_train_keras_model_field_trial_select_step");
            Workflow.focus('#drone_imagery_train_keras_model_workflow', 2);
        }
        return false;
    });

    jQuery('#drone_imagery_train_keras_model_trait_select_step').click(function(){
        manage_drone_imagery_train_keras_trait_id = undefined;
        manage_drone_imagery_train_keras_aux_trait_ids = undefined;
        manage_drone_imagery_train_keras_trait_id = jQuery('#drone_imagery_train_keras_cnn_trait_id').val();
        manage_drone_imagery_train_keras_aux_trait_ids = jQuery('#drone_imagery_train_keras_cnn_aux_trait_ids').val();
        if (manage_drone_imagery_train_keras_trait_id == undefined || manage_drone_imagery_train_keras_trait_id == 'null' || manage_drone_imagery_train_keras_trait_id == '') {
            alert('Please select a phenotyped trait first!');
        } else {

            get_select_box('stocks', 'drone_imagery_train_keras_cnn_population_select_div', { 'name' : 'drone_imagery_train_keras_cnn_population_id', 'id' : 'drone_imagery_train_keras_cnn_population_id', 'empty':1, 'multiple':1, 'stock_type_name':'population' });

            Workflow.complete("#drone_imagery_train_keras_model_trait_select_step");
            Workflow.focus('#drone_imagery_train_keras_model_workflow', 3);
        }
        return false;
    });

    jQuery('#drone_imagery_train_keras_model_population_select_step').click(function(){
        Workflow.complete("#drone_imagery_train_keras_model_population_select_step");
        Workflow.focus('#drone_imagery_train_keras_model_workflow', 4);
    });

    jQuery('#drone_imagery_train_keras_model_drone_run_select_step').click(function(){
        manage_drone_imagery_train_keras_drone_run_ids = [];
        jQuery('input[name="train_keras_drone_imagery_drone_run_select"]:checked').each(function() {
            manage_drone_imagery_train_keras_drone_run_ids.push(jQuery(this).val());
        });
        if (manage_drone_imagery_train_keras_drone_run_ids.length < 1){
            alert('Please select at least one drone run!');
        } else {

            jQuery('#drone_image_train_keras_plot_polygon_image_type_table').DataTable({
                destroy : true,
                paging : false,
                ajax : '/api/drone_imagery/plot_polygon_types?checkbox_select_standard_4=1&select_checkbox_name=train_keras_drone_imagery_plot_polygon_type_select&field_trial_ids='+manage_drone_imagery_train_keras_field_trial_id_string+'&drone_run_ids='+JSON.stringify(manage_drone_imagery_train_keras_drone_run_ids)
            });

            Workflow.complete("#drone_imagery_train_keras_model_drone_run_select_step");
            Workflow.focus('#drone_imagery_train_keras_model_workflow', 5);
        }
        return false;
    });

    jQuery('#drone_image_train_keras_drone_runs_table_select_all').change(function(){
        jQuery('input[name="train_keras_drone_imagery_drone_run_select"]').each(function() {
            jQuery(this).prop('checked', jQuery('#drone_image_train_keras_drone_runs_table_select_all').prop("checked"));
        });
    });

    jQuery('#drone_image_train_keras_plot_polygon_image_type_table_select_all').change(function() {
        jQuery('input[name="train_keras_drone_imagery_plot_polygon_type_select"]').each(function() {
            jQuery(this).prop('checked', jQuery('#drone_image_train_keras_plot_polygon_image_type_table_select_all').prop("checked"));
        });
    });

    jQuery('#drone_imagery_train_keras_model_plot_polygon_type_select_step').click(function(){
        manage_drone_imagery_train_keras_plot_polygon_type_ids = [];
        jQuery('input[name="train_keras_drone_imagery_plot_polygon_type_select"]:checked').each(function() {
            manage_drone_imagery_train_keras_plot_polygon_type_ids.push(jQuery(this).val());
        });
        if (manage_drone_imagery_train_keras_plot_polygon_type_ids.length < 1){
            alert('Please select at least one plot polygon type!');
        } else {
            Workflow.complete("#drone_imagery_train_keras_model_plot_polygon_type_select_step");
            Workflow.focus('#drone_imagery_train_keras_model_workflow', 6);
        }

        get_select_box('genotyping_protocol', 'drone_image_train_keras_model_genotyping_protocol_div', { 'name' : 'drone_image_train_keras_model_genotyping_protocol_select', 'id' : 'drone_image_train_keras_model_genotyping_protocol_select', 'empty':1 });

        return false;
    });

    jQuery('#drone_imagery_train_keras_model_confirm_step').click(function(){
        manage_drone_imagery_train_keras_temporary_model_file = '';
        manage_drone_imagery_train_keras_temporary_model_input_file = '';
        manage_drone_imagery_train_keras_temporary_model_input_aux_file = '';
        manage_drone_imagery_train_keras_class_map = '';

        var drone_imagery_keras_model_name = jQuery('#drone_image_train_keras_model_name').val();
        var drone_imagery_keras_model_desc = jQuery('#drone_image_train_keras_model_desc').val();
        var drone_imagery_keras_model_type = jQuery('#drone_image_train_keras_model_type').val();
        if (drone_imagery_keras_model_type =='' || drone_imagery_keras_model_name == '' || drone_imagery_keras_model_desc == '') {
            alert('Please give a model type, name, and description!');
            return false;
        }
        else {
            jQuery.ajax({
                url : '/api/drone_imagery/train_keras_model',
                type: "POST",
                data : {
                    'field_trial_ids' : manage_drone_imagery_train_keras_field_trial_id_string,
                    'trait_id' : manage_drone_imagery_train_keras_trait_id,
                    'aux_trait_id' : manage_drone_imagery_train_keras_aux_trait_ids,
                    'drone_run_ids' : JSON.stringify(manage_drone_imagery_train_keras_drone_run_ids),
                    'plot_polygon_type_ids' : JSON.stringify(manage_drone_imagery_train_keras_plot_polygon_type_ids),
                    'save_model' : 1,
                    'model_name' : drone_imagery_keras_model_name,
                    'model_description' : drone_imagery_keras_model_desc,
                    'model_type' : drone_imagery_keras_model_type,
                    'population_id' : jQuery('#drone_imagery_train_keras_cnn_population_id').val(),
                    'nd_protocol_id' : jQuery('#drone_image_train_keras_model_genotyping_protocol_select').val(),
                    'use_parents_grm' : jQuery('#drone_image_train_keras_model_use_parents_grm').val()
                },
                beforeSend: function() {
                    jQuery("#working_modal").modal("show");
                },
                success: function(response){
                    console.log(response);
                    jQuery("#working_modal").modal("hide");

                    if (response.error) {
                        alert(response.error);
                    }
                    else {
                        alert("Trained Keras CNN Model saved!");
                    }

                    var html = "<hr><a href='"+response.loss_history_file+"' target=_blank>Loss History</a><hr><h4>Results</h4><br/><br/>";
                    html = html + "<table class='table table-bordered table-hover'><thead><tr><th>Results</th></tr></thead><tbody>";
                    for (var i=0; i<response.results.length; i++) {
                        html = html + "<tr><td>"+response.results[i]+"</td></tr>";
                    }
                    html = html + "</tbody></table>";

                    //html = html + '<hr><h3>Save Model for Predictions</h3><div class="form-horizontal"><div class="form-group"><label class="col-sm-6 control-label">Model Name: </label><div class="col-sm-6"><input class="form-control" id="drone_imagery_save_keras_model_name" name="drone_imagery_save_keras_model_name" type="text" /></div></div><div class="form-group"><label class="col-sm-6 control-label">Model Description: </label><div class="col-sm-6"><input class="form-control" id="drone_imagery_save_keras_model_desc" name="drone_imagery_save_keras_model_desc" type="text" /></div></div></div><button class="btn btn-primary" id="drone_imagery_keras_model_save">Save Model (Required For Using For Prediction)</button>';

                    manage_drone_imagery_train_keras_temporary_model_input_file = response.model_input_file;
                    manage_drone_imagery_train_keras_temporary_model_input_aux_file = response.model_input_aux_file;
                    manage_drone_imagery_train_keras_temporary_model_file = response.model_temp_file;
                    manage_drone_imagery_train_keras_class_map = response.class_map;

                    jQuery('#drone_imagery_train_keras_model_results_div').html(html);
                },
                error: function(response){
                    jQuery("#working_modal").modal("hide");
                    alert('Error training keras model!')
                }
            });
        }
    });

    jQuery(document).on('click', '#drone_imagery_keras_model_save', function() {
        var manage_drone_imagery_train_keras_model_save_name = jQuery('#drone_imagery_save_keras_model_name').val();
        var manage_drone_imagery_train_keras_model_save_desc = jQuery('#drone_imagery_save_keras_model_desc').val();
        if (manage_drone_imagery_train_keras_model_save_name == '' || manage_drone_imagery_train_keras_model_save_desc == '') {
            alert('A model name and description are required for saving!');
            return false;
        }
        else {
            jQuery.ajax({
                url : '/api/drone_imagery/save_keras_model?field_trial_ids='+manage_drone_imagery_train_keras_field_trial_id_string+'&drone_run_ids='+JSON.stringify(manage_drone_imagery_train_keras_drone_run_ids)+'&plot_polygon_type_ids='+JSON.stringify(manage_drone_imagery_train_keras_plot_polygon_type_ids)+'&model_file='+manage_drone_imagery_train_keras_temporary_model_file+'&model_input_file='+manage_drone_imagery_train_keras_temporary_model_input_file+'&model_input_aux_file='+manage_dromanage_drone_imagery_train_keras_temporary_model_input_aux_file+'&model_name='+manage_drone_imagery_train_keras_model_save_name+'&model_description='+manage_drone_imagery_train_keras_model_save_desc+'&class_map='+JSON.stringify(manage_drone_imagery_train_keras_class_map)+'&trait_id='+manage_drone_imagery_train_keras_trait_id,
                beforeSend: function() {
                    jQuery("#working_modal").modal("show");
                },
                success: function(response){
                    console.log(response);
                    jQuery("#working_modal").modal("hide");
                    if (response.error) {
                        alert(response.error);
                    }
                    else {
                        alert('Trained Keras CNN Model Saved! You can now use it for prediction!');
                    }
                },
                error: function(response){
                    jQuery("#working_modal").modal("hide");
                    alert('Error saving keras model!')
                }
            });
        }
    });

    jQuery('#drone_imagery_keras_cnn_predict_link').click(function(){
        get_select_box('trials', 'drone_imagery_predict_keras_cnn_trial_select_div', { 'name' : 'drone_imagery_predict_keras_cnn_field_trial_id', 'id' : 'drone_imagery_predict_keras_cnn_field_trial_id', 'empty':1, 'multiple':0 });
        get_select_box('trained_keras_cnn_models', 'drone_imagery_predict_keras_cnn_model_select_div', { 'name' : 'drone_imagery_predict_keras_cnn_model_id', 'id' : 'drone_imagery_predict_keras_cnn_model_id', 'empty':1 });

        jQuery('#drone_imagery_predict_keras_cnn_dialog').modal('show');
    });

    jQuery('#drone_imagery_predict_keras_model_field_trial_select_step').click(function(){
        manage_drone_imagery_predict_keras_field_trial_id_array = [];
        manage_drone_imagery_predict_keras_field_trial_id_string = '';
        manage_drone_imagery_predict_keras_field_trial_id_string = jQuery('#drone_imagery_predict_keras_cnn_field_trial_id').val();
        //manage_drone_imagery_predict_keras_field_trial_id_array = jQuery('#drone_imagery_predict_keras_cnn_field_trial_id').val();
        //manage_drone_imagery_predict_keras_field_trial_id_string = manage_drone_imagery_predict_keras_field_trial_id_array.join(",");
        if (manage_drone_imagery_predict_keras_field_trial_id_string == '') {
            alert('Please select a field trial first!');
        } else {

            jQuery('#drone_image_predict_keras_drone_runs_table').DataTable({
                destroy : true,
                paging : false,
                ajax : '/api/drone_imagery/drone_runs?select_checkbox_name=predict_keras_drone_imagery_drone_run_select&checkbox_select_all=1&field_trial_ids='+manage_drone_imagery_predict_keras_field_trial_id_string
            });

            get_select_box('traits', 'drone_imagery_predict_keras_cnn_aux_trait_select_div', { 'name' : 'drone_imagery_predict_keras_cnn_aux_trait_ids', 'id' : 'drone_imagery_predict_keras_cnn_aux_trait_ids', 'empty':1, 'multiple':1, 'trial_ids':manage_drone_imagery_predict_keras_field_trial_id_string, 'stock_type':'plot' });

            Workflow.complete("#drone_imagery_predict_keras_model_field_trial_select_step");
            Workflow.focus('#drone_imagery_predict_keras_model_workflow', 2);
        }
        return false;
    });

    jQuery('#drone_image_predict_keras_drone_runs_table_select_all').change(function(){
        jQuery('input[name="predict_keras_drone_imagery_drone_run_select"]').each(function() {
            jQuery(this).prop('checked', jQuery('#drone_image_predict_keras_drone_runs_table_select_all').prop("checked"));
        });
    });

    jQuery('#drone_imagery_predict_keras_model_select_step').click(function(){
        manage_drone_imagery_predict_keras_model_id = '';
        manage_drone_imagery_predict_keras_aux_trait_ids = undefined;
        manage_drone_imagery_predict_keras_model_id = jQuery('#drone_imagery_predict_keras_cnn_model_id').val();
        manage_drone_imagery_predict_keras_aux_trait_ids = jQuery('#drone_imagery_predict_keras_cnn_aux_trait_ids').val();
        if (manage_drone_imagery_predict_keras_model_id == '') {
            alert('Please select a trained Keras CNN model before proceeding!');
        }
        else {
            get_select_box('stocks', 'drone_imagery_predict_keras_cnn_population_select_div', { 'name' : 'drone_imagery_predict_keras_cnn_population_id', 'id' : 'drone_imagery_predict_keras_cnn_population_id', 'empty':1, 'multiple':1, 'stock_type_name':'population' });

            Workflow.complete("#drone_imagery_predict_keras_model_select_step");
            Workflow.focus('#drone_imagery_predict_keras_model_workflow', 3);
        }
        return false;
    });

    jQuery('#drone_imagery_predict_keras_model_population_select_step').click(function(){
        Workflow.complete("#drone_imagery_predict_keras_model_population_select_step");
        Workflow.focus('#drone_imagery_predict_keras_model_workflow', 4);
    });

    jQuery('#drone_imagery_predict_keras_model_drone_run_select_step').click(function(){
        manage_drone_imagery_predict_keras_drone_run_ids = [];
        jQuery('input[name="predict_keras_drone_imagery_drone_run_select"]:checked').each(function() {
            manage_drone_imagery_predict_keras_drone_run_ids.push(jQuery(this).val());
        });
        if (manage_drone_imagery_predict_keras_drone_run_ids.length < 1){
            alert('Please select at least one drone run!');
        } else {

            jQuery('#drone_image_predict_keras_plot_polygon_image_type_table').DataTable({
                destroy : true,
                paging : false,
                ajax : '/api/drone_imagery/plot_polygon_types?checkbox_select_standard_4=1&select_checkbox_name=predict_keras_drone_imagery_plot_polygon_type_select&field_trial_ids='+manage_drone_imagery_predict_keras_field_trial_id_string+'&drone_run_ids='+JSON.stringify(manage_drone_imagery_predict_keras_drone_run_ids)
            });

            Workflow.complete("#drone_imagery_predict_keras_model_drone_run_select_step");
            Workflow.focus('#drone_imagery_predict_keras_model_workflow', 5);
        }
        return false;
    });

    jQuery('#drone_image_predict_keras_plot_polygon_image_type_table_select_all').change(function() {
        jQuery('input[name="predict_keras_drone_imagery_plot_polygon_type_select"]').each(function() {
            jQuery(this).prop('checked', jQuery('#drone_image_predict_keras_plot_polygon_image_type_table_select_all').prop("checked"));
        });
    });

    jQuery('#drone_imagery_predict_keras_model_plot_polygon_type_select_step').click(function(){
        manage_drone_imagery_predict_keras_plot_polygon_type_ids = [];
        jQuery('input[name="predict_keras_drone_imagery_plot_polygon_type_select"]:checked').each(function() {
            manage_drone_imagery_predict_keras_plot_polygon_type_ids.push(jQuery(this).val());
        });
        if (manage_drone_imagery_predict_keras_plot_polygon_type_ids.length < 1){
            alert('Please select at least one plot polygon type!');
        } else {
            Workflow.complete("#drone_imagery_predict_keras_model_plot_polygon_type_select_step");
            Workflow.focus('#drone_imagery_predict_keras_model_workflow', 6);
        }
        return false;
    });

    jQuery('#drone_imagery_keras_model_prediction_select').change(function(){
        if (jQuery(this).val() == 'cnn_prediction_mixed_model') {
            jQuery('#drone_imagery_keras_model_prediction_cnn_prediction_mixed_model_div').show();
        }
        else {
            jQuery('#drone_imagery_keras_model_prediction_cnn_prediction_mixed_model_div').hide();
        }
    });

    jQuery('#drone_imagery_predict_keras_model_confirm_step').click(function(){
        jQuery.ajax({
            url : '/api/drone_imagery/predict_keras_model',
            type: "POST",
            data: {
                'field_trial_ids' : manage_drone_imagery_predict_keras_field_trial_id_string,
                'drone_run_ids' : JSON.stringify(manage_drone_imagery_predict_keras_drone_run_ids),
                'plot_polygon_type_ids' : JSON.stringify(manage_drone_imagery_predict_keras_plot_polygon_type_ids),
                'model_id' : manage_drone_imagery_predict_keras_model_id,
                'model_prediction_type' : jQuery('#drone_imagery_keras_model_prediction_select').val(),
                'population_id' : jQuery('#drone_imagery_predict_keras_cnn_population_id').val(),
                'aux_trait_ids' : manage_drone_imagery_predict_keras_aux_trait_ids
            },
            beforeSend: function() {
                jQuery("#working_modal").modal("show");
            },
            success: function(response){
                console.log(response);
                jQuery("#working_modal").modal("hide");
                if (response.error) {
                    alert(response.error);
                }

                var html = "<hr><h4>Prediction Results: "+response.trained_trait_name+"</h4>";
                html = html + "<table class='table table-bordered table-hover'><thead><tr><th>Stock</th><th>Prediction</th><th>True Phenotype Value</th></tr></thead><tbody>";
                for (var i=0; i<response.results.length; i++) {
                    html = html + "<tr><td><a href='/stock/"+response.results[i][1]+"/view' target=_blank>"+response.results[i][0]+"</a></td><td>"+response.results[i][2]+"</td><td>"+response.results[i][3]+"</td></tr>";
                }
                html = html + "</tbody></table>";

                html = html + "<a href='"+response.activation_output+"' target=_blank>Download Activation Result</a><a href='"+response.corr_plot+"' target=_blank>Download Correlation</a>";

                if (response.evaluation_results.length > 0) {
                    html = html + "<hr><h4>Model Evaluation Results</h4><br/><br/>";
                    html = html + "<table class='table table-bordered table-hover'><thead><tr><th>Results</th></tr></thead><tbody>";
                    for (var i=0; i<response.evaluation_results.length; i++) {
                        html = html + "<tr><td>"+response.evaluation_results[i]+"</td></tr>";
                    }
                    html = html + "</tbody></table>";
                }

                jQuery('#drone_imagery_predict_keras_model_results_div').html(html);
            },
            error: function(response){
                jQuery("#working_modal").modal("hide");
                alert('Error predicting keras model!')
            }
        });
    });

    jQuery('#drone_imagery_keras_cnn_autoencoder_vegetation_indices_link').click(function(){
        get_select_box('trials', 'drone_imagery_autoencoder_keras_cnn_vi_trial_select_div', { 'name' : 'drone_imagery_autoencoder_keras_cnn_vi_field_trial_id', 'id' : 'drone_imagery_autoencoder_keras_cnn_vi_field_trial_id', 'empty':1, 'multiple':0 });

        jQuery('#drone_imagery_keras_cnn_autoencoder_vi_dialog').modal('show');
    });

    jQuery('#drone_imagery_autoencoder_keras_vi_model_field_trial_select_step').click(function(){
        manage_drone_imagery_autoencoder_keras_vi_field_trial_id_array = [];
        manage_drone_imagery_autoencoder_keras_vi_field_trial_id_string = '';
        manage_drone_imagery_autoencoder_keras_vi_field_trial_id_string = jQuery('#drone_imagery_autoencoder_keras_cnn_vi_field_trial_id').val();

        if (manage_drone_imagery_autoencoder_keras_vi_field_trial_id_string == '') {
            alert('Please select a field trial first!');
        } else {

            jQuery('#drone_image_autoencoder_keras_vi_drone_runs_table').DataTable({
                destroy : true,
                paging : false,
                ajax : '/api/drone_imagery/drone_runs?select_checkbox_name=autoencoder_keras_drone_imagery_drone_run_select&checkbox_select_all=1&field_trial_ids='+manage_drone_imagery_autoencoder_keras_vi_field_trial_id_string
            });

            Workflow.complete("#drone_imagery_autoencoder_keras_vi_model_field_trial_select_step");
            Workflow.focus('#drone_imagery_autoencoder_keras_model_vi_workflow', 2);
        }
        return false;
    });

    jQuery('#drone_image_autoencoder_keras_vi_drone_runs_table_select_all').change(function(){
        jQuery('input[name="autoencoder_keras_drone_imagery_drone_run_select"]').each(function() {
            jQuery(this).prop('checked', jQuery('#drone_image_autoencoder_keras_vi_drone_runs_table_select_all').prop("checked"));
        });
    });

    jQuery('#drone_imagery_autoencoder_keras_vi_model_drone_run_select_step').click(function(){
        manage_drone_imagery_autoencoder_keras_vi_drone_run_ids = [];
        jQuery('input[name="autoencoder_keras_drone_imagery_drone_run_select"]:checked').each(function() {
            manage_drone_imagery_autoencoder_keras_vi_drone_run_ids.push(jQuery(this).val());
        });
        if (manage_drone_imagery_autoencoder_keras_vi_drone_run_ids.length < 1){
            alert('Please select one drone run!');
        } else if (manage_drone_imagery_autoencoder_keras_vi_drone_run_ids.length > 1){
            alert('Please select only one drone run!');
        } else {

            jQuery.ajax({
                type: 'GET',
                url: '/api/drone_imagery/get_weeks_after_planting_date?drone_run_project_id='+manage_drone_imagery_autoencoder_keras_vi_drone_run_ids[0],
                dataType: "json",
                beforeSend: function (){
                    jQuery('#working_modal').modal('show');
                },
                success: function(response){
                    jQuery('#working_modal').modal('hide');
                    console.log(response);
                    if (response.error) {
                        alert(response.error);
                    }

                    manage_drone_imagery_autoencoder_keras_vi_time_cvterm_id = response.time_ontology_day_cvterm_id;
                },
                error: function(response){
                    alert('Error getting time term!');
                    jQuery('#working_modal').modal('hide');
                }
            });

            jQuery('#drone_image_autoencoder_keras_vi_plot_polygon_image_type_table').DataTable({
                destroy : true,
                paging : false,
                ajax : '/api/drone_imagery/plot_polygon_types?checkbox_select_standard_ndvi_ndre=1&select_checkbox_name=autoencoder_keras_vi_drone_imagery_plot_polygon_type_select&field_trial_ids='+manage_drone_imagery_autoencoder_keras_vi_field_trial_id_string+'&drone_run_ids='+JSON.stringify(manage_drone_imagery_autoencoder_keras_vi_drone_run_ids)
            });

            Workflow.complete("#drone_imagery_autoencoder_keras_vi_model_drone_run_select_step");
            Workflow.focus('#drone_imagery_autoencoder_keras_model_vi_workflow', 3);
        }
        return false;
    });

    jQuery('#drone_image_autoencoder_keras_vi_plot_polygon_image_type_table_select_all').change(function() {
        jQuery('input[name="autoencoder_keras_vi_drone_imagery_plot_polygon_type_select"]').each(function() {
            jQuery(this).prop('checked', jQuery('#drone_image_autoencoder_keras_vi_plot_polygon_image_type_table_select_all').prop("checked"));
        });
    });

    jQuery('#drone_imagery_autoencoder_keras_vi_model_plot_polygon_type_select_step').click(function(){
        manage_drone_imagery_autoencoder_keras_vi_plot_polygon_type_ids = [];
        jQuery('input[name="autoencoder_keras_vi_drone_imagery_plot_polygon_type_select"]:checked').each(function() {
            manage_drone_imagery_autoencoder_keras_vi_plot_polygon_type_ids.push(jQuery(this).val());
        });
        if (manage_drone_imagery_autoencoder_keras_vi_plot_polygon_type_ids.length < 1){
            alert('Please select at least one plot polygon type!');
        } else {
            Workflow.complete("#drone_imagery_autoencoder_keras_vi_model_plot_polygon_type_select_step");
            Workflow.focus('#drone_imagery_autoencoder_keras_model_vi_workflow', 4);
        }
        return false;
    });

    jQuery('#drone_imagery_autoencoder_keras_vi_model_confirm_step').click(function(){
        jQuery.ajax({
            url : '/api/drone_imagery/perform_autoencoder_vi',
            type: "POST",
            data: {
                'field_trial_ids' : manage_drone_imagery_autoencoder_keras_vi_field_trial_id_string,
                'drone_run_ids' : JSON.stringify(manage_drone_imagery_autoencoder_keras_vi_drone_run_ids),
                'plot_polygon_type_ids' : JSON.stringify(manage_drone_imagery_autoencoder_keras_vi_plot_polygon_type_ids),
                'autoencoder_model_type' : jQuery('#drone_imagery_keras_model_autoencoder_vi_select').val(),
                'time_cvterm_id' : manage_drone_imagery_autoencoder_keras_vi_time_cvterm_id
            },
            beforeSend: function() {
                jQuery("#working_modal").modal("show");
            },
            success: function(response){
                console.log(response);
                jQuery("#working_modal").modal("hide");
                if (response.error) {
                    alert(response.error);
                }
                var html = '';
                jQuery('#drone_imagery_autoencoder_keras_vi_model_results_div').html(html);
            },
            error: function(response){
                jQuery("#working_modal").modal("hide");
                alert('Error autoencoder keras CNN VI!')
            }
        });
    });



</script>
