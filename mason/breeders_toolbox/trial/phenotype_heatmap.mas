<%args>
$trial_id
$stockref => undef
$data_level => 'plot'
</%args>

<& /util/import_css.mas, paths => ['fieldmap/leaflet-search.min.css', 'fieldmap/leaflet.css'] &>
<& /util/import_javascript.mas, entries => ['fieldmap'], classes => [ 'jqueryui.js', 'jquery.js', 'd3.d3v4Min', 'jstree.dist.jstree', 'd3.d3Min.js', "thickbox", "CXGN.Page.FormattingHelpers", 'brapi.fieldmap.leaflet', 'brapi.fieldmap.L-Path-Transform', 'brapi.fieldmap.leaflet-search', 'brapi.fieldmap.turf', 'brapi.BrAPI', 'brapi.BrAPIFieldmap' ] &>

<style>
    #trait_heatmap {display: inline; }
    #trial_no_phenoMSG {display: none; }
    #trial_no_rowColMSG {display: none; }
    #trial_heatmap_div  {display: none; }
    #chart {display: none; }
    #chart_fm {display: none; }
    #d3legend {display: none; }
    #plot_image_ids {display: none;}


    #tooltip {	
        position: absolute;			
        width: 220px;					
        height: 100px;					
        padding: 2px;				
        font: 12px sans-serif;		
        background: lightsteelblue;	
        border: 0px;		
        border-radius: 8px;			
        pointer-events: none;		
    }
    
    #container_heatmap {
        /*border:2px dashed #000;*/
        height: 390px;
        width: 700px;
        overflow: auto;
        /*overflow: scroll;*/
        display: none;
        margin: 10px;
    }
    #container_fm {
        /*border:2px dashed #000;*/
        height: 100%;
        /*width: 390px;*/
        width: 90%;
        overflow: auto;
        /*overflow: scroll;*/
        display: none;
        margin: 10px;
        transition: all 1s ease-in-out;
    }
    
    rect.bordered {
        stroke: #E6E6E6;
        stroke-width:2px;   
      }

      text.mono {
        font-size: 9pt;
        font-family: Consolas, courier;
        fill: #aaa;
      }

      text.axis-workweek {
        fill: #000;
      }

      text.axis-worktime {
        fill: #000;
      }
      
      .legend { list-style: none; }
      .legend li { float: left; margin-right: 10px; }
      .legend span { border: 1px solid #ccc; float: left; width: 12px; height: 12px; margin: 2px; }

      .legend .block_even_number { background-color: #c7e9b4; }
      .legend .block_odd_number { background-color: #41b6c4; }
      .legend .checks { background-color: #6a5acd; }
      .legend .rep_even_number { background-color: red;}
      .legend .rep_odd_number { background-color: green;}
      
      .rotated {
          transform: rotate(-180deg);
      }

    
</style>

<div class="well well-sm">
    <div class="form-group form-group-sm" id="traitdiv" style="display:inline-block">
        <label for="trait_list_dropdown" class="col-sm-2 control-label">Select:</label></br>
        <div class="col-sm-12">
            <div id="heatmap_traits_assayed_dropdown">
                Loading Traits Assayed...
            </div>
        </div>
    </div>
</div>

<div class="form-group form-group-sm" id="ctrldiv" style="diaplay:none">
    <label for="check_list_dropdown" class="col-sm-2 control-label">View Check Plots:</label></br>
    <div class="col-sm-12">
        <div id="heatmap_trial_checks_dropdown">
        </div>
        <div class="col-sm-4" id="check_plot_link">
        </div>
    </div>
    <br>
    
</div>

<div id="view_ctrl_button" style="display:none">
  <a id="view_ctrl_button_link"><button class="btn btn-primary"  type="button" id="view_ctrl_id_button" value="delete_cords" >View Controls</button></a>
</div>

<div id="container_heatmap" ></div>
<div>
    <ul class="legend">
        <li><span class="block_even_number"></span> Even Block Numbers (e.g. 2,4,...)</li>
        <li><span class="block_odd_number"></span> Odd Block Numbers (e.g. 1,3,...)</li>
        <li><span class="checks"></span> Checks</li>
        <li><span class="rep_odd_number"></span> Odd Rep Numbers (e.g. 1,3,...)</li>
        <li><span class="rep_even_number"></span> Even Rep Numbers (e.g. 2,4,...)</li>
        <li> <img src="/static/css/images/plot_images.png" alt="Camera" height="20" width="20"> Plot Has Image</li>
    </ul>
</div>
<br><br>
<div id="container_fm">
    <div>
        <button class="btn btn-primary" style="margin-left: 2%;" id="planting_order_button"> Planting Order </button>
        <select name="planting_order" id="planting_order">
            <option value="">--Select Layout--</option>
            <option value="by_col_serpentine">By Column: Serpentine</option>
            <option value="by_col_zigzag">By Column: Zigzag</option>
            <option value="by_row_serpentine">By Row: Serpentine</option>
            <option value="by_row_zigzag">By Row: Zigzag</option>
        </select>
        <button class="btn btn-primary" id="harvesting_order_button" style="margin-left: 2%;"> Harvesting Order </button>
        <select name="harvesting_order" id="harvesting_order">
            <option value="">--Select Layout--</option>
            <option value="by_col_serpentine">By Column: Serpentine</option>
            <option value="by_col_zigzag">By Column: Zigzag</option>
            <option value="by_row_serpentine">By Row: Serpentine</option>
            <option value="by_row_zigzag">By Row: Zigzag</option>
        </select>
        <button style="margin-left: 20%;" type="button" class="btn btn-primary" id="change_dimensions_button">Change Dimensions</button>
        <button type="button" id="submit_fieldmap" name="submit_fieldmap" class="btn btn-success">Submit Field Layout</button><br><br>
        <div style="display: inline;">
            <label style="margin-left: 2%;" for="invert_rows">Invert Rows</label>
            <input type="checkbox" id="invert_row_checkmark" name="invert_row_checkmark" value="yes">
            <label style="margin-left: 3%;" for="top_border_selection">Top Border</label>                       
            <input type="checkbox" id="top_border_selection" name="top_border_selection" value="yes">
            <label style="margin-left: 3%;" for="left_border_selection">Left Border</label>                       
            <input type="checkbox" id="left_border_selection" name="left_border_selection" value="yes">
            <label style="margin-left: 3%;" for="right_border_selection">Right Border</label>                       
            <input type="checkbox" id="right_border_selection" name="right_border_selection" value="yes">
            <label style="margin-left: 3%;" for="bottom_border_selection">Bottom Border</label>                       
            <input type="checkbox" id="bottom_border_selection" name="bottom_border_selection" value="yes">
            <label style="margin-left: 3%;">Plot Layout</label>
            <select name="plot_layout" id="plot_layout">
                <option value="">--Select Layout--</option>
                <option value="serpentine">Serpentine</option>
                <option value="zigzag">Zigzag</option>
            </select>
        </div>
    </div>  
</div>


<div id="trait_heatmap" >loading...</div>
<div id="container_heatmap_geo" ></div>
<div id="trial_no_phenoMSG" >Upload trial phenotypes to view trait assayed heatmap</div>
<div class="container" id="trial_no_rowColMSG">
    <div class="well">
    <!--    <centre><div id="trial_no_rowColMSG2" ><b>Trial plots have no row and column number to display heatmap</b></div></centre> -->
    </div>
</div>

<canvas id='trial_phenotype_heatmap_download_image_canvas' width="3000" height="3000" style="display:none"></canvas>

<div id="chart"></div>
<!--<div class="col-sm-10" id="d_button" style="display:none";>
  <a id="delete_trait" class="btn btn-primary">Delete Selected Trait</a> &nbsp;
</div> -->


<div id="delete_field_map_dialog_message" title="Physical Field Map Deletion" style="display:none;">
   <p>
       <span class="ui-icon ui-icon-circle-check" style="float: left; margin: 0 7px 50px 0;"></span>
       The field coordinates were deleted successfully...
   </p>
</div>

<div id="delete_field_map_dialog" title="Physical Field Map Deletion" style="display:none;">
   <div id="trait_list_dc" name="trait_list">
       <label id="trait_list_label_dc" for="trait_list_list_select" style="display: inline-block; width: 300px;">Please, confirm field map deletion... <br />

       </label>

   </div>
</div>

<div class="modal  fade" id="suppress_plot_pheno_dialog" name="suppress_plot_pheno_dialog" tabindex="-1" role="dialog" aria-labelledby="SuppressPlotPhenoDialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="SuppressPlotPhenoDialog">Suppress Plot Phenotype Measurement </h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <form class="form-horizontal" role="form" method="post" enctype="multipart/form-data" encoding="multipart/form-data" id="suppress_plot_pheno_form" name="suppress_plot_pheno_form">
                    
                    <center>
                    <p3> Suppressed measurement will be seen as an outlier and can be excluded during phenotype analysis and download.</p3>
                    </center></br>
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Plot Name:</label>
                            <div class="col-sm-8" id="myplot_name">
                                
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Phenotype Value: </label>
                            <div class="col-sm-8" id="pheno_value">
                            
                            </div>
                        </div>
                        
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Phenotype ID: </label>
                            <div class="col-sm-8" id="mypheno_id">
                            
                            </div>
                        </div>
                         
                        <div class="form-group">
                            <label class="col-sm-3 control-label">Trait ID: </label>
                            <div class="col-sm-8" id="mytrait_id">
                            
                            </div>
                        </div>

                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button id="close_suppress_plot_pheno_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" name="suppress_plot_pheno_dialog_submit" id="suppress_plot_pheno_dialog_submit">Suppress Phenotype</button>
            </div>
        </div>
    </div>
</div>

<div class="modal  fade" id="suppress_phenotype_dialog_success_message" name="suppress_phenotype_dialog_success_message" tabindex="-1" role="dialog" aria-labelledby="SuppressPhenoDialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="SuppressPhenoDialog">Suppress Phenotype For Plot </h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <form class="form-horizontal" role="form" method="post" enctype="multipart/form-data" encoding="multipart/form-data" id="suppress_plotPheno_form" name="suppress_plotPheno_form">

                    <p3> Phenotype was suppressed successfully...</p3>

                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button id="close_suppress_plot_pheno_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<div class="modal  fade" id="delete_trait_dialog_confirm_message" name="delete_trait_dialog_confirm_message" tabindex="-1" role="dialog" aria-labelledby="DeleteAssayedTraitDialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="DeleteAssayedTraitDialog"><b>Assayed Trait Deletion</b></h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <form class="form-horizontal" role="form" method="post" enctype="multipart/form-data" encoding="multipart/form-data" id="trait_deletion_form" name="trait_deletion_form">

                    <p3><b>Please, confirm the deletion of selected trait...</b></p3> </br></br>
                    <center><p2> ...trait is deleted permanently from the database...</p2></center>

                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button id="close_delete_trait_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" name="delete_selected_trait_dialog_submit" id="delete_selected_trait_dialog_submit">Delete Trait</button>
            </div>
        </div>
    </div>
</div>

<div class="modal  fade" id="delete_trait_dialog_success_message" name="delete_trait_dialog_success_message" tabindex="-1" role="dialog" aria-labelledby="TraitDeletionDialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="TraitDeletionDialog"><b>Assayed Trait Deletion</b></h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <p3> Trait deletion was successfully...</p3>

                </div>
            </div>
            <div class="modal-footer">
                <button id="close_trait_delete_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="hm_replace_plot_accessions_dialog" name="hm_replace_plot_accessions_dialog" tabindex="-1" role="dialog" aria-labelledby="HmReplacePlotAccessionsDialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="HmReplacePlotAccessionsDialog">Replace Plot Accession</h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <form class="form-horizontal" role="form" method="post" enctype="multipart/form-data" encoding="multipart/form-data" id="hm_replace_plot_accession_form" name="hm_replace_plot_accession_form">
                      <div id="hm_edit_plot_information">
                      </div>

                      <div class="form-group">
                        <label class="col-sm-3 control-label">Plot Name: </label>
                        <div class="col-sm-9" id="hm_edit_plot_name">

                        </div>
                      </div>

                      <div class="form-group">
                        <label class="col-sm-3 control-label">Plot Number: </label>
                        <div class="col-sm-9" id="hm_edit_plot_number">
                        </div>
                      </div>

                      <div class="form-group">
                        <label class="col-sm-3 control-label">Plot Database ID: </label>
                        <div class="col-sm-9" id="hm_edit_plot_id">
                        </div>
                      </div>

                      <div class="form-group">
                        <label class="col-sm-3 control-label">Accession: </label>
                        <div class="col-sm-9" id="hm_edit_plot_accession">
                        </div>
                      </div>

                      
                      <div class="form-group">
                        <label class="col-sm-3 control-label">Enter New Accession: </label>
                        <div class="col-sm-9" >
                          <input class="form-control" id="hm_accession" name="hm_accession"></input>
                        </div>
                      </div>

                      <div class="form-group">
                        <label class="col-sm-3 control-label">New Plot Name:<br> (Optional) </label>
                        <div class="col-sm-9">
                          <input class="form-control" id="hm_new_plot_name" name="hm_new_plot_name"></input>
                        </div>
                      </div>


                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button type="button" class="btn btn-primary " name="hm_view_plot_image_submit" id="hm_view_plot_image_submit">View Plot Images</button>
                <button id="hm_close_replace_plot_accession_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
                <button type="button" class="btn btn-primary" name="hm_replace_plot_accession_submit" id="hm_replace_plot_accession_submit">Replace Plot Accession</button>
            </div>
        </div>
    </div>
</div>

<div class="modal  fade" id="hm_replace_accessions_dialog_message" name="hm_replace_accessions_dialog_message" tabindex="-1" role="dialog" aria-labelledby="HmDialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="HmDialog"><b>Replace Plot Accessions</b></h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <p3> Plot accession was replaced successfully...</p3>

                </div>
            </div>
            <div class="modal-footer">
                <button onclick="location.reload()" id="close_hmfieldma_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<div class="modal  fade" id="fieldplot_layout_success_dialog" name="fieldplot_layout_success_dialog" tabindex="-1" role="dialog" aria-labelledby="fp_success_dialog">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="HmDialog"><b>Submit Field Plot Layout</b></h4>
            </div>
            <div class="modal-body">
                <div style="text-align: center;" class="container-fluid">

                    <p3> Field Plot layout submitted successfully!</p3>

                </div>
            </div>
            <div class="modal-footer">
                <button id="close_fp_success_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="hm_replace_accession_curator_warning_message" name="hm_replace_accession_curator_warning_message" tabindex="-1" role="dialog" aria-labelledby="td_curator_warning">
    <div class="modal-dialog" role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="tDDialog"><b>Warning!</b></h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <big>
                        <span>&#9888;</span> 
                        <p3>
                            One or more traits have been assayed for this trial; <br>
                            It is not recommended to change accessions at this point. Are you sure?
                        </p3>
                    </big>


                </div>
            </div>
            <div class="modal-footer">
                <button id="fm_override_accession_warning" type="button" class="btn btn-primary">Yes</button>
                <button id="close_tdfieldmap_dialog" type="button" class="btn btn-default" data-dismiss="modal">No</button>

            </div>
        </div>
    </div>
</div>

<%perl>
my $dbh = $stockref->{dbh};
my $image_ids =  $stockref->{image_ids} || [] ;
</%perl>

<div class="modal  fade" id="view_plot_image_dialog" name="view_plot_image_dialog" tabindex="-1" role="dialog" aria-labelledby="ViewPlotImage">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="ViewPlotImage">View Plot Images</h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">

                    <form class="form-horizontal" role="form" method="post" enctype="multipart/form-data" encoding="multipart/form-data" id="view_plot_image_form" name="view_plot_image_form">
                    
                    <div class="col-sm-9" id="plot_image_ids"></div>
                    
                    <div class="col-sm-9" id="show_plot_image_ids"></div>
                    
                    </form>
                </div>
            </div>
            <div class="modal-footer">
                <button id="view_plot_image_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>

            </div>
        </div>
    </div>
</div>

<div class="modal fade" id="change_dimensions_dialog" name="change_dimensions_dialog" tabindex="-1" role="dialog" aria-labelledby="ChangeDimensions">
    <div class="modal-dialog " role="document">
        <div class="modal-content">
            <div class="modal-header" style="text-align: center">
                <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
                <h4 class="modal-title" id="ChangeDimensions">Change Dimensions</h4>
            </div>
            <div class="modal-body">
                <div class="container-fluid">
                    <label style="margin-left: 15%;">Dimensions: </label>
                    <div style="display: inline;">
                        <div style="margin-left: 4%; margin-right: 2%; display: inline-block; width: 10%;">
                            <label for="row-dims" style="display:block;">Rows</label> 
                            <input style="width: 100%;" type="text" id="row-dims" name="row-dims">
                        </div>
                        x
                        <div style="margin: 2%; display: inline-block; width: 10%;">
                            <label for="col-dims" style="display:block">Columns</label> 
                            <input style="width: 100%;" type="text" id="col-dims" name="col-dims">
                        </div>
                    </div><br><br>
                    <label style="margin-left: 15%; margin-right: 2%;">Filler Accession (Optional): </label>
                    <input style="width: 20%;" type="text" id="filler_accession">
                </div>
            </div>
            <div class="modal-footer">
                <button id="submit_dimensions_change" type="button" class="btn btn-primary">Submit</button>
                <button id="close_dimension_dialog" type="button" class="btn btn-default" data-dismiss="modal">Close</button>
            </div>
        </div>
    </div>
</div>


<script defer="defer" type="text/javascript" >
var trial_id = '<% $trial_id %>';
var data_level = '<% $data_level %>';
var FieldMap = window.jsMod['fieldmap'].init();
FieldMap.set_id(trial_id);



var value = 'plot';
var selected;
var trialStudyDesign;
var phenotypes_id = [];
var ctrlFuncDataset;
var top_border_selection;
var left_border_selection;
var right_border_selection;
var bottom_border_selection;
var border_accession_name;
var num_rows;
var num_cols;
var changed_dim_rows;
var changed_dim_cols;
var num_real_plots;


jQuery(document).ready( function() {
    // document.getElementById("invert_row_checkmark").checked = false;
    retrieve_additional_info = true;
    var auth_token;
    var require_login = "<%  $c->get_conf('brapi_require_login') %>";
    auth_token = "<%  CXGN::Login->new($c->dbc->dbh)->get_login_cookie() %>";

    if (require_login === '1'){
        auth_token = "<%  CXGN::Login->new($c->dbc->dbh)->get_login_cookie() %>";
        if (!auth_token){
            alert("Login required to display");
        }
    }

    function assayed_trait_heatmap_view(selected) {
        var selectedTrait = selected;
        jQuery.ajax( {
            type: 'POST',
            url: '/brapi/v1/phenotypes-search',
            data: {
                'observationLevel':'plot',
                'studyDbId':trial_id,
                'observationVariableDbId':selectedTrait,
                'pageSize':1000,
                'page':0
            },
            headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
            beforeSend: function() {
                jQuery("#working_modal").modal("show");
            },
            success: function(response) {
                console.log(response);
                var data = response.result.data; 
                var datasort = data.sort(function(obj1, obj2) {
	                  // Ascending: first plotNumber less than the previous
	                return obj1.plotNumber - obj2.plotNumber;
                });
                var newData = datasort;
                var rows = [];
                var cols = [];
                var blocks = [];
                var accession_names = [];
                var accession_ids = [];
                var pheno_ids = [];
                var pheno_values = [];
                var plot_names = [];
                var replicates = [];
                var plot_mums = [];
                var check = [];
                var replicates = [];
                var plot_ids = [];
                var trait_names = [];
                var trait_ids = [];
                var design = trialStudyDesign;
                var plot_mums = [];
                var observ_object = [];

                jQuery.each(newData, function(key_obj, value_obj) {
                    jQuery.each(value_obj, function(key, value) {
                        if (key == 'Y'){
                            rows.push(value);
                        }
                        if (key == 'X'){
                            cols.push(value);
                        }
                        if (key == 'blockNumber'){
                            blocks.push(value);
                        }
                        if (key == 'entryType'){
                            check.push(value);
                        }
                        if (key == 'germplasmDbId'){
                            accession_ids.push(value);
                        }
                        if (key == 'germplasmName'){
                            accession_names.push(value);
                        }
                        if (key == 'plotNumber'){
                            plot_mums.push(value);
                        }
                        if (key == 'observationUnitDbId'){
                            plot_ids.push(value);
                        }
                        if (key == 'observationUnitName'){
                            plot_names.push(value);
                        }
                        if (key == 'replicate'){
                            replicates.push(value);
                        }
                        if (key == 'designType'){
                            design = value;
                        }
                        if (key == 'observations'){
                            var valueObs = value[0];
                           pheno_ids.push(valueObs.observationDbId);
                           trait_ids.push(valueObs.observationVariableDbId);
                           trait_names.push(valueObs.observationVariableName);
                           pheno_values.push(valueObs.value);
                        } 
                    });    
                });

                var psudo_rows = [];
                var map_option = 0;
                for (i=0; i<plot_names.length; i++){ 
                    if (rows[i] != null) {}
                    else if (rows[i] == null) {
                        map_option = 1;
            			if (blocks[i] && design != 'splitplot'){
            				var r = blocks[i];
            				psudo_rows.push(r);
            			}
                        else if (replicates[i] && !blocks[i] && design != 'splitplot'){
            				var s = replicates[i];
            				psudo_rows.push(s);
            			}
                        else if (design == 'splitplot'){
                            var s = replicates[i];
            				psudo_rows.push(s);
                        }
            		}
                }

                var false_coord;
                if (map_option == 1){
                    rows = psudo_rows;
                    false_coord = 'false_coord';
                }
                var unique_rows = [];
                var unique_cols = [];
                var unique = rows.filter(function(itm, i, rows) {
                    if (i == rows.indexOf(itm)){
                        unique_rows.push(itm);
                    }
                }); 
                
                function makeArray(count, content) {
                   var result = [];
                   var counting = 0;
                   if(typeof(content) == "function") {
                       counting = 1;
                      for(var i=0; i<count; i++) {
                          result.push(counting);
                         counting++;
                      }
                   } else {
                       counting = 1;
                      for(var i=0; i<count; i++) {
                         result.push(counting);
                         counting++;
                      }
                   }
                   return result;
                }

                var psudo_cols = [];
                var psudo_columns = [];
                var counts = {};
                if (map_option == 1){
                    for (var i = 0; i < rows.length; i++) {
                        counts[rows[i]] = 1 + (counts[rows[i]] || 0);
                    }
                    jQuery.each(counts, function(key, value){
                        psudo_cols.push(makeArray(value, key));
                    });
                    var psudo_columns = [].concat.apply([], psudo_cols);
                    cols = psudo_columns;
                }
                var unique = cols.filter(function(itm, i, cols) {
                    if (i == cols.indexOf(itm)){
                        unique_cols.push(itm);
                    }
                });

                var plot_popUp;
                var result = [];
                for (var i=0; i<plot_names.length; i++){ 
        			plot_popUp = plot_names[i]+"\nplot_No: "+plot_mums[i]+"\nblock_No: "+blocks[i]+"\nrep_No:"+replicates[i]+"\nstock:"+accession_names[i]+"\nvalue:"+pheno_values[i];
            		result.push({plotname:plot_names[i], stock:accession_names[i], plotn:plot_mums[i], blkn:blocks[i], rep:replicates[i], row:rows[i], col:cols[i], pheno:pheno_values[i], plot_msg:plot_popUp, pheno_id:pheno_ids[i]}) ;
                }
                
                var max_col = Math.max.apply(Math,unique_cols);
                var max_row = Math.max.apply(Math,unique_rows);
                var rep_max = Math.max.apply(Math,replicates);
                var block_max = Math.max.apply(Math,blocks);
                var col_length = cols[0]; 
                var row_length = rows[0];
                var controls = [];
                var unique_ctrl = [];
                var plots = plot_mums;
                var max_col;

                if (col_length && row_length) {
                    jQuery("#working_modal").modal("hide");
                    jQuery("#chart").css({"display": "inline-block"});
                    jQuery("#container_heatmap").css({"display": "inline-block", "overflow": "auto"});
                    jQuery("#trait_heatmap").css("display", "none");
                    
                    var default_width = 50 * max_col;
                    var default_Width_used;
                    if (default_width < 684){
                        default_Width_used = 684;
                    }else { default_Width_used = 50 * max_col; }
                    
                  var margin = { top: 50, right: 0, bottom: 100, left: 30 },
                      width = default_Width_used + 30 - margin.left - margin.right,
                      height = 50 * max_row + 150 - margin.top - margin.bottom,
                     // gridSize = Math.floor(width / 24),
                      gridSize = 50,
                      gridSize2 = 38,
                      legendElementWidth = gridSize2*2,
                      buckets = 9,
                      colors = ["#ffffd9","#edf8b1","#c7e9b4","#7fcdbb","#41b6c4","#1d91c0","#225ea8","#253494","#081d58"], // alternatively colorbrewer.YlGnBu[9]
                      rows = unique_rows,
                      columns = unique_cols.sort((a,b)=>a-b);
                      datasets = result;
                      ctrlFuncDataset = datasets;
                
                  var svg = d3.select("#container_heatmap").append("svg")
                      .attr("width", width + margin.left + margin.right)
                      .attr("height", height + margin.top + margin.bottom)
                      .append("g")
                      .attr("transform", "translate(" + margin.left + "," + 100 + ")");

                  var rowLabels = svg.selectAll(".rowLabel")
                      .data(rows)
                      .enter().append("text")
                        .text(function (d) { return d; })
                        .attr("x", 0 )
                        .attr("y", function (d, i) { return i * gridSize; })
                        .style("text-anchor", "end")
                        .attr("transform", "translate(-6," + gridSize / 1.5 + ")")
                        .attr("class", function (d, i) { return ((i >= 0 && i <= 4) ? "rowLabel mono axis axis-workweek" : "rowLabel mono axis"); });

                  var columnLabels = svg.selectAll(".columnLabel")
                      .data(columns)
                      .enter().append("text")
                      .text(function(d) { return d; })
                      .attr("x", function(d, i) { return i * gridSize; })
                      .attr("y", 0 )
                      .style("text-anchor", "middle")
                      .attr("transform", "translate(" + gridSize / 2 + ", -6)")
                      .attr("class", function(d, i) { return ((i >= 7 && i <= 16) ? "columnLabel mono axis axis-worktime" : "columnLabel mono axis"); });                
                  
                  var heatmapChart = function(datasets) {
                    
                    datasets.forEach(function(d) { 

                        d.row = +d.row;
                        d.col = +d.col;
                        d.pheno = +d.pheno;  
                    });      

                      var colorScale = d3.scale.quantile()
                          .domain([0, buckets - 1, d3.max(datasets, function (d) { return d.pheno; })])
                          .range(colors);
                                                
                      var cards = svg.selectAll(".col")
                          .data(datasets, function(d) {return d.row+':'+d.col;});

                      cards.append("title");                  

                      cards.enter().append("rect")
                          .attr("x", function(d) { return (d.col - 1) * gridSize; })
                          .attr("y", function(d) { return (d.row - 1) * gridSize; })
                          .attr("rx", 4)
                          .attr("ry", 4)
                          .attr("class", "col bordered")
                          .attr("width", gridSize)
                          .attr("height", gridSize)
                          .style("fill", colors[0])
                          .on("click", function(d) { 
                                                     var phenoValue = d.pheno ;
                                                     var plotName = d.plotname ; 
                                                     var phenoID = d.pheno_id;
                                                     jQuery("#suppress_plot_pheno_dialog").modal("show"); 
                                                     jQuery("#myplot_name").html(plotName);
                                                     jQuery("#pheno_value").html(phenoValue);
                                                     jQuery("#mytrait_id").html(selected);
                                                     jQuery("#mypheno_id").html(phenoID);
                                                     
                                                        })
                          .on("mouseover", function(d) { d3.select(this).style('fill', 'green'); 
                                                                            //console.log('over');
                                                        })
                          .on("mouseout", function(d) { 
                                                          var colorScale = d3.scale.quantile()
                                                              .domain([0, buckets - 1, d3.max(datasets, function (d) { return d.pheno; })])
                                                              .range(colors);
                          
                                                          var cards = svg.selectAll(".col")
                                                              .data(datasets, function(d) {return d.row+':'+d.col;});

                                                          cards.append("title");
                                                          
                                                          cards.enter().append("rect")
                                                            .attr("x", function(d) { return (d.col - 1) * gridSize; })
                                                            .attr("y", function(d) { return (d.row - 1) * gridSize; })
                                                            .attr("rx", 4)
                                                            .attr("ry", 4)
                                                            .attr("class", "col bordered")
                                                            .attr("width", gridSize)
                                                            .attr("height", gridSize)
                                                            .style("fill", colors[0]); 
                                                            
                                                            cards.style("fill", function(d) { return colorScale(d.pheno); }) ;                          

                                                            cards.select("title").text(function(d) { return d.plot_msg; }) ;
                                                            
                                                            cards.exit().remove();
                                                            //console.log('out');
                                                            });

                      //cards.transition().duration(1000)
                      cards.style("fill", function(d) { return colorScale(d.pheno); }) ;                          

                      cards.select("title").text(function(d) { return d.plot_msg; }) ;
                      
                      cards.exit().remove();
             
                      var legend = svg.selectAll(".legend")
                          .data([0].concat(colorScale.quantiles()), function(d) { return d; });
                     
                      legend.enter().append("g")
                          .attr("class", "legend");

                      legend.append("rect")
                        .attr("x", function(d, i) { return legendElementWidth * i; })
                        .attr("y", 0 - 90)
                        .attr("width", legendElementWidth)
                        .attr("height", gridSize2 / 2)
                        .style("fill", function(d, i) { return colors[i]; });

                      legend.append("text")
                        .attr("class", "mono")
                        .text(function(d) { return ">= " + Math.round(d); })
                        .attr("x", function(d, i) { return legendElementWidth * i; })
                        .attr("y", 0 - 90 + gridSize2);

                      legend.exit().remove();
                     
                    } ; 
                  
                  heatmapChart(datasets);
                  if (false_coord){
                      alert("Pseudo row and column numbers have been used in displaying the heat map. Plot's row and column numbers were generated from block_number and displayed in zigzag format. You can upload row and column numbers for this trial to reflect the true field layout.");
                  }
    
                } 
                else  {
                    jQuery("#working_modal").modal("hide");
                    jQuery("#container_heatmap").css("display", "none");
                    jQuery("#trait_heatmap").css("display", "none");
                    jQuery("#trial_no_rowColMSG").css("display", "none");
                }
            },
             error: function(reponse) {
                alert('Error displaying traits assayed heatmap');   
            }
        });
    }

    var image = [];
    var image_ids = [];
    function btnClick(n){
      if (n.length == 0){
         jQuery("#hm_view_plot_image_submit").addClass("disabled");
      } else {
        jQuery("#hm_view_plot_image_submit").removeClass("disabled");
      }
      return true; 
    }
    var list_of_checks;
    var checks = {};
    var data;
    var additionalInfo = [];

    // function field_map_view() {
        // checks = {};
        // jQuery("#ctrldiv").css("display", "none");
        // console.log(retrieve_additional_info);
        // if (retrieve_additional_info) {
        //     jQuery.ajax({
        //         headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
        //         url: '/brapi/v2/observationunits?studyDbId='+trial_id+'&observationUnitLevelName=plot',
        //         success: function(response) {
        //             var plot_objs = response.result.data;
        //             for (plot of plot_objs) {
        //                 if (plot.additionalInfo) {
        //                     top_border_selection = plot.additionalInfo.top_border;
        //                     left_border_selection = plot.additionalInfo.left_border;
        //                     right_border_selection = plot.additionalInfo.right_border;
        //                     bottom_border_selection = plot.additionalInfo.bottom_border;

        //                     FieldMap.check_element(top_border_selection, "top_border_selection");
        //                     FieldMap.check_element(left_border_selection, "left_border_selection");
        //                     FieldMap.check_element(right_border_selection, "right_border_selection");
        //                     FieldMap.check_element(bottom_border_selection, "bottom_border_selection");
        //                     FieldMap.set_additional_info({
        //                         'top_border_selection': top_border_selection,
        //                         'left_border_selection': left_border_selection,
        //                         'right_border_selection': right_border_selection,
        //                         'bottom_border_selection': bottom_border_selection,
        //                     })
        //                     console.log(plot.additionalInfo);
        //                 }
        //             }
        //         },
        //         error: function(response) {
        //             console.log("Error retrieving metadata!");
        //         }        
        //     })
        //     .then(
        //         function() {
        //             return jQuery.ajax({
        //                 //url: '/ajax/breeders/trial/'+trial_id+'/coords', 
        //                 headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
        //                 url: '/brapi/v1/studies/'+trial_id+'/layout?pageSize=10000&page=0',
        //                 beforeSend: function() {
        //                     jQuery("#working_modal").modal("show");
        //                 },
        //                 success: function(response) {
        //                     data = response.result.data;
        //                     data = data.sort(function(obj1, obj2) {
        //                         // Ascending: first plotNumber less than the previous
        //                         return obj1.additionalInfo.plotNumber - obj2.additionalInfo.plotNumber;
        //                     });
        //                     console.log('incoming', data);
        //                     FieldMap.make_map(data);
        //                     FieldMap.field_view();
        //                     put_brapi_plots = FieldMap.brapi_plots;
        //                     console.log("PUT", put_brapi_plots);
        //                 },
        //                 error: function(response) {
        //                     alert('Error displaying fieldmap');   
        //                 }
        //             });
        //         }
        //     )
        // } else {
        //     FieldMap.field_view();
        //     put_brapi_plots = FieldMap.brapi_plots;
        // }   
    // }

    function field_map_view() {
        
        jQuery("#ctrldiv").css("display", "none");
        jQuery.ajax({
             //url: '/ajax/breeders/trial/'+trial_id+'/coords', 
            headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
            url: '/brapi/v2/observationunits?studyDbId='+trial_id+'&observationUnitLevelName=plot&pageSize=10000',
            // url: '/brapi/v1/studies/'+trial_id+'/layout?pageSize=10000&page=0',
             beforeSend: function() {
               jQuery("#working_modal").modal("show");
             },
             success: function(response) {
                data = response.result.data;
                console.log('DATA', data);
                if (data[0].additionalInfo) {
                    FieldMap.check_elements(data[0].additionalInfo);
                    if (data[0].additionalInfo.plot_layout) {
                        document.getElementById("plot_layout").value = data[0].additionalInfo.plot_layout;
                        FieldMap.meta_data.plot_layout = data[0].additionalInfo.plot_layout;
                    }
                }
                FieldMap.filter_data(data);
                FieldMap.set_meta_data();
                FieldMap.load();

                // FieldMap.plot_ou_arr.sort(function(plot_ou_1, plot_ou_2) {
	            //       // Ascending: first plotNumber less than the previous
	            //     return FieldMap.plot_object[plot_ou_1].observationUnitPosition.observationLevel.levelCode - FieldMap.plot_object[plot_ou_2].observationUnitPosition.observationLevel.levelCode
                // });
                

            },
            error: function(response) {
                alert('Error displaying traits assayed heatmap');   
            }
        })
        // .then(
        //     function() {
        //         return FieldMap.plot_ou_arr.forEach(function (plot_ou) {
        //             jQuery.ajax({
        //                 headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},            
        //                 url: '/brapi/v2/images?observationUnitDbId='+plot_ou,
        //                 // url: '/brapi/v2/studies?studyDbId='+trial_id+'&pageSize=10000',
        //                 success: function(response) {
        //                     var image_list = [];
        //                     jQuery.each(response.result.data, function(image_data) {
        //                         image_list.push(image_data.imageDbId);
        //                     });
        //                     FieldMap.plot_object[plot_ou].plotImageDbIds = image_list;
        //                 },
        //                 error: function(response) {
        //                     alert('error retrieving plot images'); 
        //                 }
        //             });
        //         });
        //     }
        // )
        // .then(
        //     function() {
        //         return jQuery.ajax({
        //             headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
        //             url: '/brapi/v2/studies?studyDbId='+trial_id,
        //             success: function (response) {
        //                 var design_type = (response.result.data[0].experimentalDesign.description);
        //                 for (let plot of FieldMap.plot_arr) {
        //                     plot['designType'] = design_type; 
        //                 };
        //             },
        //             error: function (response) {
        //                 alert('error retrieving field design');
        //             }
        //         });
        //     }
        // )
        // .then(
        //     function() {
        //         return FieldMap.plot_ou_arr.forEach(function (plot_ou) {
        //             var seedLotDbId = FieldMap.plot_object[plot_ou].seedLotDbId;
        //             if (seedLotDbId) {
        //                 jQuery.ajax({
        //                     headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
        //                     url: '/brapi/v2/seedlots?seedLotDbId='+seedLotDbId,
        //                     success: function(response) {
        //                         FieldMap.plot_object[plot_ou].seedLotName = response.result.data[0].seedLotName;
        //                     },
        //                     error: function(response) {
        //                         alert('error retrieving seedlot names');
        //                     }   
        //                 })
        //             } else {
        //                 FieldMap.plot_object[plot_ou].seedLotName = null;
        //             }
        //         }) 
        //     }
        // )
        .then(
            function() {
                    console.log(FieldMap.plot_object);
                    // FieldMap.state.retrieve = true;
                    num_real_plots = Object.keys(FieldMap.plot_object).length;
            }
        )
    }

    function heatmap() {

        FieldMap.load();
        // jQuery.ajax({
        //     headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
        //     url: '/brapi/v2/observationunits?studyDbId='+trial_id+'&observationUnitLevelName=plot&pageSize=10000',
        //     // url: '/brapi/v1/studies/'+trial_id+'/layout?pageSize=10000&page=0',
        //      beforeSend: function() {
        //        jQuery("#working_modal").modal("show");
        //      },
        //      success: function(response) {
        //         data = response.result.data;
        //         console.log('DATA', data);
        //         if (data[0].additionalInfo) {
        //             FieldMap.check_elements(data[0].additionalInfo);
        //             if (data[0].additionalInfo.plot_layout) {
        //                 document.getElementById("plot_layout").value = data[0].additionalInfo.plot_layout;
        //                 FieldMap.meta_data.plot_layout = data[0].additionalInfo.plot_layout;
        //             }
        //         }
        //         FieldMap.filter_data(data);
        //         FieldMap.set_meta_data();
        //         FieldMap.load();

        //         // FieldMap.plot_ou_arr.sort(function(plot_ou_1, plot_ou_2) {
	    //         //       // Ascending: first plotNumber less than the previous
	    //         //     return FieldMap.plot_object[plot_ou_1].observationUnitPosition.observationLevel.levelCode - FieldMap.plot_object[plot_ou_2].observationUnitPosition.observationLevel.levelCode
        //         // });
                

        //     },
        //     error: function(response) {
        //         alert('Error displaying traits assayed heatmap');   
        //     }
        // })
        // .then(
        //         function() {
        //                 console.log(FieldMap.plot_object);
        //                 // FieldMap.state.retrieve = true;
        //                 num_real_plots = Object.keys(FieldMap.plot_object).length;
        //         }
        //     )
        }
    
    function geo_field_map_view(){

        jQuery('#container_heatmap_geo_div').width(jQuery('#container_heatmap_geo').parent().width());
        jQuery('#container_heatmap_geo_div').height(jQuery('#container_heatmap_geo').parent().width()*0.7);

     
        var brapi_endpoint = "/brapi/v2";
        var auth_token;
        var require_login = "<%  $c->get_conf('brapi_require_login') %>";
        if (require_login === '1'){
            auth_token = "<%  CXGN::Login->new($c->dbc->dbh)->get_login_cookie() %>";
            if (!auth_token){
                alert("Login required to display field map");
            }
        }
      
        var fieldMap = new BrAPIFieldmap("#container_heatmap_geo_div",brapi_endpoint);

        fieldMap.brapi_endpoint = brapi_endpoint;
        fieldMap.opts.brapi_pageSize = 1000;
        fieldMap.opts.brapi_auth = auth_token;
        fieldMap.load('<% $trial_id %>').then((value)=>{if (!value) alert("No geo reference data in this trial!"); } ); 

    }

    var r = 0; 
    var toggleWidthFM = 0;
    jQuery('#rotate_map').click(function(){ 
        jQuery("#container_fm").css('transform','rotate(' + (r += 90) + 'deg)');
        jQuery("#container_fm").width(390 + 'px');
        //toggleWidthFM = jQuery("#container_fm").width();
        //console.log(toggleWidthFM);
        //console.log(r);
        if ((r/90) % 2 == 0){
            jQuery("#container_fm").width(700 + 'px');
        }
    }); 
    
    jQuery('#change_dimensions_button').click(function() {
        jQuery("#change_dimensions_dialog").modal("show");
        jQuery("#row-dims").val(FieldMap.meta_data.num_rows);
        jQuery("#col-dims").val(FieldMap.meta_data.num_cols);
    })

    jQuery('#submit_dimensions_change').click(function() {
        jQuery('#working_modal').modal("show");
        retrieve_additional_info = false;
        changed_dim_rows = jQuery("#row-dims").val();
        changed_dim_cols = jQuery("#col-dims").val();
        var filler_accession_name = jQuery("#filler_accession").val();
        if (changed_dim_rows * changed_dim_cols < num_real_plots) {
            jQuery('#working_modal').modal("hide");
            alert('Those are not valid dimensions.\nPlease pick dimensions for a plot size equal to or larger than your current plot.');
        } else if (!filler_accession_name && changed_dim_rows * changed_dim_cols > num_real_plots) {
            jQuery('#working_modal').modal("hide");
            alert('Please select an accession for filler plots.');
        } else if (filler_accession_name) {
            jQuery("#change_dimensions_dialog").modal("hide");
            new jQuery.ajax({
                type: 'POST',
                url: '/ajax/breeders/trial/<% $trial_id %>/accession_exists',
                dataType: "json",
                data: {
                    'accession_name': filler_accession_name
                },
                success: function(response) {
                    jQuery('#working_modal').modal("hide");
                    if (response.error) {
                        alert(response.error)
                    } else if (response.success) {
                        FieldMap.meta_data.filler_accession_id = response.success;           
                        FieldMap.meta_data.filler_accession_name = filler_accession_name;
                        FieldMap.meta_data.num_rows = changed_dim_rows;
                        FieldMap.meta_data.num_cols = changed_dim_cols;
                        jQuery('#working_modal').modal("hide");
                        FieldMap.load();         
                    }
                },
                error: function(response) {
                    jQuery('#working_modal').modal("hide");
                    alert('An error occured while trying to find accession name of filler plots');
                }
            });
        } else {
            FieldMap.meta_data.num_rows = changed_dim_rows;
            FieldMap.meta_data.num_cols = changed_dim_cols;
            jQuery('#working_modal').modal("hide");
            FieldMap.load();
        }
    })

    jQuery("#border_accession_form").submit( function() {
        event.preventDefault();
    });

    jQuery("#plot_layout").change(function() {
        FieldMap.meta_data.plot_layout = jQuery("#plot_layout").val();
        FieldMap.load();
    });

    jQuery("#submit_border_selection").click(function() {
        jQuery("#add_border_dialog").modal("hide");
        FieldMap.change_border_selection();
        FieldMap.load();
    });

    jQuery("#top_border_selection").change(function() {
        FieldMap.meta_data.top_border_selection = document.getElementById("top_border_selection").checked;
        FieldMap.load();
    });

    jQuery("#left_border_selection").change(function() {
        FieldMap.meta_data.left_border_selection = document.getElementById("left_border_selection").checked;
        FieldMap.load();
    });

    jQuery("#right_border_selection").change(function() {
        FieldMap.meta_data.right_border_selection = document.getElementById("right_border_selection").checked;
        FieldMap.load();
    });

    jQuery("#bottom_border_selection").change(function() {
        FieldMap.meta_data.bottom_border_selection = document.getElementById("bottom_border_selection").checked;
        FieldMap.load();
    });

    jQuery("#planting_order_button").click(function() {
        if (jQuery('#planting_order').val() == "") {
            alert("Please select an order layout.")
        } else {
            FieldMap.meta_data.planting_order_layout = jQuery('#planting_order').val();
            FieldMap.get_planting_order();
        }
    });

    jQuery('#harvesting_order_button').click(function() {
        if (jQuery('#harvesting_order').val() == "") {
            alert("Please select an order layout.")
        } else {
            FieldMap.meta_data.harvesting_order_layout = jQuery('#harvesting_order').val();
            FieldMap.get_harvesting_order();
        }
    })
    jQuery("#invert_row_checkmark").change(function() {
        FieldMap.meta_data.invert_row_checkmark = document.getElementById("invert_row_checkmark").checked;
        FieldMap.load();
    });
    jQuery('#submit_fieldmap').click( function() {
        var answer = window.confirm(`You are about to save this plot layout to the database.
        Filler plots will be added to your trial if they exist in the display below. Are you sure you would like to continue?`);
        if (answer) {
            submit_fieldmap_metadata();
        } else {
            jQuery('#working_modal').modal("hide");
        }

        
    });

    jQuery('#close_fp_success_dialog').click(function() {
        location.reload();
    })

    jQuery("#hm_view_plot_image_submit").click( function() {
        jQuery("#view_plot_image_dialog").modal("show");
    });
    
    jQuery("#hm_accession").autocomplete({
        appendTo: "#hm_replace_plot_accessions_dialog",
        source: '/ajax/stock/accession_autocomplete',
    });

    jQuery("#hm_replace_plot_accession_form").submit( function() {
      event.preventDefault();
      hm_replace_plotAccession_fieldMap('check');
    });

    jQuery('#hm_replace_plot_accession_submit').click( function() {
      hm_replace_plotAccession_fieldMap('check');
    });

    jQuery('#fm_override_accession_warning').click( function() {
      hm_replace_plotAccession_fieldMap('override');
    });

    function submit_fieldmap_metadata() {
        jQuery('#working_modal').modal("show");
        let filler_plot_object = FieldMap.format_brapi_post_object();
        var stringifiedPostData = JSON.stringify(filler_plot_object);            
        if (FieldMap.meta_data.post) {
            new jQuery.ajax({
                type: 'POST',
                contentType: 'application/json',
                headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
                url: '/brapi/v2/observationunits/',
                data: stringifiedPostData,
                success: function(response) {
                    put_brapi_plots();
                    
                },
                error: function(response) {
                    jQuery('#working_modal').modal("hide");
                    alert('Error saving fieldmap layout.');
                },
            });
        } else {
            put_brapi_plots();
        }
    };

    function put_brapi_plots() {
        let plot_object = FieldMap.format_brapi_put_object();
        var stringifiedData = JSON.stringify(plot_object);
        new jQuery.ajax({
            type: 'PUT',
            contentType: 'application/json',
            headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
            url: '/brapi/v2/observationunits/',
            data: stringifiedData,
            success: function(response) {
                // refresh_cache();
                jQuery('#working_modal').modal("hide");
                jQuery('#fieldplot_layout_success_dialog').modal("show");
                
            },
            error: function(response) {
                jQuery('#working_modal').modal("hide");
                alert('Error saving fieldmap layout.');
            },
        });
    }
    function hm_replace_plotAccession_fieldMap(override) {
      jQuery('#hm_replace_plot_accessions_dialog').modal("hide");
      jQuery('#working_modal').modal("show");

      var new_accession = jQuery('#hm_accession').val();
      var new_plot_name = jQuery('#hm_new_plot_name').val();
      var old_accession = jQuery('#hm_edit_plot_accession').html();
      var old_plot_id = jQuery('#hm_edit_plot_id').html();
      var old_plot_name = jQuery('#hm_edit_plot_name').html();

      new jQuery.ajax({
        type: 'POST',
        url: '/ajax/breeders/trial/<% $trial_id %>/replace_plot_accessions',
        dataType: "json",
        data: {
                'new_accession': new_accession,
                'new_plot_name': new_plot_name,
                'old_accession': old_accession,
                'old_plot_id': old_plot_id,
                'old_plot_name': old_plot_name,
                'override': override,
        },

        success: function (response) {
          jQuery('#working_modal').modal("hide");
          if (response.warning) {
            jQuery('#working_modal').modal("hide");
            jQuery('#hm_replace_accession_curator_warning_message').modal("show");
          } else if (response.error) {
            alert("Error Replacing Plot Accession: "+response.error);
          }
          else {
            jQuery('#hm_replace_accession_curator_warning_message').modal("hide");
            jQuery('#hm_replace_accessions_dialog_message').modal("show");
          }
        },
        error: function () {
          jQuery('#working_modal').modal("hide");
          alert('An error occurred replacing plot accession');
        }
      });
    }
    
    jQuery('#pheno_heatmap_onswitch').click( function() {
        jQuery("#trait_heatmap").css("display", "none");
        field_map_view();
        jQuery.ajax ( {
            headers: (auth_token)? {'Authorization': `Bearer ` + auth_token } : {},
            url: '/brapi/v1/studies/'+ <% $trial_id %> +'/observationvariables?pageSize=1000000',
            //url : '/ajax/breeders/trial/'+ <% $trial_id %> + '/traits_assayed?stock_type='+value,
            beforeSend: function() {
              jQuery("#working_modal").modal("show");
            },
            success: function(response){
                var data = response.result.data;
                var varName = [];
                var varID = [];
                jQuery.each(data, function(key_obj, value_obj) {
                    jQuery.each(value_obj, function(key, value) {
                        if (key == 'name'){
                            varName.push(value);
                        }
                        if (key == 'observationVariableDbId'){
                            varID.push(value);
                        }
                    });
                });

                if (varName != '' && varID != '' ) {
                    var traits_assayed_html = "<select class='form-control' id='trait_list_dropdown'>";
                    traits_assayed_html = traits_assayed_html + "<optgroup label='Field Map'>";
                    traits_assayed_html = traits_assayed_html + "<option value='fieldmap'>view field layout</option>";
                    traits_assayed_html = traits_assayed_html + "<option value='geofieldmap'>view geo field layout</option></optgroup>";
                    traits_assayed_html = traits_assayed_html + "<optgroup label='Assayed Traits'>";
                    for (i=0; i<varID.length; i++) {
                        traits_assayed_html = traits_assayed_html + "<option value='"+ varID[i] + "' >" + varName[i] + "</option>";
                    }
                    traits_assayed_html = traits_assayed_html +"</optgroup>";
                    traits_assayed_html = traits_assayed_html +"</select>";

                    traits_assayed_html = traits_assayed_html + "<br/><button class='btn btn-primary btn-sm' id='trial_phenotype_heatmap_download'>Download Heatmap</button>";

                    jQuery("#trait_heatmap").css("display", "none");                   
                    jQuery("#heatmap_traits_assayed_dropdown").html(traits_assayed_html);
                } 
                else {
                    var traits_assayed_html = "<select class='form-control' id='trait_list_dropdown'>";
                    traits_assayed_html = traits_assayed_html + "<optgroup label='Field Map'>";
                    traits_assayed_html = traits_assayed_html + "<option value='fieldmap'>view field layout</option>";
                    traits_assayed_html = traits_assayed_html + "<option value='geofieldmap'>view geo field layout</option></optgroup>";
                    traits_assayed_html = traits_assayed_html + "<optgroup label='Assayed Traits'>";
                    traits_assayed_html = traits_assayed_html +"</optgroup>";
                    traits_assayed_html = traits_assayed_html +"</select>";
                    jQuery("#trait_heatmap").css("display", "none");                   
                    jQuery("#heatmap_traits_assayed_dropdown").html(traits_assayed_html);
                }
            },
            error: function(response){
                alert('Error retrieving traits assayed in this trial');
            }
        });           
    });
    
    jQuery('#pheno_heatmap_offswitch').click( function() {
        d3.select("svg").remove();
        jQuery("#trait_heatmap").css("display", "none");
        jQuery("#trial_heatmap_div").css("display", "none");
        jQuery("#container_heatmap").css("display", "none");
        jQuery("#chart_fm").css("display", "none");
        jQuery("#container_fm").css("display", "none");
        jQuery("#trial_no_phenoMSG").css("display", "none");
        jQuery("#d3legend").css("display", "none");
    });

  jQuery(document).on('change', '#trait_list_dropdown', function () {
    selected = jQuery("#trait_list_dropdown").val();
    if (selected == 'fieldmap'){
        d3.select("svg").remove();
        jQuery("#view_ctrl_button").css("display", "none");
        jQuery("#container_heatmap").css("display", "none");
        jQuery("#ctrldiv").css("display", "none");
        d3.select("#container_heatmap_geo_div").remove();
        FieldMap.load();
    } else if (selected == 'geofieldmap'){
        jQuery('#working_modal').modal("show");
        d3.select("svg").remove();
        d3.select("#container_heatmap_geo_div").remove();
        d3.select('#container_heatmap_geo').append('div').attr("id","container_heatmap_geo_div");
        jQuery("#container_heatmap").css("display", "none");
        jQuery("#d3legend").css("display", "none");
        jQuery("#container_fm").css("display", "none");
        jQuery("#delete_button_fm").css("display", "none");
        jQuery("#view_ctrl_button").css("display", "none");
        jQuery("#ctrldiv").css("display", "none");
        geo_field_map_view();
        jQuery('#working_modal').modal("hide");
    } else  if (selected != ''){
        d3.select("svg").remove();
        d3.select("#container_heatmap_geo_div").remove();
        jQuery("#delete_button_fm").css("display", "none");
        jQuery("#ctrldiv").css("display", "none");
        jQuery("#view_ctrl_button").show();
        heatmap();
    }
  });

  jQuery(document).on('click', '#trial_phenotype_heatmap_download', function(){
      var html = d3.select("svg")
            .attr("version", 1.1)
            .attr("xmlns", "http://www.w3.org/2000/svg")
            .node().parentNode.innerHTML;;

      //console.log(html);
      var imgsrc = 'data:image/svg+xml;base64,'+ btoa(html);
      var img = '<img src="'+imgsrc+'">'; 

      var canvas = document.getElementById("trial_phenotype_heatmap_download_image_canvas"),
      context = canvas.getContext("2d");

      var image = new Image;
      image.src = imgsrc;
      image.onload = function() {
        context.drawImage(image, 0, 0);

        var canvasdata = canvas.toDataURL("image/png");

        var pngimg = '<img src="'+canvasdata+'">'; 

        var a = document.createElement("a");
        a.download = "trial_phenotype_heatmap.png";
        a.href = canvasdata;
        a.click();
    };
  });

  jQuery("#suppress_plot_pheno_dialog_submit").click(function() {
    suppress_plot_phenotype();
  });
  
  function suppress_plot_phenotype() {
    jQuery("#suppress_plot_pheno_dialog").modal("hide");
    var sup_plotName = jQuery('#myplot_name').html();
    var sup_traitValue = jQuery('#pheno_value').html();
    var sup_traitID = jQuery('#mytrait_id').html();
    var sup_phenoID = jQuery('#mypheno_id').html();
    
    new jQuery.ajax({
        type: 'POST',
        url: '/ajax/breeders/trial/<% $trial_id %>/suppress_phenotype',
        dataType: "json",
        data: {
                'plot_name': sup_plotName,
                'phenotype_value': sup_traitValue,
                'trait_id': sup_traitID,
                'phenotype_id': sup_phenoID,
        },
        beforeSend: function() {
            jQuery('#working_modal').modal("show");
        },
        success: function(response){
            jQuery('#working_modal').modal("hide");
            if (response.error) {
              alert("Error Suppressing Phenotype: "+response.error);
            }else {
                jQuery('#suppress_phenotype_dialog_success_message').modal("show");
            }
          },
          error: function() {
            jQuery('#working_modal').modal("hide");
            alert('An error occurred suppressing phenotype');
          }
    });
  }
  
  jQuery("#delete_trait").click(function() {
    jQuery("#delete_trait_dialog_confirm_message").modal("show");
  });
  jQuery("#delete_selected_trait_dialog_submit").click(function() {
    delete_selected_assayed_trait();
  }); 
  
  function delete_selected_assayed_trait() {
    var pheno_id = phenotypes_id;
    new jQuery.ajax({
        type: 'POST',
        traditional: true,
        url: '/ajax/breeders/trial/<% $trial_id %>/delete_single_trait',
        dataType: "json",
        data: {
            'pheno_id': JSON.stringify(pheno_id),
        },
        beforeSend: function(){
            jQuery("#working_modal").modal("show");
        },
        success: function(response){
            jQuery("#working_modal").modal("hide");
            if (response.error){
                alert("Error deleting trait:" +response.error);
            }else{
                jQuery("#delete_trait_dialog_success_message").modal("show");
            }
        },
        error: function(){
            jQuery('#working_modal').modal("hide");
            alert('An error occurred deleting trait');
        }
    });
  
  }
  
  function heatmap_check_change(value) {
      var val = jQuery("#check_list_dropdown").val(value);
      var ret = value.split(",");
      var valStock = ret[0];
      var valPlot = ret[1];
      jQuery('#check_plot_link').html(valPlot + " came from Plot:"+ valStock);
  }
  
   jQuery("#view_ctrl_id_button").click(function(){
       jQuery("#view_ctrl_button").css("display", "none");
       jQuery("#ctrldiv").css("display", "inline-block");
       
       var list_of_checks = checks;  
       var trial_checks_html = "<select class='form-control' id='check_list_dropdown'>";
       trial_checks_html = trial_checks_html + "<option value=''>checks and plot numbers</option>";
       jQuery.each(list_of_checks, function( key, value) {
           trial_checks_html = trial_checks_html + "<option value="+ key + "," + value + " >" + "Plot:"+ key + "  [" + value +"]"+ "</option>";
       });
       trial_checks_html = trial_checks_html +"</select>";
       jQuery("#heatmap_trial_checks_dropdown").html(trial_checks_html);
       jQuery("#heatmap_trial_checks_dropdown>select").change(function(){
           heatmap_check_change(this.value);
       });
   });
      
});

</script>
