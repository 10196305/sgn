
<%args>
$trial_id
</%args>


<& /util/import_javascript.mas, classes => [ 'kinetics.kinetic.js', 'jqueryui.js', 'jquery.js', 'jstree.dist.jstree' ] &>

<style>
    #trait_heatmap {display: inline; }
    #trial_no_phenoMSG {display: none; }
    #traitdiv {display: none; }
</style>

<div id="trait_heatmap" >loading...</div>
<div id="trial_no_phenoMSG" >Upload trial phenotypes to view trait assayed heatmap</div>


<div class="form-group form-group-sm" id="traitdiv" >
    <label for="trial_summary_hist_dropdown" class="col-sm-2 control-label">Select:</label>
    <div class="col-sm-10">
        <div id="traits_assayed_dropdown">
        </div>
    </div>
</div>

<script defer="defer">
var trial_id = <% $trial_id %>;
var value = 'plot';
jQuery(document).ready( function() {

    jQuery('#pheno_heatmap_onswitch').click( function() {
        jQuery.ajax ( {
            url : '/ajax/breeders/trial/'+ <% $trial_id %> + '/traits_assayed?stock_type='+value,
            beforeSend: function() {
              jQuery("#working_modal").modal("show");
            },
            success: function(response){
                if (response.traits_assayed[0][0]) {
                    var traits_assayed_html = "<select class='form-control' id='trial_summary_hist_dropdown'>";
                    for (i=0; i<response.traits_assayed[0].length; i++) {
                        traits_assayed_html = traits_assayed_html + "<option value="+ response.traits_assayed[0][i][0] + " >" + response.traits_assayed[0][i][1] + "</option>";
                    }
                    traits_assayed_html = traits_assayed_html +"</select>";
                    jQuery("#trait_heatmap").css("display", "none");                    
                    jQuery("#traits_assayed_dropdown").html(traits_assayed_html);
                    jQuery("#traitdiv").css("display", "inline-block");
                    jQuery("#working_modal").modal("hide");
                } 
                else {
                    jQuery("#working_modal").modal("hide");
                    jQuery("#trait_heatmap").css("display", "none"); 
                    jQuery("#traitdiv").css("display", "none");
                    jQuery("#trial_no_phenoMSG").css("display", "inline-block");
                    
                }
            },
            error: function(response){
                alert('Error retrieving traits assayed in this trial');
            }

        });
        
         jQuery.ajax( {
              url: '/ajax/breeders/trial/'+trial_id+'/heatmap', 
              success: function(response) {
                
                 if (response.phenotypes){
                    //jQuery("#trait_heatmap").css("display", "none");
                    //jQuery("#traitdiv").css("display", "inline-block");
                 }
                 else  {
                        //jQuery("#trait_heatmap").css("display", "none");
                        //jQuery("#trial_no_phenoMSG").css("display", "inline-block");    
                 }
              },
              error: function(reponse) {
                 alert('Error displaying traits assayed heatmap');   
              }
         });
    });
});

</script>

<%doc>

<style>

#container_heatmap {
    //border:2px dashed #000;
    height: 490px;
    width: 700px;
    overflow: auto;
    //overflow: scroll;
    display: none;
    margin: 10px;
}
 #trait_heatmap {display: inline; }
 #trial_no_phenoMSG {display: none; }
 #row_desc_heatmap {display: none; margin: 2px}
 #col_desc_heatmap {display: none; margin: 2px}

.row_desc_heatmap {
    transform: rotate(-270deg);
    /*transform-origin: left top;*/
    transform-origin: 0% 4%;
    float: left;
}

</style>

<div id="row_desc_heatmap" class="row_desc_heatmap" >  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <b>Field Layout Rows </b></div>
<p></br><div id="col_desc_heatmap" class="col_desc_heatmap">  &nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;  <ul class="legend">
  <li><span class="block_even_number"></span> Even Block Numbers (e.g. 2,4,...)</li>
  <li><span class="block_odd_number"></span> Odd Block Numbers (e.g. 1,3,...)</li>
  <li><span class="checks"></span> Checks</li>
  <li><span class="rep_odd_number"></span> Odd Rep Numbers (e.g. 1,3,...)</li>
  <li><span class="rep_even_number"></span> Even Rep Numbers (e.g. 2,4,...)</li>
</ul> </br></br> <b>Field Layout Columns </b></div></p>

<div id="container_heatmap" ></div>
<div id="trait_heatmap" >loading...</div>
<div id="trial_no_phenoMSG" >Upload physical field coordinates for this trial</div>
<div class="col-sm-10" id="d_button" style="display:none";>
  <a id="download_heatmap" class="btn btn-primary">Download as Image</a> &nbsp;  
</div>


<script defer="defer">
var trial_id = <% $trial_id %>;
//alert("trial_id: "+trial_id)
  jQuery(document).ready( function() {

  jQuery('#pheno_heatmap_onswitch').click( function() {

   jQuery.ajax( {
        url: '/ajax/breeders/trial/'+trial_id+'/coords', 
        beforeSend: function() {
          jQuery("#working_modal").modal("show");
        },
        success: function(response) {
           jQuery("#working_modal").modal("hide");
           //alert("coordfile: "+response.coord_row);
       if (response.coord_col[0] && response.coord_row[0]){
           jQuery("#container_heatmap").css({"display": "inline-block", "overflow": "auto"});
           //$("#container_heatmap").css({"display": "inline-block", "overflow": "auto"});
           jQuery("#row_desc_heatmap").css("display","inline-block");
           jQuery("#col_desc_heatmap").css("display","inline-block");
           jQuery("#trait_heatmap").css("display", "none");
           jQuery("#d_button").css("display", "inline-block");
       }

       else  {
           jQuery("#trait_heatmap").css("display", "none");
           //jQuery("#trait_heatmap").html('Upload physical field coordinates');
           jQuery("#trial_no_phenoMSG").css("display", "inline-block");
       }

       var width = 65;
       var plot_counter = 0;
           var max_row = response.max_row;
           var max_col = response.max_col;
       var max_rep = response.max_rep;
       var max_block = response.max_block;

       var stage = new Kinetic.Stage({
           container: 'container_heatmap',
           //width: 2000,
           //height: 2000,
       width: max_col * width + 65,
           height: max_row * width + 65,

           });

           var plot_layer = new Kinetic.Layer();
       var popup_layer = new Kinetic.Layer();

   var array_index;
       for  (y = 0; y < max_row; y = y + 1) {
           for ( x = 0; x < max_col; x = x + 1){

               plot_counter++;

               if (response.plot_number[y][x]){

               } else {
                   response.plot_number[y][x] = '';
                   }

               draw_rect(stage, plot_layer, popup_layer, response.plot_msg[y][x], x, y, max_col, response.coord_col[x], response.coord_row[y], plot_counter, response.plot_id[y][x], response.plot_number[y][x], max_rep, max_block, response.controls, response.acc[y][x], response.blk[y][x], response.rep_no[y][x], response.plot_name[y][x]);

           }
       }

       stage.add(plot_layer);
       stage.add(popup_layer);

       },
     error: function(reponse) {
          jQuery("#working_modal").modal("hide");
     }
   });
 });

function draw_rect(stage, plot_layer, popup_layer, plot_msg, x, y, max_col, col_number, row_number, plot_counter, plot_id, plot_number, max_rep, max_block, controls, accessions, blk, rep_no, plot_name){
//alert("plot id: "+plot_id+ ", accession: "+accessions );
 var width = 65;
   var popup_x = width;
 var popup_width = 200;
   x = x * width;
   y = y * width;
   if (x + width > max_col * width / 2){
       popup_x = -1 * popup_width;
   }
 if (x + width > max_col * width / 2 && max_col <= 5) {
   popup_x = -1 * popup_width + 60;
 }

 var color;
 if (max_block == 1){
   color = '#C0C0C0';
 }
 else if (max_block > 1){
   function isEven(blk){
       if (blk % 2 == 0)
         color = '#cca6ac';
       else
         color = '#C0C0C0';
   }
   isEven(blk);
 }
 else{
   color = '#cca6ac';
 }

 if (controls) {
 //alert("the control: "+controls);
   for (var i = 0; i < controls.length; i++) {
     if ( controls[i] == accessions) {
       color = '#58d68d';
     }
   }
 }

 var stroke_col;
 if (max_rep == 1) {
   stroke_col = 'black';
 }
 else if (max_rep > 1){
   function isEven(rep_no){
       if (rep_no % 2 == 0)
         stroke_col = ' #f4d03f ';
       else
         stroke_col = 'black';
   }
   isEven(rep_no);
 }
 else{
     stroke_col = ' #f4d03f ';
 }

   var myRectangle = new Kinetic.Rect({
   x:x,
   y:y,
   width:width,
   height:width,
   //fill:'#C0C0C0',
   fill: color,
   stroke: stroke_col,
   strokeWidth:3,
   //draggable: true
 });

   var plot_txt_info = new Kinetic.Text({
       x:x +10,
       y:y + width/2,
       //text: plot_counter,
   text: plot_number,
       fontSize: 20,
       fontFamily: 'Arial',
       fill: "white"
     });


     myRectangle.on('mouseover', function() {

   //this.setFill('#ddd');
   //plot_layer.draw();

   var plot_txt = new Kinetic.Text({
       x: x+popup_x+5+10,
       y: y+14,
       text: plot_msg,
       fontSize: 14,
       fontFamily: 'Arial',
       fill: "white"
     });

        var plot_popup = new Kinetic.Rect({
        x: x+popup_x+10,
        y: y+8,
        fill: '#000',
            opacity: 0.6,
        width: popup_width+10,
        height: 90,
        cornerRadius: 10
     });

     popup_layer.add(plot_popup);
     popup_layer.add(plot_txt);
     popup_layer.draw();

     });

     myRectangle.on('mouseout', function() {

        //this.setFill('#C0C0C0');
         //plot_layer.draw();

       popup_layer.removeChildren();
          popup_layer.draw();

     });

     myRectangle.addEventListener("dblclick", myFunction);

     function myFunction() {
       window.location.href = '/stock/'+plot_id+'/view';
     }

     plot_layer.add(myRectangle);
     plot_layer.add(plot_txt_info);

}

function downloadCanvas(link, canvasId, filename) {
   //var canvas = document.getElementById(canvasId);
   var canvas = document.getElementsByTagName('canvas')[0];
   var dataurl = canvas.toDataURL();
    link.href = dataurl;
    link.download = filename;
}

document.getElementById('download_heatmap').addEventListener('click', function() {
      downloadCanvas(this, 'container_heatmap', 'fieldMap.png');
}, false);

});

</script>

<style>
#download_heatmap {
       float:left;
       cursor:pointer;
       color:#ccc;
       padding:3px;
   }
   #download_heatmap:hover {
       color:#fff;
   }

.legend { list-style: none; }
.legend li { float: left; margin-right: 10px; }
.legend span { border: 1px solid #ccc; float: left; width: 12px; height: 12px; margin: 2px; }
/* your colors */
.legend .block_even_number { background-color: #cca6ac; }
.legend .block_odd_number { background-color: #C0C0C0; }
.legend .checks { background-color: #58d68d; }
.legend .rep_even_number { background-color: #f4d03f; height: 4px; width: 16px;}
.legend .rep_odd_number { background-color: black; height: 4px; width: 16px;}
</style>

</%doc>