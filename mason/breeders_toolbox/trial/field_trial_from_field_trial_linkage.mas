
<%args>
$trial_id
$trial_type
</%args>

<& /util/import_javascript.mas, legacy => [ "d3/d3-shape/dist/d3-shape.js", "d3/d3-pedigree-tree.js", "d3/d3Min.js", "d3/d3-sankey/dist/d3-sankey.js", "d3/d3-sankey/src/sankey.js", "d3/d3-array/dist/d3-array.js", "d3/d3-path/dist/d3-path.js" ]  &>


<div id="field_trial_to_field_trial_html">
</div>

<script>

jQuery(document).ready(function () {

    // jQuery('#field_trial_from_field_trial_section_onswitch').one("click",  function() {
    //     jQuery.ajax ({
    //         url : '/ajax/breeders/trial/'+<% $trial_id %>+'/field_trial_from_field_trial',
    //         beforeSend: function() {
    //             jQuery("#working_modal").modal("show");
    //         },
    //         success: function(response){
    //             //console.log(response);
    //             jQuery("#working_modal").modal("hide");
    //             var html1 = '<table class="table table-hover table-bordered"><thead><tr><th>Source Field Trial(s) For This Field Trial</th></tr></thead><tbody>';
    //             var html2 = '<table class="table table-hover table-bordered"><thead><tr><th>Field Trial(s) Sourced From This Field Trial</th></tr></thead><tbody>';
    //             for (var i=0; i<response.source_field_trials.length; i++){
    //                 html1 = html1 + '<tr><td><a href="/breeders/trial/'+response.source_field_trials[i][0]+'">'+response.source_field_trials[i][1]+'</a></td></tr>';
    //             }
    //             for (var i=0; i<response.field_trials_sourced.length; i++){
    //                 html2 = html2 + '<tr><td><a href="/breeders/trial/'+response.field_trials_sourced[i][0]+'">'+response.field_trials_sourced[i][1]+'</a></td></tr>';
    //             }
    //             html1 = html1 + '</tbody></table>';
    //             html2 = html2 + '</tbody></table>';
    //             jQuery('#field_trial_to_field_trial_html').html(html1+html2);
    //         },
    //         error: function(response){
    //             jQuery("#working_modal").modal("hide");
    //             alert("Error retrieving field trial to field trial linkage.");
    //         }
    //     });
    // });


    jQuery('#field_trial_from_field_trial_section_onswitch').one("click",  function() {
      var trial_id = <% $trial_id %>;
      jQuery.ajax({
        url : '/ajax/breeders/trial/'+<% $trial_id %>+'/field_trial_from_field_trial',
        beforeSend: function() {
                     jQuery("#working_modal").modal("show");
        },
        success: function(r){
          jQuery('#working_modal').modal("hide");

          var html1 = '<table class="table table-hover table-bordered"><thead><tr><th>Source Field Trial(s) For This Field Trial</th></tr></thead><tbody>';
          var html2 = '<table class="table table-hover table-bordered"><thead><tr><th>Field Trial(s) Sourced From This Field Trial</th></tr></thead><tbody>';
          for (var i=0; i<r.source_field_trials.length; i++){
              html1 = html1 + '<tr><td><a href="/breeders/trial/'+r.source_field_trials[i][0]+'">'+r.source_field_trials[i][1]+'</a></td></tr>';
          }
          for (var i=0; i<r.field_trials_sourced.length; i++){
              html2 = html2 + '<tr><td><a href="/breeders/trial/'+r.field_trials_sourced[i][0]+'">'+r.field_trials_sourced[i][1]+'</a></td></tr>';
          }
          html1 = html1 + '</tbody></table>';
          html2 = html2 + '</tbody></table>';
          jQuery('#field_trial_to_field_trial_html').html(html1+html2);

          var nodes = [{"name":"This Trial", "id":"This Trial" , "type":'<% $trial_type %>'}];
          var links = [];

          //Build data from response: will be an object with two arrays, one of nodes and one of links
          for (var i = 0; i < r.source_field_trials.length; i++){
            nodes.push({"name":r.source_field_trials[i][1], "id":r.source_field_trials[i][1]});
            links.push({"source":r.source_field_trials[i][1], "target": "This Trial", "value":1/r.source_field_trials.length});
          }
          for (var i = 0; i < r.field_trials_sourced.length; i++){
            nodes.push({"name":r.field_trials_sourced[i][1], "id":r.field_trials_sourced[i][1]});
            links.push({"source":"This Trial", "target": r.field_trials_sourced[i][1], "value":1/r.field_trials_sourced.length});
          }

          let data={nodes, links};
          console.log(data);

          //Set margins and set up svg area
          var margin = {top: 100, right: 100, bottom: 100, left: 100};
          var width = document.querySelector('#field_trial_to_field_trial_html').offsetWidth*0.90;
          var height = 300;//document.querySelector('#field_trial_to_field_trial_html').offsetHeight*0.90;

          var svg = d3.select("#field_trial_to_field_trial_html").append("svg")
          .attr("width", width + margin.left + margin.right)
          .attr("height", height + margin.top + margin.bottom)
          .append("g")
          .attr("transform","translate(" + (margin.left + 0) + "," + (margin.top + 0) + ")");

          const sankey = d3
            .sankey()
            .size([width, height])
            .nodeId(d => d.id)
            .nodeWidth(20)
            .nodePadding(10)
            .nodeAlign(d3.sankeyCenter);
          let graph = sankey(data);

          var tooltip = svg.append("path")
            .attr('fill', 'white')
            .attr('stroke', 'black')
            .attr('stroke-width', '1.5');

          d3.selection.prototype.moveToFront = function() {
            return this.each(function(){
              this.parentNode.appendChild(this);
            });
          };

          //var tooltip_text;

          nodes = svg
            .append("g")
            .classed("nodes", true)
            .selectAll("rect")
            .data(graph.nodes)
            .enter()
            .append("rect")
            .classed("node", true)
            .attr("x", d => d.x0)
            .attr("y", d => d.y0)
            .attr("width", d => d.x1 - d.x0)
            .attr("height", d => d.y1 - d.y0)
            .attr("fill", "#add8e6")
            .attr("opacity", 0.8)
            .on("mouseover", function(d){
              d3.select(this).attr("fill", "#6699cc");
              var pathString = "M "+(  d.x0  )+" "+( d.y0 )+" l 10 -10 h 50 c 5 0 5 0 5 -5 v -50 c 0 -5 0 -5 -5 -5 h -120 c -5 0 -5 0 -5 5 v 50 c 0 5 0 5 5 5 h 50 l 10 10 z";
              tooltip.attr("d", pathString);
              d3.select(tooltip).moveToFront();
            })
            .on("mouseout", function(d){
              d3.select(this).attr("fill", "#add8e6");
              tooltip.attr("d", null);
              d3.select(tooltip).moveToFront();
            });

          links = svg
            .append("g")
            .classed("links", true)
            .selectAll("path")
            .data(graph.links)
            .enter()
            .append("path")
            .classed("link", true)
            .attr("d", d3.sankeyLinkHorizontal())
            .attr("fill", "none")
            .attr("stroke", "#D3D3D3")
            .attr("stroke-width", d => d.width)
            .attr("marker-end", "url(#triangle)")
            .attr("stoke-opacity", 0.3)
            .on("mouseover", function(){
              d3.select(this).attr("stroke", "#808080");
            })
            .on("mouseout", function(){
              d3.select(this).attr("stroke", "#D3D3D3");
            });

          labels = svg
            .append("g")
            .classed("text", true)
            .selectAll("text")
            .data(graph.nodes)
            .enter()
            .append("text")
            .classed("node", true)
            .attr("text-anchor", "middle")
            .attr("x", d => d.x0)
            .attr("y", d => (d.y1 + d.y0)/2 - 5)
            .text(d => d.name)
            .attr("transform", function(d){
              return "rotate(270, "+ (d.x0 + 14) +", "+ ((d.y1 + d.y0)/2 - 5) +")";
            });



        },
        error: function(r){
          jQuery("#working_modal").modal("hide");
          alert("Error retrieving field trial to field trial linkage.");
        }
      });
    });


});

</script>
