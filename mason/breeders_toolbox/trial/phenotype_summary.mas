
<%args>
$trial_id
@traits_assayed
</%args>

<& /util/import_javascript.mas, classes => [ 'jquery', 'jquery.dataTables', 'd3.d3Min' ] &>

<style>

.bar rect {
  fill: steelblue;
  shape-rendering: crispEdges;
}

.bar text {
  fill: #fff;
}

.axis path, .axis line {
  fill: none;
  stroke: #000;
  shape-rendering: crispEdges;
}

</style>


<div class="well well-sm">
     <center><h4>Raw Data Statistics</h4></center><hr>
     <table id="phenotype_summary_data" class="display">
     <thead>
     <tr>
     <th>Trait</th>
     <th>Average</th>
     <th>Min</th>
     <th>Max</th>
     <th>Std Dev</th>
     <th>Count</th>
     <th>More Info</th>
     </tr>
     </thead>
     <tbody>
     </tbody>
     </table>
</div>

<div class="well well-sm">
  <center><h4>Raw Data Histogram</h4></center><hr>
  <div class="row">
    <div class="col-sm-8">
      <form class="form-horizontal">
        <div class="form-group form-group-sm">
    	  <label for="trial_summary_hist_dropdown" class="col-sm-2 control-label">Select:</label>
    	  <div class="col-sm-10">

      	    <select class="form-control" id="trial_summary_hist_dropdown" onchange="trait_summary_hist_change(this.value)">
% foreach (@traits_assayed) {
  <option value="<% $_->[0] %>" ><% $_->[1] %></option>
% }

	    </select>
    	  </div>
  	</div>
      </form>
    </div>
    <div class="col-sm-4">
    </div>
  </div>

  <div id="trial_summary_hist">
  </div>
</div>


<link rel="stylesheet" type="text/css" href="/documents/inc/datatables/jquery.dataTables.css">

<script>

jQuery(document).ready(function () {

   jQuery('#trial_detail_traits_assayed_onswitch').click( function() {

      jQuery('#phenotype_summary_data').DataTable( { 
      	  'retrieve': true,
          'ajax': '/ajax/breeders/trial/'+ <% $trial_id %> + '/phenotypes',
      });

      jQuery.ajax( {
          url : '/ajax/breeders/trial/'+ <% $trial_id %> +'/trait_histogram/'+jQuery("#trial_summary_hist_dropdown").val(),
          type: 'POST',
	  beforeSend: function() {
	    jQuery("#working_modal").modal("show");
	  },
	  success: function(response){ 
	  	jQuery("#working_modal").modal("hide");
		if (response.error) { 
		    alert(response.error);
		}
		else { 
		 d3.select("#trial_summary_hist").selectAll("*").remove();
		 plot_histogram(response.data);
		}
	  },
	  error: function(response) { 
	      jQuery("#working_modal").modal("hide");
	      alert('An error occured retrieving trait histogram data.');
	  }
      });

   });

});

function trait_summary_hist_change(value) {
      jQuery.ajax( {
          url : '/ajax/breeders/trial/'+ <% $trial_id %> +'/trait_histogram/'+value,
          type: 'POST',
	  beforeSend: function() {
	    jQuery("#working_modal").modal("show");
	  },
	  success: function(response){ 
	        jQuery("#working_modal").modal("hide");
		if (response.error) { 
		    alert(response.error);
		}
		else { 
		 d3.select("#trial_summary_hist").selectAll("*").remove();
		 plot_histogram(response.data);
		}
	  },
	  error: function(response) { 
	      jQuery("#working_modal").modal("hide");
	      alert('An error occured retrieving trait histogram data.');
	  }
      });
}

function plot_histogram(values) {

      // A formatter for counts.
      var formatCount = d3.format(",.0f");

      var div_width = document.getElementById("trial_summary_hist").offsetWidth;

      var margin = {top: 10, right: 30, bottom: 30, left: 30},
      width = div_width - margin.left - margin.right,
      height = 200 - margin.top - margin.bottom;

      var x = d3.scale.linear()
      .domain([d3.min(values),d3.max(values)])
      .range([0, width]);

      // Generate a histogram using twenty uniformly-spaced bins.
      var data = d3.layout.histogram()
      .bins(x.ticks(20))
      (values);

      var y = d3.scale.linear()
      .domain([0, d3.max(data, function(d) { return d.y; })])
      .range([height, 0]);

      var xAxis = d3.svg.axis()
      .scale(x)
      .orient("bottom");

      var svg = d3.select("#trial_summary_hist").append("svg")
      .attr("id", "svg_id")
      .attr("width", width + margin.left + margin.right)
      .attr("height", height + margin.top + margin.bottom)
      .append("g")
      .attr("id", "g_id")
      .attr("transform", "translate(" + margin.left + "," + margin.top + ")");

      var bar = svg.selectAll(".bar")
      .data(data)
      .enter().append("g")
      .attr("id", "g_id")
      .attr("class", "bar")
      .attr("transform", function(d) { return "translate(" + x(d.x) + "," + y(d.y) + ")"; });

      bar.append("rect")
      .attr("id", "rect_id")
      .attr("x", 1)
      .attr("width", (x.range()[1] - x.range()[0]) / 20 )
      .attr("height", function(d) { return height - y(d.y); });

      bar.append("text")
      .attr("id", "text_id")
      .attr("dy", ".75em")
      .attr("y", 6)
      .attr("x", ((x.range()[1] - x.range()[0]) / 20) / 2)
      .attr("text-anchor", "middle")
      .text(function(d) { return formatCount(d.y); });

      svg.append("g")
      .attr("id", "g_id")
      .attr("class", "x axis")
      .attr("transform", "translate(0," + height + ")")
      .call(xAxis);
}

  
</script>
