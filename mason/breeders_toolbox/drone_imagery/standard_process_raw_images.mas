<%args>
</%args>

<& /util/import_javascript.mas, classes => [ 'jquery.iframe-post-form', 'CXGN.BreederSearch', 'd3.d3v4Min.js', "opencv.opencv" ] &>

<style>
.ui-autocomplete { z-index:2147483647; }

.straightLine, .hrLine{
  position: absolute;
  background-color: red;
  transition: transform .05s ease-in-out;
}
</style>

<div id="manage_drone_imagery_standard_process_raw_images_interactive_div" style="display:none">

    <& /page/page_title.mas, title=>"Manage Drone Imagery: Run A Standard Process On Raw Images Interactively" &>

    <&| /util/workflow.mas, id=> "manage_drone_imagery_standard_process_raw_images_interactive_workflow" &>
        <&| /util/workflow.mas:step, title=> "Intro" &>
            <& /page/page_title.mas, title=>"This workflow will guide you through applying a standard process to your aerial imaging bands interactively" &>

            <div class="well well-sm">
                <p>This process will allow you to manually assign plot-polygons to the raw images.</p>
            </div>

            <br/><br/>
            <center>
            <button class="btn btn-primary" onclick="Workflow.complete(this); return false;">Go to Next Step</button>
            </center>
        </&>
        <&| /util/workflow.mas:step, title=> "Plot Polygons" &>
            <& /page/page_title.mas, title=>"Assign plot-polygons to raw images" &>

            <div class="well well-sm">
                <ul>
                    <li>(1) Drag and adjust the rotation of images to correct overlap.</li>
                    <li>(2) Click the four corners encompassing the entire field.</li>
                    <li>(3) Give the number of rows and columns.</li>
                </ul>
                <hr>
                <button class="btn btn-primary" id="drone_imagery_standard_process_raw_images_interactive_match">Match and Align Next Image Pair</button>
                <button class="btn btn-default" id="drone_imagery_standard_process_raw_images_interactive_match_restart">Start Over Alignment</button>
            </div>

            <form class="form-horizontal">
                <div class="form-group form-group-sm">
                    <label class="col-sm-6 control-label">Rotate Images: </label>
                    <div class="col-sm-6">
                        <input type="range" min="0" max="360" id="drone_imagery_standard_process_raw_images_interactive_rotate_degrees_input" name="drone_imagery_standard_process_raw_images_interactive_rotate_degrees_input" value="0.00">
                    </div>
                </div>
                <div class="form-group form-group-sm">
                    <label class="col-sm-6 control-label">Rotate Frame: </label>
                    <div class="col-sm-6">
                        <input type="range" min="0" max="360" id="drone_imagery_standard_process_raw_images_interactive_rotate_frame_degrees_input" name="drone_imagery_standard_process_raw_images_interactive_rotate_frame_degrees_input" value="0.00">
                    </div>
                </div>
            </form>
            <hr>

            <div id="drone_imagery_standard_process_raw_images_image_id_interactive_select_div"></div>

            <hr>

            <& /page/detail_page_2_col_section.mas, info_section_collapsible=>1, info_section_collapsed=>0, info_section_title => "<h4 style='display:inline'>Generate Polygon Template Tool</h4>", info_section_subtitle => 'Overlay a uniform grid over the image.', icon_class => "glyphicon glyphicon-th-large", info_section_id => "manage_drone_imagery_generate_plot_polygons_section", id_extension => '_raw_images_interactive' &>

            <div class="well well-sm">
                <button id="drone_imagery_interactive_plot_polygons_clear" class="btn btn-danger">Clear All Polygons</button>
                <button id="drone_imagery_interactive_plot_polygons_clear_one" class="btn btn-danger">Remove One Polygon</button>
            </div>

            <div id="drone_imagery_interactive_generated_polygons_div"></div>

            <hr>
            <div class="well well-sm">
                <div id="drone_imagery_interactive_trial_layout_div"></div>
            </div>

            <br/><br/>
            <center>
            <button class="btn btn-primary" id="drone_imagery_standard_process_interactive_raw_images_assign_plot" onclick="return false;">Assign Plot Images (Saves)</button>
            </center>
        </&>
    </&>

</div>

<div class="modal fade" id="drone_imagery_interactive_plot_polygon_template_options_dialog" name="drone_imagery_interactive_plot_polygon_template_options_dialog" tabindex="-1" role="dialog" aria-labelledby="droneImageryInteractivePlotPolygonTemplateDialog" data-backdrop="static">
  <div class="modal-dialog modal-xl" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryInteractivePlotPolygonTemplateDialog">Plot Template Options</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">
            <&| /page/info_section.mas, title => 'Copy/Paste Template', collapsible=>1, collapsed => 0, subtitle=> 'Copy/Paste this template onto the image.' &>
                <button class="btn btn-primary" id="drone_imagery_interactive_plot_polygon_template_options_paste_click">Click To Paste</button>
            </&>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
      </div>
    </div>
  </div>
</div>

<div class="modal fade" id="drone_imagery_interactive_plot_polygon_remove_polygon" name="drone_imagery_interactive_plot_polygon_remove_polygon" tabindex="-1" role="dialog" aria-labelledby="droneImageryInteractiveRemovePlotPolygonDialog" data-backdrop="static">
  <div class="modal-dialog modal-sm" role="document">
    <div class="modal-content">
      <div class="modal-header">
        <button type="button" class="close" data-dismiss="modal" aria-label="Close"><span aria-hidden="true">&times;</span></button>
        <h4 class="modal-title" id="droneImageryInteractiveRemovePlotPolygonDialog">Remove Plot Polygon</h4>
      </div>
      <div class="modal-body">
        <div class="container-fluid">
            <form class="form-horizontal">
                <div class="form-group">
                    <label class="col-sm-5 control-label">Polygon Identifier:</label>
                    <div class="col-sm-7">
                        <input class="form-control" id="drone_imagery_interactive_plot_polygon_remove_polygon_number" name="drone_imagery_interactive_plot_polygon_remove_polygon_number" type="number" placeholder="e.g. 3" />
                    </div>
                </div>
            </form>
        </div>
      </div>
      <div class="modal-footer">
        <button type="button" class="btn btn-default" data-dismiss="modal">Close</button>
        <button type="button" class="btn btn-primary" id="drone_imagery_interactive_plot_polygon_remove_polygon_submit">Remove Plot Polygon</button>
      </div>
    </div>
  </div>
</div>

<script>
jQuery(document).ready(function(){

    var manage_drone_imagery_standard_process_raw_images_interactive_field_trial_id;
    var manage_drone_imagery_standard_process_raw_images_interactive_drone_run_id;
    var manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle = 0;
    var manage_drone_imagery_standard_process_raw_images_interactive_rotate_frame_angle = 0;
    var manage_drone_imagery_standard_process_raw_images_interactive_x_factor = 10000000;
    var manage_drone_imagery_standard_process_raw_images_interactive_y_factor = 16000000;
    var manage_drone_imagery_standard_process_raw_images_interactive_svg;
    var manage_drone_imagery_standard_process_raw_images_interactive_image;
    var manage_drone_imagery_standard_process_raw_images_nir_image_counter = 0;
    var manage_drone_imagery_standard_process_raw_images_nir_images = [];
    var drone_imagery_interactive_total_width;
    var drone_imagery_interactive_total_length;
    var manage_drone_imagery_standard_process_interactive_gps_images;
    var manage_drone_imagery_standard_process_interactive_saved_gps_positions;
    var manage_drone_imagery_standard_process_interactive_gps_images_rounded;
    var manage_drone_imagery_standard_process_interactive_latitudes;
    var manage_drone_imagery_standard_process_interactive_latitudes_rounded;
    var manage_drone_imagery_standard_process_interactive_longitudes;
    var manage_drone_imagery_standard_process_interactive_longitudes_rounded;
    var manage_drone_imagery_standard_process_interactive_min_longitude;
    var manage_drone_imagery_standard_process_interactive_min_latitude;
    var manage_drone_imagery_standard_process_interactive_latitude_counter = 0;
    var manage_drone_imagery_standard_process_interactive_longitude_counter = 0;
    var drone_imagery_interactive_plot_polygons_removed_numbers = [];
    var drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions = [];
    var plot_polygons_interactive_num_rows_generated;
    var plot_polygons_interactive_num_cols_generated;
    var plot_polygons_interactive_generated_polygons = [];
    var drone_imagery_interactive_plot_polygons_display = [];
    var drone_imagery_interactive_plot_generated_polygons = [];
    var plot_polygons_interactive_number_generated;
    var plot_polygons_interactive_ind_4_points = [];
    var plot_polygons_interactive_display_points = [];
    var drone_imagery_interactive_plot_polygons_available_stock_names = [];
    var drone_imagery_interactive_field_trial_layout_response;
    var drone_imagery_interactive_plot_polygons_removed_numbers = [];
    var plot_polygons_interactive_total_height_generated;

    d3.selection.prototype.moveToFront = function() {
        return this.each(function(){
            this.parentNode.appendChild(this);
        });
    };

    function saveGPSPixelPositions() {
        jQuery.ajax({
            url : '/api/drone_imagery/save_gps_images',
            type: 'POST',
            data : {
                'gps_images': JSON.stringify(manage_drone_imagery_standard_process_interactive_gps_images),
                'drone_run_project_id':manage_drone_imagery_standard_process_raw_images_interactive_drone_run_id
            },
            success: function(response){
                console.log(response);
            },
            error: function(response){
                alert('Error saving GPS images positions!');
            }
        });
    }

    function appendDraggableImage(url, x_pos, y_pos, latitude, longitude, nir_image_id, stack_image_ids, rotate_angle) {

        var imageGroup = manage_drone_imagery_standard_process_raw_images_interactive_svg.append("g")
            .datum({position: x_pos,y_pos})
            .attr("x_pos", x_pos)
            .attr("y_pos", y_pos)
            .attr("latitude", latitude)
            .attr("longitude", longitude)
            .attr("rotate_angle", rotate_angle)
            .attr("nir_image_id", nir_image_id )
            .attr("stack_image_ids", stack_image_ids )
            .attr("transform", d => "translate("+x_pos+","+y_pos+") rotate("+rotate_angle+")");

        var squareFill = imageGroup.append("square")
            .attr("class", "square-fill")
            .attr("cx", manage_drone_imagery_standard_process_raw_images_interactive_image.width / 2)
            .attr("cy", manage_drone_imagery_standard_process_raw_images_interactive_image.length / 2)

        var imageElem = imageGroup.append("image")
            .attr("xlink:href", url)
            .attr("height", manage_drone_imagery_standard_process_raw_images_interactive_image.length)
            .attr("width", manage_drone_imagery_standard_process_raw_images_interactive_image.width);

        imageGroup.call(d3.drag()
            .on("start", dragstarted)
            .on("drag", dragged)
            .on("end", dragended));
    }

    function dragstarted(d) {
        d3.select(this).style("opacity", 0.6);
        d3.select(this).moveToFront();
    }

    function dragged(d) {
        var newX = d3.event.x - manage_drone_imagery_standard_process_raw_images_interactive_image.width / 2;
        var newY = d3.event.y - manage_drone_imagery_standard_process_raw_images_interactive_image.length / 2; 
        d.x_pos = newX;
        d.y_pos = newY;
        var rotate_angle = d3.select(this).attr("rotate_angle");

        d3.select(this)
            .attr("transform", "translate("+newX+","+newY+") rotate("+rotate_angle+")");
    }

    function dragended(d) {
        d3.select(this).lower();
        d3.select(this).style("opacity", 1.0);
        d3.select(this).moveToFront();

        var newX = d3.event.x - manage_drone_imagery_standard_process_raw_images_interactive_image.width / 2;
        var newY = d3.event.y - manage_drone_imagery_standard_process_raw_images_interactive_image.length / 2; 
        d3.select(this).datum({position: newX,newY});
        d3.select(this).attr("x_pos", newX);
        d3.select(this).attr("y_pos", newY);

        var latitude = d3.select(this).attr("latitude");
        var longitude = d3.select(this).attr("longitude");
        manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['x_pos'] = newX;
        manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['y_pos'] = newY;
        manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['rotate_angle'] = manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle;

        d3.selectAll("text").moveToFront();
        d3.selectAll("line").moveToFront();
        d3.selectAll("circle").moveToFront();
        saveGPSPixelPositions();
    }

    jQuery('#drone_imagery_standard_process_raw_images_interactive_match_restart').click(function(){
        jQuery.ajax({
            url : '/api/drone_imagery/delete_gps_images',
            type: 'POST',
            data : {
                'drone_run_project_id':manage_drone_imagery_standard_process_raw_images_interactive_drone_run_id
            },
            success: function(response){
                console.log(response);
                manage_drone_imagery_standard_process_raw_images_nir_image_counter = 0;
                droneImageryInteractiveDrawImages();
            },
            error: function(response){
                alert('Error deleting GPS images template!')
            }
        });
    });

    function droneImageryInteractiveDrawImages(){
        jQuery('#drone_imagery_standard_process_raw_images_image_id_interactive_select_div').empty();

        manage_drone_imagery_standard_process_raw_images_interactive_svg = d3.select("#drone_imagery_standard_process_raw_images_image_id_interactive_select_div").append("svg")
            .attr("width", drone_imagery_interactive_total_width)
            .attr("height", drone_imagery_interactive_total_length)
            .attr("id", "drone_imagery_standard_process_raw_images_image_id_interactive_select_div_area")
            .on("click", function(){
                console.log(d3.mouse(this));
            })

        for (var i=0; i<manage_drone_imagery_standard_process_interactive_latitudes.length; i++) {
            var latitude = manage_drone_imagery_standard_process_interactive_latitudes[i];
            for (var j=0; j<manage_drone_imagery_standard_process_interactive_longitudes.length; j++) {
                var longitude = manage_drone_imagery_standard_process_interactive_longitudes[j];
                if (manage_drone_imagery_standard_process_interactive_saved_gps_positions && manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude] && manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude] && manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['x_pos']) {
                    var image_url = manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['image_url'];
                    var nir_image_id = manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['nir_image_id'];
                    var image_ids = manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['image_ids'];
                    var x_pos = manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['x_pos'];
                    var y_pos = manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['y_pos'];
                    manage_drone_imagery_standard_process_raw_images_nir_images.push(nir_image_id);
                    var rotate_angle = manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['rotate_angle'] ? manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['rotate_angle'] : manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle;
                    manage_drone_imagery_standard_process_interactive_saved_gps_positions[latitude][longitude]['rotate_angle'] = rotate_angle;
                    appendDraggableImage(image_url, x_pos, y_pos, latitude, longitude, nir_image_id, JSON.stringify(image_ids), rotate_angle);
                }
                else if (manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]) {
                    var image_url = manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['image_url'];
                    var nir_image_id = manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['nir_image_id'];
                    var image_ids = manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['image_ids'];
                    var x_pos = Math.round((longitude - manage_drone_imagery_standard_process_interactive_min_longitude)*manage_drone_imagery_standard_process_raw_images_interactive_x_factor);
                    var y_pos = Math.round((latitude - manage_drone_imagery_standard_process_interactive_min_latitude)*manage_drone_imagery_standard_process_raw_images_interactive_y_factor);
                    manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['x_pos'] = x_pos;
                    manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['y_pos'] = y_pos;
                    manage_drone_imagery_standard_process_raw_images_nir_images.push(nir_image_id);
                    appendDraggableImage(image_url, x_pos, y_pos, latitude, longitude, nir_image_id, JSON.stringify(image_ids), manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle);
                }
            }
        }
    }

    function droneImageryInteractiveRotateImages(){
        d3.selectAll('g').each(function(d) {
            var x_pos = d3.select(this).attr('x_pos');
            var y_pos = d3.select(this).attr('y_pos');
            d3.select(this).attr("transform", "translate("+x_pos+","+y_pos+") rotate("+manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle+")");
            d3.select(this).attr("rotate_angle", manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle);
            var latitude = d3.select(this).attr('latitude');
            var longitude = d3.select(this).attr('longitude');
            manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['rotate_angle'] = manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle;
        });
        saveGPSPixelPositions();
    }

    jQuery('#drone_imagery_standard_process_raw_images_interactive_match').click(function(){
        console.log(manage_drone_imagery_standard_process_interactive_gps_images_rounded);

        var image_id1 = manage_drone_imagery_standard_process_raw_images_nir_images[manage_drone_imagery_standard_process_raw_images_nir_images.length-manage_drone_imagery_standard_process_raw_images_nir_image_counter-1];
        var image_id2 = manage_drone_imagery_standard_process_raw_images_nir_images[manage_drone_imagery_standard_process_raw_images_nir_images.length-manage_drone_imagery_standard_process_raw_images_nir_image_counter-2];
        if (image_id1 == undefined || image_id2 == undefined) {
            alert('No more images to match!');
            return false;
        }

        jQuery.ajax({
            url : '/api/drone_imagery/match_and_align_two_images',
            type: 'POST',
            data : {
                'image_id1':image_id1,
                'image_id2':image_id2,
                'drone_run_project_id':manage_drone_imagery_standard_process_raw_images_interactive_drone_run_id
            },
            success: function(response){
                console.log(response);

                var x_pos_dst;
                var x_pos_src;
                var y_pos_dst;
                var y_pos_src;
                d3.selectAll('g').each(function(d) {
                    var nir_image_id = d3.select(this).attr('nir_image_id');
                    if (nir_image_id == response.image_id_dst) {
                        x_pos_dst = d3.select(this).attr('x_pos');
                        y_pos_dst = d3.select(this).attr('y_pos');
                    }
                    if (nir_image_id == response.image_id_src) {
                        x_pos_src = d3.select(this).attr('x_pos');
                        y_pos_src = d3.select(this).attr('y_pos');
                    }
                });

                var src_match = response.match_points_src[0];
                var x_pos_match_src = parseInt(x_pos_src) + parseInt(src_match[0]);
                var y_pos_match_src = parseInt(y_pos_src) + parseInt(src_match[1]);

                var dst_match = response.match_points_dst[0];
                var x_pos_match_dst = x_pos_match_src - dst_match[0];
                var y_pos_match_dst = y_pos_match_src - dst_match[1];

                d3.selectAll('g').each(function(d) {
                    var nir_image_id = d3.select(this).attr('nir_image_id');
                    if (nir_image_id == response.image_id_dst) {
                        d3.select(this).attr('x_pos', x_pos_match_dst);
                        d3.select(this).attr('y_pos', y_pos_match_dst);
                        //d3.select(this).attr('aligned_image_id', response.align_image_id);

                        var rotate_angle = d3.select(this).attr('rotate_angle');
                        d3.select(this).attr("transform", "translate("+x_pos_match_dst+","+y_pos_match_dst+") rotate("+rotate_angle+")");
                        d3.select(this).moveToFront();

                        var latitude = d3.select(this).attr('latitude');
                        var longitude = d3.select(this).attr('longitude');
                        manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['x_pos'] = x_pos_match_dst;
                        manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['y_pos'] = y_pos_match_dst;
                        manage_drone_imagery_standard_process_interactive_gps_images[latitude][longitude]['rotate_angle'] = rotate_angle;

                        //d3.select(this).select("image").remove();
                        //d3.select(this).append("image")
                        //    .attr("xlink:href", response.align_image_url)
                        //    .attr("height", manage_drone_imagery_standard_process_raw_images_interactive_image.length)
                        //    .attr("width", manage_drone_imagery_standard_process_raw_images_interactive_image.width);
                    }
                });

                manage_drone_imagery_standard_process_raw_images_nir_image_counter = manage_drone_imagery_standard_process_raw_images_nir_image_counter + 1;
                
                saveGPSPixelPositions();
            },
            error: function(response){
                alert('Error matching and aligning two images!')
            }
        });
    });

    function initializeImagesNorthOrSouth(){
        jQuery.ajax({
            url : '/api/drone_imagery/get_drone_imagery_gps?drone_run_project_id='+manage_drone_imagery_standard_process_raw_images_interactive_drone_run_id,
            success: function(response){
                console.log(response);

                manage_drone_imagery_standard_process_interactive_gps_images = response.gps_images;
                manage_drone_imagery_standard_process_interactive_saved_gps_positions = response.saved_gps_positions;
                if (manage_drone_imagery_standard_process_interactive_saved_gps_positions) {
                    manage_drone_imagery_standard_process_interactive_gps_images = manage_drone_imagery_standard_process_interactive_saved_gps_positions;
                }
                manage_drone_imagery_standard_process_interactive_gps_images_rounded = response.gps_images_rounded;
                manage_drone_imagery_standard_process_interactive_latitudes = response.latitudes;
                manage_drone_imagery_standard_process_interactive_latitudes_rounded = response.latitudes_rounded;
                manage_drone_imagery_standard_process_interactive_longitudes = response.longitudes;
                manage_drone_imagery_standard_process_interactive_longitudes_rounded = response.longitudes_rounded;
                manage_drone_imagery_standard_process_interactive_min_longitude = response.min_longitude;
                manage_drone_imagery_standard_process_interactive_min_latitude = response.min_latitude;

                if (response.x_range != 0) {
                    drone_imagery_interactive_total_width = response.x_range + response.image_width;
                } else {
                    drone_imagery_interactive_total_width = (response.max_longitude - response.min_longitude)*100*manage_drone_imagery_standard_process_raw_images_interactive_x_factor;
                }
                if (response.y_range != 0) {
                    drone_imagery_interactive_total_length = response.y_range + response.image_length;
                } else {
                    drone_imagery_interactive_total_length = (response.max_latitude - response.min_latitude)*3*manage_drone_imagery_standard_process_raw_images_interactive_y_factor;
                }

                manage_drone_imagery_standard_process_raw_images_interactive_image = {
                  width: response.image_width,
                  length: response.image_length
                }

                droneImageryInteractiveDrawImages();
                showPlotPolygonTableStartInteractive(manage_drone_imagery_standard_process_raw_images_interactive_field_trial_id);
            },
            error: function(response){
                alert('Error retrieving images and gps info!')
            }
        });
    }

    jQuery(document).on('click', 'button[name="project_drone_imagery_standard_process_raw_images_interactive"]', function() {
        showManageDroneImagerySection('manage_drone_imagery_standard_process_raw_images_interactive_div');

        manage_drone_imagery_standard_process_raw_images_interactive_field_trial_id = jQuery(this).data('field_trial_id');
        manage_drone_imagery_standard_process_raw_images_interactive_drone_run_id = jQuery(this).data('drone_run_project_id');

        initializeImagesNorthOrSouth();
    });

    d3.select("#drone_imagery_standard_process_raw_images_interactive_rotate_degrees_input").on("input", function() {
        manage_drone_imagery_standard_process_raw_images_interactive_rotate_angle = this.value;
        droneImageryInteractiveRotateImages();
    });

    d3.select("#drone_imagery_standard_process_raw_images_interactive_rotate_frame_degrees_input").on("input", function() {
        manage_drone_imagery_standard_process_raw_images_interactive_rotate_frame_angle = this.value;
        d3.select("svg").attr('transform',function(){
                var x1 = d3.select("svg").attr("width")/2;
                var y1 = d3.select("svg").attr("height")/2;
                return `rotate(${manage_drone_imagery_standard_process_raw_images_interactive_rotate_frame_angle}, ${x1}, ${y1})`;
            });
    });

    jQuery('#drone_imagery_plot_polygons_top_left_click_raw_images_interactive').click(function(){
        alert('Now click the top left corner of your field on the image below.');

        d3.selectAll("g").on('mousedown.drag', null);

        manage_drone_imagery_standard_process_raw_images_interactive_svg.on("click", function(){
            var current_pos = d3.mouse(this);
            jQuery('#drone_imagery_plot_polygons_left_column_top_offset_raw_images_interactive').val(current_pos[1]);
            jQuery('#drone_imagery_plot_polygons_top_row_left_offset_raw_images_interactive').val(current_pos[0]);
            console.log(current_pos);

            d3.selectAll("g").call(d3.drag()
                .on("start", dragstarted)
                .on("drag", dragged)
                .on("end", dragended));
        });
    });
    jQuery('#drone_imagery_plot_polygons_top_right_click_raw_images_interactive').click(function(){
        alert('Now click the top right corner of your field on the image below.');

        d3.selectAll("g").on('mousedown.drag', null);

        manage_drone_imagery_standard_process_raw_images_interactive_svg.on("click", function(){
            var current_pos = d3.mouse(this);
            jQuery('#drone_imagery_plot_polygons_top_row_right_offset_raw_images_interactive').val(drone_imagery_interactive_total_width-current_pos[0]);
            console.log(current_pos);

            d3.selectAll("g").call(d3.drag()
                .on("start", dragstarted)
                .on("drag", dragged)
                .on("end", dragended));
        });
    });
    jQuery('#drone_imagery_plot_polygons_bottom_left_click_raw_images_interactive').click(function(){
        alert('Now click the bottom left corner of your field on the image below.');

        d3.selectAll("g").on('mousedown.drag', null);

        manage_drone_imagery_standard_process_raw_images_interactive_svg.on("click", function(){
            var current_pos = d3.mouse(this);
            jQuery('#drone_imagery_plot_polygons_bottom_row_left_offset_raw_images_interactive').val(current_pos[0]);
            jQuery('#drone_imagery_plot_polygons_left_column_bottom_offset_raw_images_interactive').val(drone_imagery_interactive_total_length-current_pos[1]);
            console.log(current_pos);

            d3.selectAll("g").call(d3.drag()
                .on("start", dragstarted)
                .on("drag", dragged)
                .on("end", dragended));
        });
    });
    jQuery('#drone_imagery_plot_polygons_bottom_right_click_raw_images_interactive').click(function(){
        alert('Now click the bottom right corner of your field on the image below.');

        d3.selectAll("g").on('mousedown.drag', null);

        manage_drone_imagery_standard_process_raw_images_interactive_svg.on("click", function(){
            var current_pos = d3.mouse(this);
            jQuery('#drone_imagery_plot_polygons_right_col_bottom_offset_raw_images_interactive').val(drone_imagery_interactive_total_length-current_pos[1]);
            console.log(current_pos);

            d3.selectAll("g").call(d3.drag()
                .on("start", dragstarted)
                .on("drag", dragged)
                .on("end", dragended));
        });
    });

    jQuery('#drone_imagery_plot_polygons_rectangles_apply_raw_images_interactive').click(function() {
        plot_polygons_interactive_display_points = [];
        plot_polygons_interactive_ind_4_points = [];

        var num_rows_val = jQuery('#drone_imagery_plot_polygons_num_rows_raw_images_interactive').val();
        var num_cols_val = jQuery('#drone_imagery_plot_polygons_num_cols_raw_images_interactive').val();
        var section_top_row_left_offset_val = jQuery('#drone_imagery_plot_polygons_top_row_left_offset_raw_images_interactive').val();
        var section_bottom_row_left_offset_val = jQuery('#drone_imagery_plot_polygons_bottom_row_left_offset_raw_images_interactive').val();
        var section_left_column_top_offset_val = jQuery('#drone_imagery_plot_polygons_left_column_top_offset_raw_images_interactive').val();
        var section_left_column_bottom_offset_val = jQuery('#drone_imagery_plot_polygons_left_column_bottom_offset_raw_images_interactive').val();
        var section_top_row_right_offset_val = jQuery('#drone_imagery_plot_polygons_top_row_right_offset_raw_images_interactive').val();
        var section_right_column_bottom_offset_val = jQuery('#drone_imagery_plot_polygons_right_col_bottom_offset_raw_images_interactive').val();

        plotPolygonsRectanglesApplyInteractive(num_rows_val, num_cols_val, section_top_row_left_offset_val, section_bottom_row_left_offset_val, section_left_column_top_offset_val, section_left_column_bottom_offset_val, section_top_row_right_offset_val, section_right_column_bottom_offset_val, drone_imagery_interactive_total_width, drone_imagery_interactive_total_length, 'drone_imagery_interactive_generated_polygons_div');
    });

    function drawPolylineInteractive(points){
        if (points.length == 4) {
            points.push(points[0]);
        }
        for(var i=0;i<points.length-1;i++){
            manage_drone_imagery_standard_process_raw_images_interactive_svg.append('line')
                .style("stroke", "blue")
                .style("stroke-width", 5)
                .attr("x1", points[i].x)
                .attr("y1", points[i].y)
                .attr("x2", points[i+1].x)
                .attr("y2", points[i+1].y);
        }
    }

    function drawWaypointsInteractive(points, label, random_factor){
        var plot_polygon_random_number = Math.random() * random_factor;
        if (points.length > 0 && label != undefined) {
            if (drone_imagery_interactive_plot_polygons_removed_numbers.includes(label)) {
                manage_drone_imagery_standard_process_raw_images_interactive_svg.append("text")
                    .attr("x", points[0].x + 3)
                    .attr("y", points[0].y + 14 + plot_polygon_random_number)
                    .text('NA')
                    .attr("font-family", "Arial")
                    .attr("font-size", "18px")
                    .attr("fill", "blue");
            } else {
                manage_drone_imagery_standard_process_raw_images_interactive_svg.append("text")
                    .attr("x", points[0].x + 3)
                    .attr("y", points[0].y + 14 + plot_polygon_random_number)
                    .text(label)
                    .attr("font-family", "Arial")
                    .attr("font-size", "18px")
                    .attr("fill", "red");
            }
        }
        for(var i=0;i<points.length;i++){
            manage_drone_imagery_standard_process_raw_images_interactive_svg.append("circle")
                .attr("cx", points[i].x)
                .attr("cy", points[i].y)
                .attr("r", 4);
        }
    }

    function droneImageryDrawPlotPolygonActiveTemplatesTableInteractive(div_id, plot_polygons_template_dimensions){
        var html = '<table class="table table-bordered table-hover"><thead><tr><th>Template Number</th><th>Rows</th><th>Columns</th><th>Total Polygons</th><th>Options</th></tr></thead><tbody>';
        for (var i=0; i<plot_polygons_template_dimensions.length; i++) {
            html = html + '<tr><td>'+i+'</td><td>'+plot_polygons_template_dimensions[i]['num_rows']+'</td><td>'+plot_polygons_template_dimensions[i]['num_cols']+'</td><td>'+plot_polygons_template_dimensions[i]['total_plot_polygons']+'</td><td><button class="btn btn-sm btn-primary" name="drone_imagery_plot_polygon_template_options_interactive" data-plot_polygon_template_id="'+i+'" >Options</button></td></tr>';
        }
        html = html + '</tbody></table>';
        jQuery('#'+div_id).html(html);
    }

    function plotPolygonsRectanglesApplyInteractive(num_rows_val, num_cols_val, section_top_row_left_offset_val, section_bottom_row_left_offset_val, section_left_column_top_offset_val, section_left_column_bottom_offset_val, section_top_row_right_offset_val, section_right_column_bottom_offset_val, section_width, section_height, plot_polygons_assignment_info) {
        if (num_rows_val == ''){
            alert('Please give the number of rows!');
            return;
        }
        if (num_cols_val == ''){
            alert('Please give the number of columns!');
            return;
        }
        if (section_top_row_left_offset_val == ''){
            alert('Please give the top-most rows left margin! This can be 0 if there is no offset.');
            return;
        }
        if (section_bottom_row_left_offset_val == ''){
            alert('Please give the bottom-most rows left margin! This can be 0 if there is no offset.');
            return;
        }
        if (section_left_column_top_offset_val == ''){
            alert('Please give the left-most columns top margin! This can be 0 if there is no offset.');
            return;
        }
        if (section_left_column_bottom_offset_val == ''){
            alert('Please give the left-most columns bottom margin! This can be 0 if there is no offset.');
            return;
        }
        if (section_top_row_right_offset_val == ''){
            alert('Please give the top-most rows right margin! This can be 0 if there is no offset.');
            return;
        }
        if (section_right_column_bottom_offset_val == ''){
            alert('Please give the right-most columns bottom margin! This can be 0 if there is no offset.');
            return;
        }

        plot_polygons_interactive_num_rows_generated = parseInt(num_rows_val);
        plot_polygons_interactive_num_cols_generated = parseInt(num_cols_val);

        var section_top_row_left_offset = parseInt(section_top_row_left_offset_val);
        var section_bottom_row_left_offset = parseInt(section_bottom_row_left_offset_val);
        var section_left_column_top_offset = parseInt(section_left_column_top_offset_val);
        var section_left_column_bottom_offset = parseInt(section_left_column_bottom_offset_val);
        var section_top_row_right_offset = parseInt(section_top_row_right_offset_val);
        var section_right_column_bottom_offset = parseInt(section_right_column_bottom_offset_val);

        var total_gradual_left_shift = section_bottom_row_left_offset - section_top_row_left_offset;
        var col_left_shift_increment = total_gradual_left_shift / plot_polygons_interactive_num_rows_generated;

        var total_gradual_vertical_shift = section_right_column_bottom_offset - section_left_column_bottom_offset;
        var col_vertical_shift_increment = total_gradual_vertical_shift / plot_polygons_interactive_num_cols_generated;

        var col_width = (section_width - section_top_row_left_offset - section_top_row_right_offset) / plot_polygons_interactive_num_cols_generated;
        var row_height = (section_height - section_left_column_top_offset - section_left_column_bottom_offset) / plot_polygons_interactive_num_rows_generated;

        var x_pos = section_top_row_left_offset;
        var y_pos = section_left_column_top_offset;

        manage_drone_imagery_standard_process_raw_images_interactive_svg = d3.select('#drone_imagery_standard_process_raw_images_image_id_interactive_select_div_area');

        var row_num = 1;
        for (var i=0; i<plot_polygons_interactive_num_rows_generated; i++) {
            for (var j=0; j<plot_polygons_interactive_num_cols_generated; j++) {
                var x_pos_val = x_pos;
                var y_pos_val = y_pos;
                plot_polygons_interactive_generated_polygons.push([
                    {x:x_pos_val, y:y_pos_val},
                    {x:x_pos_val + col_width, y:y_pos_val},
                    {x:x_pos_val + col_width, y:y_pos_val + row_height},
                    {x:x_pos_val, y:y_pos_val + row_height}
                ]);
                x_pos = x_pos + col_width;
                y_pos = y_pos - col_vertical_shift_increment;
            }
            x_pos = section_top_row_left_offset + (row_num * col_left_shift_increment);
            y_pos = y_pos + row_height + total_gradual_vertical_shift;
            row_num = row_num + 1;
        }
        console.log(plot_polygons_interactive_generated_polygons);

        plot_polygons_interactive_total_height_generated = row_height * plot_polygons_interactive_num_rows_generated;
        plot_polygons_interactive_number_generated = plot_polygons_interactive_generated_polygons.length;

        var drone_imagery_plot_polygons_new = [];
        var drone_imagery_plot_polygons_display_new = [];

        for (var i=0; i<plot_polygons_interactive_generated_polygons.length; i++) {
            plot_polygons_interactive_ind_4_points = plot_polygons_interactive_generated_polygons[i];
            plot_polygons_interactive_display_points = plot_polygons_interactive_ind_4_points;
            if (plot_polygons_interactive_display_points.length == 4) {
                plot_polygons_interactive_display_points.push(plot_polygons_interactive_ind_4_points[0]);
            }
            drawPolylineInteractive(plot_polygons_interactive_display_points);
            drawWaypointsInteractive(plot_polygons_interactive_display_points, i, 0);
            drone_imagery_interactive_plot_generated_polygons[i] = plot_polygons_interactive_ind_4_points;
            drone_imagery_plot_polygons_new[i] = plot_polygons_interactive_ind_4_points;
            drone_imagery_interactive_plot_polygons_display[i] = plot_polygons_interactive_display_points;
            drone_imagery_plot_polygons_display_new[i] = plot_polygons_interactive_display_points;
        }

        drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions.push({
            'num_rows':plot_polygons_interactive_num_rows_generated,
            'num_cols':plot_polygons_interactive_num_cols_generated,
            'total_plot_polygons':plot_polygons_interactive_num_rows_generated*plot_polygons_interactive_num_cols_generated,
            'plot_polygons':drone_imagery_plot_polygons_new,
            'plot_polygons_display':drone_imagery_plot_polygons_display_new
        });

        droneImageryDrawPlotPolygonActiveTemplatesTableInteractive('drone_imagery_plot_polygons_active_templates_raw_images_interactive', drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions);

        droneImageryDrawRectangleTableInteractive('drone_imagery_interactive_generated_polygons_div', 'drone_imagery_standard_process_interactive_generated_polygons_table', 'drone_imagery_standard_process_interactive_plot_polygons_generated_assign', 'drone_imagery_standard_process_interactive_plot_polygons_submit_bottom');
    }

    function showPlotPolygonTableStartInteractive(trial_id){
        jQuery.ajax({
            url : '/ajax/breeders/trial/'+trial_id+'/layout_table',
            beforeSend: function() {
                jQuery("#working_modal").modal("show");
            },
            success: function(response){
                console.log(response);
                drone_imagery_interactive_field_trial_layout_response = response;
                var layout = drone_imagery_interactive_field_trial_layout_response.output;
                for (var i=1; i<layout.length; i++) {
                    drone_imagery_interactive_plot_polygons_available_stock_names.push(layout[i][0]);
                }

                droneImageryDrawRectangleTableInteractive('drone_imagery_interactive_generated_polygons_div', 'drone_imagery_standard_process_interactive_generated_polygons_table', 'drone_imagery_standard_process_interactive_plot_polygons_generated_assign', 'drone_imagery_standard_process_interactive_plot_polygons_submit_bottom');
                jQuery("#working_modal").modal("hide");

                droneImageryDrawLayoutTableInteractive(response, {}, 'drone_imagery_interactive_trial_layout_div', 'drone_imagery_interactive_trial_layout_table');
            },
            error: function(response){
                jQuery("#working_modal").modal("hide");
                alert('Error retrieving trial layout and design!')
            }
        });
    }

    function droneImageryDrawLayoutTableInteractive(response, plot_polygons, layout_div_id, layout_table_div_id) {
        var output = response.output;
        var header = output[0];
        var html = '<table class="table table-borders table-hover" id="'+layout_table_div_id+'"><thead><tr>';
        for (var i=0; i<header.length; i++){
            html = html + '<td>'+header[i]+'</td>';
        }
        html = html + '<td>Polygon Assigned</td>';
        html = html + '</tr></thead><tbody>';
        for (var i=1; i<output.length; i++){
            html = html + '<tr>';
            for (var j=0; j<output[i].length; j++){
                html = html + '<td>'+output[i][j]+'</td>';
            }
            if (output[i][0] in plot_polygons && plot_polygons[output[i][0]] != undefined){
                html = html + '<td>Yes</td>';
            } else {
                html = html + '<td></td>';
            }
            html = html + '</tr>';
        }
        html = html + '</tbody></table>';
        jQuery('#'+layout_div_id).html(html);
        jQuery('#'+layout_table_div_id).DataTable();
    }

    function droneImageryDrawRectangleTableInteractive(plot_polygons_layout_assignment_info, plot_polygons_layout_assignment_table, plot_polygons_generate_assignment_button, plot_polygon_assignment_submit_button) {
        var html = '<hr><div class="well well-sm"><h2>Assign Plot Polygons to Field Trial Entities</h2>';
        html = html + '<div class="panel panel-default"><div class="panel-body"><div class="form form-horizontal">';
        html = html + '<div class="row"><div class="col-sm-6"><div class="form-group form-group-sm"><label class="col-sm-6 control-label">Location of First Plot (e.g. plot number 1): </label><div class="col-sm-6"><select class="form-control" id="drone_imagery_interactive_plot_polygons_first_plot_start" name="drone_imagery_interactive_plot_polygons_first_plot_start"><option value="top_left">Top Left</option><option value="top_right">Top Right</option><option value="bottom_left" disabled>Bottom Left</option><option value="bottom_right" disabled>Bottom Right</option></select></div></div></div><div class="col-sm-6"><div class="form-group form-group-sm"><label class="col-sm-6 control-label">Second Plot Follows First Plot Going: </label><div class="col-sm-6"><select class="form-control" id="drone_imagery_interactive_plot_polygons_second_plot_follows" name="drone_imagery_interactive_plot_polygons_second_plot_follows"><option value="right">Right</option><option value="up">Up</option><option value="down">Down</option><option value="left">Left</option></select></div></div></div></div>';
        html = html + '<div class="row"><div class="col-sm-6"><div class="form-group form-group-sm"><label class="col-sm-6 control-label">Plot Number Orientation: </label><div class="col-sm-6"><select class="form-control" id="drone_imagery_interactive_plot_polygons_plot_orientation" name="drone_imagery_interactive_plot_polygons_plot_orientation"><option value="serpentine">Serpentine</option><option value="zigzag">Zigzag (Not Serpentine)</option></select></div></div></div></div>';
        html = html + '</div></div></div></div>';

        html = html + '<button class="btn btn-primary" id="'+plot_polygons_generate_assignment_button+'">Generate Assignments (Does Not Save)</button>&nbsp;&nbsp;&nbsp;<button class="btn btn-primary" name="'+plot_polygon_assignment_submit_button+'">Finish and Save Polygons To Plots</button></div>';
        jQuery('#'+plot_polygons_layout_assignment_info).html(html);
        jQuery('#'+plot_polygons_layout_assignment_table).DataTable({'paging':false});
    }

    var drone_imagery_interactive_current_plot_polygon_index_options_id = '';
    jQuery(document).on('click', 'button[name="drone_imagery_plot_polygon_template_options_interactive"]', function(){
        jQuery('#drone_imagery_interactive_plot_polygon_template_options_dialog').modal('show');
        drone_imagery_interactive_current_plot_polygon_index_options_id = jQuery(this).data('plot_polygon_template_id');
    });

    jQuery('#drone_imagery_interactive_plot_polygon_template_options_paste_click').click(function(){
        jQuery('#drone_imagery_interactive_plot_polygon_template_options_dialog').modal('hide');
        alert('Click on where the top left corner of the template will be pasted.');

        d3.selectAll("g").on('mousedown.drag', null);

        d3.select("#drone_imagery_standard_process_raw_images_image_id_interactive_select_div_area").on("click", function(){
            var current_pos = d3.mouse(this);

            d3.selectAll("g").call(d3.drag()
                .on("start", dragstarted)
                .on("drag", dragged)
                .on("end", dragended));

            plotPolygonsTemplatePasteInteractive(current_pos[0], current_pos[1], drone_imagery_interactive_total_width, drone_imagery_interactive_total_length, parseInt(drone_imagery_interactive_current_plot_polygon_index_options_id), 'drone_imagery_interactive_generated_polygons_div');
        });
    });

    function plotPolygonsTemplatePasteInteractive(posx, posy, section_width, section_height, plot_polygon_template_id, plot_polygons_assignment_info) {
        var plot_polygon_template_to_paste = drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions[plot_polygon_template_id];

        var plot_polygons_previous_plot_polygons = plot_polygon_template_to_paste['plot_polygons'];
        plot_polygons_interactive_num_rows_generated = plot_polygon_template_to_paste['num_rows'];
        plot_polygons_interactive_num_cols_generated = plot_polygon_template_to_paste['num_cols'];

        var plot_polygon_top_left_position = plot_polygons_previous_plot_polygons[0][0];
        var plot_polygon_template_paste_x_diff = plot_polygon_top_left_position['x'] - posx;
        var plot_polygon_template_paste_y_diff = plot_polygon_top_left_position['y'] - posy;

        for (var i in plot_polygons_previous_plot_polygons) {
            plot_polygons_interactive_generated_polygons.push([
                {x:plot_polygons_previous_plot_polygons[i][0]['x'] - plot_polygon_template_paste_x_diff, y:plot_polygons_previous_plot_polygons[i][0]['y']- plot_polygon_template_paste_y_diff},
                {x:plot_polygons_previous_plot_polygons[i][1]['x'] - plot_polygon_template_paste_x_diff, y:plot_polygons_previous_plot_polygons[i][1]['y'] - plot_polygon_template_paste_y_diff},
                {x:plot_polygons_previous_plot_polygons[i][2]['x'] - plot_polygon_template_paste_x_diff, y:plot_polygons_previous_plot_polygons[i][2]['y'] - plot_polygon_template_paste_y_diff},
                {x:plot_polygons_previous_plot_polygons[i][3]['x'] - plot_polygon_template_paste_x_diff, y:plot_polygons_previous_plot_polygons[i][3]['y'] - plot_polygon_template_paste_y_diff}
            ]);
        }

        plot_polygons_interactive_number_generated = plot_polygons_interactive_generated_polygons.length;
        console.log(plot_polygons_interactive_generated_polygons);

        var drone_imagery_plot_polygons_new = {};
        var drone_imagery_plot_polygons_display_new = {};

        for (var i=0; i<plot_polygons_interactive_generated_polygons.length; i++) {
            plot_polygons_interactive_ind_4_points = plot_polygons_interactive_generated_polygons[i];
            plot_polygons_interactive_display_points = plot_polygons_interactive_ind_4_points;
            if (plot_polygons_interactive_display_points.length == 4) {
                plot_polygons_interactive_display_points.push(plot_polygons_interactive_ind_4_points[0]);
            }
            drawPolylineInteractive(plot_polygons_interactive_display_points);
            drawWaypointsInteractive(plot_polygons_interactive_display_points, i, 0);
            drone_imagery_interactive_plot_generated_polygons[i] = plot_polygons_interactive_ind_4_points;
            drone_imagery_plot_polygons_new[i] = plot_polygons_interactive_ind_4_points;
            drone_imagery_interactive_plot_polygons_display[i] = plot_polygons_interactive_display_points;
            drone_imagery_plot_polygons_display_new[i] = plot_polygons_interactive_display_points;
        }

        drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions.push({
            'num_rows':plot_polygons_interactive_num_rows_generated,
            'num_cols':plot_polygons_interactive_num_cols_generated,
            'total_plot_polygons':plot_polygons_interactive_num_rows_generated*plot_polygons_interactive_num_cols_generated,
            'plot_polygons':drone_imagery_plot_polygons_new,
            'plot_polygons_display':drone_imagery_plot_polygons_display_new
        });

        droneImageryDrawPlotPolygonActiveTemplatesTableInteractive('drone_imagery_plot_polygons_active_templates_raw_images_interactive', drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions);

        droneImageryDrawRectangleTableInteractive('drone_imagery_interactive_generated_polygons_div', 'drone_imagery_standard_process_interactive_generated_polygons_table', 'drone_imagery_standard_process_interactive_plot_polygons_generated_assign', 'drone_imagery_standard_process_interactive_plot_polygons_submit_bottom');
    }

    jQuery(document).on('click', '#drone_imagery_standard_process_interactive_plot_polygons_generated_assign', function(){
        generatePlotPolygonAssignments('drone_imagery_standard_process_trial_layout_div', 'drone_imagery_standard_process_layout_table');
    });

    jQuery(document).on('click', '#drone_imagery_interactive_plot_polygons_clear', function(){
        plot_polygons_interactive_display_points = [];
        plot_polygons_interactive_ind_4_points = [];
        plot_polygons_interactive_generated_polygons = {};
        drone_imagery_interactive_plot_polygons_display = {};
        plot_polygons_interactive_generated_polygons = [];
        drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions = [];
        drone_imagery_interactive_plot_polygons_removed_numbers = [];

        d3.selectAll("text").remove();
        d3.selectAll("line").remove();
        d3.selectAll("circle").remove();
        jQuery('#drone_imagery_interactive_generated_polygons_div').html('');

        droneImageryDrawLayoutTableInteractive(drone_imagery_interactive_field_trial_layout_response, {}, 'drone_imagery_interactive_trial_layout_div', 'drone_imagery_interactive_trial_layout_table');
        droneImageryDrawPlotPolygonActiveTemplatesTableInteractive('drone_imagery_plot_polygons_active_templates_raw_images_interactive', drone_imagery_standard_process_raw_images_interactive_plot_polygons_template_dimensions);
    });

    jQuery(document).on('click', '#drone_imagery_interactive_plot_polygons_clear_one', function(){
        jQuery('#drone_imagery_interactive_plot_polygon_remove_polygon').modal('show');
        return false;
    });

    jQuery('#drone_imagery_interactive_plot_polygon_remove_polygon_submit').click(function(){
        var polygon_number = jQuery('#drone_imagery_interactive_plot_polygon_remove_polygon_number').val();
        drone_imagery_interactive_plot_polygons_removed_numbers.push(polygon_number);
        draw_canvas_image_interactive(plot_polygons_interactive_total_height_generated/plot_polygons_interactive_num_rows_generated)
        return false;
    });

    function draw_canvas_image_interactive(random_scaling) {
        d3.selectAll("text").remove();
        d3.selectAll("line").remove();
        d3.selectAll("circle").remove();

        for (key in drone_imagery_interactive_plot_polygons_display) {
            var plot_polygons_display_points_again = drone_imagery_interactive_plot_polygons_display[key];
            drawPolylineInteractive(plot_polygons_display_points_again);
            drawWaypointsInteractive(plot_polygons_display_points_again, key, random_scaling);
        }
        return false;
    }

    function showManageDroneImagerySection(section_div_id) {
        console.log(section_div_id);
        if (section_div_id == 'manage_drone_imagery_crop_div') {
            jQuery('#manage_drone_imagery_crop_div').show();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_top_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').show();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_plot_polygons_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').show();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_calculate_phenotypes_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').show();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_remove_background_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').show();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_rotate_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').show();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_vegetative_index_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').show();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_standard_process_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').show();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_standard_process_raw_images_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').show();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_standard_process_raw_images_interactive_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').show();
            jQuery('#manage_drone_imagery_loading_div').hide();
        } else if (section_div_id == 'manage_drone_imagery_loading_div'){
            jQuery('#manage_drone_imagery_crop_div').hide();
            jQuery('#manage_drone_imagery_top_div').hide();
            jQuery('#manage_drone_imagery_plot_polygons_div').hide();
            jQuery('#manage_drone_imagery_calculate_phenotypes_div').hide();
            jQuery('#manage_drone_imagery_remove_background_div').hide();
            jQuery('#manage_drone_imagery_rotate_div').hide();
            jQuery('#manage_drone_imagery_vegetative_index_div').hide();
            jQuery('#manage_drone_imagery_standard_process_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_div').hide();
            jQuery('#manage_drone_imagery_standard_process_raw_images_interactive_div').hide();
            jQuery('#manage_drone_imagery_loading_div').show();
        }
        window.scrollTo(0,0);
    }
});
</script>
