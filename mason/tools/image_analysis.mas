
<%args>

</%args>

<& /util/import_javascript.mas, classes => ['jquery', 'thickbox', 'CXGN.BreedersToolbox.HTMLSelect'] &>

<& /page/page_title.mas, title=>"Image Analysis" &>
<hr>

<div class="well well-sm">
    <center>
    <h4>The Necrosis Image Analysis is explained in the paper here: <a href="https://csce.ucmss.com/cr/books/2018/LFS/CSREA2018/IPC3638.pdf">Necrosis Image Analysis</a>.</h4>
    </center>
</div>

<div class="well well-sm">
    <center>
    <button class="btn btn-primary" id="upload_spreadsheet_phenotypes_link">Upload New Phenotypes and Associated Images</button>
    </center>
</div>
<& /breeders_toolbox/upload_phenotype_spreadsheet.mas &>
<& /breeders_toolbox/trial/create_spreadsheet_dialog.mas &>

<&| /page/info_section.mas, title=>"Image Search Criteria",  collapsible => 1, collapsed=>0, subtitle => "All images may not have names, descriptions, or tags associated with them."&>

    <div id="image_search_form" class="well well-sm">
        <div class="form-horizontal" >
            <div class="form-group">
                <label class="col-sm-3 control-label">Select a Field Trial: </label>
                <div class="col-sm-9" >
                    <div id ="image_analysis_trial_select">
                    </div>
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-6 control-label">Image descriptors (name, description, or filename): </label>
                <div class="col-sm-6" >
                    <input class="form-control" type="text" id="image_description_filename_composite" name="image_description_filename_composite" placeholder="e.g. MyImageName" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-6 control-label">Submitter: </label>
                <div class="col-sm-6" >
                    <input class="form-control" type="text" id="image_submitter" name="image_submitter" placeholder="e.g. JaneDoe" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-6 control-label">Image tag: </label>
                <div class="col-sm-6" >
                    <input class="form-control" type="text" id="image_tag" name="image_tag" placeholder="e.g. ImageTagName" />
                </div>
            </div>
            <div class="form-group">
                <label class="col-sm-6 control-label">Associated stock: </label>
                <div class="col-sm-6" >
                    <input class="form-control" type="text" id="image_stock_uniquename" name="image_stock_uniquename" placeholder="e.g. FieldPlot100" />
                </div>
            </div>
        </div>

        <center>
        <button class="btn btn-primary" id="image_search_submit" >Search</button>
        </center>
    </div>
</&>

<&| /page/info_section.mas, title=>"Image Search Results",  collapsible => 1, collapsed=>0 &>
    <div class="well well-sm">
        <div class="panel panel-default">
            <div class="panel-body">
                <table id="image_analysis_image_search_results" class="table table-hover table-striped">
                <thead>
                  <tr>
                    <th>Select</th>
                    <th>Image Thumbnail</th>
                    <th>Filename</th>
                    <th>Description</th>
                    <th>Submitter</th>
                    <th>Associations</th>
                    <th>Tags</th>
                </tr>
                </thead>
                </table>
            </div>
        </div>
    </div>
</&>

<&| /page/info_section.mas, title=>"Image Analysis", collapsible => 1, collapsed=>0 &>
    <div class="well well-sm">
        <div class="panel panel-default">
            <div class="panel-body">
                <div class="form-group">
                    <label class="col-sm-6 control-label">Image Analysis Service: </label>
                    <div class="col-sm-6" >
                        <select class="form-control" id="image_analysis_service_select" name="image_analysis_service_select">
                            <option value="necrosis">Necrosis(Makerere AIR Lab)</option>
                            <option value="largest_contour_percent">Necrosis Largest Contour Mask Percent</option>
                            <option value="count_contours">Count Contours</option>
                            <option value="count_sift">SIFT Feature Count</option>
                            <option value="whitefly_count">Whitefly Count (Makerere AIR Lab)</option>
                        </select>
                    </div>
                </div>
                <br/>

                <hr>
                <center>
                <button class="btn btn-primary" id="image_analysis_submit">Submit</button>
                </center>
                <hr>
                <div id="image_analysis_result">
                <table class="table table-hover" style="overflow-x:auto;" id="image_analysis_result_table">
                </table>
                </div>
            </div>
        </div>
    </div>
</&>

<script>

jQuery(document).ready(function(){

    var values_hash;

    get_select_box('trials', 'image_analysis_trial_select', { 'name' : 'html_image_analysis_trial_select', 'id' : 'html_image_analysis_trial_select', 'multiple':0, 'size':10, 'trial_name_values':1 });

    _load_image_search_results();

    jQuery('#image_search_submit').click(function(){
        if (jQuery('#html_image_analysis_trial_select').val() == '') {
            alert("Please select a Field Trial first!");
            return false;
        }
        _load_image_search_results();
    });

    jQuery("#image_submitter").autocomplete({
        source: '/ajax/people/autocomplete'
    });

    jQuery('#image_search_form').keypress( function( e ) {
        var code = e.keyCode || e.which;
        if( code == 13 ) {
            jQuery('#image_search_submit').click();
        }
    });

    jQuery('#image_analysis_image_search_results').on( 'draw.dt', function () {
        jQuery('a.image_search_group').colorbox();
    });

    jQuery('#image_analysis_submit').click(function(){
        var selected_image_ids = [];
        jQuery('input[name="image_analysis_select"]').each(function() {
            if (this.checked){
                selected_image_ids.push(this.value);
            }
        });

        if (selected_image_ids.length < 1) {
            alert('Please select at least one image first!');
            return false;
        }

        jQuery.ajax({
            url: '/ajax/image_analysis/submit',
            method: 'POST',
            data: {
                'selected_image_ids': JSON.stringify(selected_image_ids),
                'service': jQuery('#image_analysis_service_select').val()
            },
            dataType:'json',
            beforeSend: function() {
                jQuery('#working_modal').modal('show');
            },
            success: function(response) {
                console.log(response);
                jQuery('#working_msg').html('');
                jQuery('#working_modal').modal('hide');
                values_hash = _create_values_hash(response.results);
                var table_data = _group_image_phenotypes_by_stock(values_hash);
                console.log("values hash is:");
                console.log(values_hash);
                console.log("table data is:");
                console.log(table_data);
                var dt = jQuery('#image_analysis_result_table').DataTable( {
                    "data": table_data,
                    "columns": [
                        {
                            "class":          "details-control",
                            "orderable":      false,
                            "data":           null,
                            "defaultContent": ""
                        },
                        { "data": "stock" },
                        { "data": "trait" },
                        { "data": "avg" }
                    ],
                    "order": [[1, 'asc']]
                } );

                // Array to track the ids of the details displayed rows
                var detailRows = [];

                jQuery('#image_analysis_result_table tbody').on( 'click', 'tr td.details-control', function () {
                    var tr = jQuery(this).closest('tr');
                    var row = dt.row( tr );
                    var idx = jQuery.inArray( tr.attr('id'), detailRows );

                    if ( row.child.isShown() ) {
                        tr.removeClass( 'details' );
                        row.child.hide();

                        // Remove from the 'open' array
                        detailRows.splice( idx, 1 );
                    }
                    else {
                        tr.addClass( 'details' );
                        row.child( format( row.data() ) ).show();

                        // Add to the 'open' array
                        if ( idx === -1 ) {
                            detailRows.push( tr.attr('id') );
                        }
                    }
                } );

                // On each draw, loop over the `detailRows` array and show any child rows
                dt.on( 'draw', function () {
                    jQuery.each( detailRows, function ( i, id ) {
                        jQuery('#'+id+' td.details-control').trigger( 'click' );
                    } );
                } );



                //
                // console.log(grouped_phenotypes);
                // var latest_stock = '';
                // var avg_score_html;
                // var html = '<table class="table table-hover" style="overflow-x:auto;"><thead><tr><th>Analyzed Image</th><th>Image Phenotype</th><th>Previously Saved Image-Associated Phenotype(s)</th><th>Observation Unit</th><th>Observation Unit Average Phenotype</th></tr></thead><tbody>';
                // for (var i=0; i<response.results.length; i++) {
                //     if (response.results[i].result.image_link) {
                //             html = html + '<tr><td><img src="'+response.results[i].result.image_link+'"></td><td>'+response.results[i].result.trait_name+': '+response.results[i].result.trait_value+'</td>';
                //         if (response.results[i].stock_uniquename != latest_stock && typeof(grouped_phenotypes[response.results[i].stock_uniquename]) !== "undefined") {
                //             var stock_data = grouped_phenotypes[response.results[i].stock_uniquename];
                //             console.log("Stock data are: ");
                //             console.log(stock_data);
                //             console.log(_average(Object.values(stock_data)));
                //             avg_score_html = '<td rowspan="'+grouped_phenotypes[response.results[i].stock_uniquename].length+'">'+_average(Object.values(stock_data))+'</td>';
                //         } else {
                //             avg_score_html = '';
                //         }
                //     } else {
                //         html = html + '<tr><td>Error: '+response.results[i].result.error+'. No analysis returned for image '+response.results[i].image_original_filename+response.results[i].image_file_ext+'</td><td></td>';
                //         avg_score_html = '';
                //     }
                //     html = html + "<td>";
                //     for (var j=0; j<response.results[i].observations_array.length; j++) {
                //         html = html + response.results[i].observations_array[j].observationvariable_name + ": " + response.results[i].observations_array[j].value;
                //     }
                //     html = html + "</td>";
                //     html = html + "<td><a href='/stock/"+response.results[i].stock_id+"/view'>"+response.results[i].stock_uniquename+"</a></td>";
                //     html = html + avg_score_html;
                //     html = html + '</tr>';
                //     latest_stock = response.results[i].stock_uniquename;
                // }
                // html = html + '</tbody></table>';
                // html = html + '<hr><button class="btn btn-primary" id="image_analysis_image_search_results_save">Store New Analysis Phenotypes and Images</button>';
                // jQuery('#image_analysis_result').html(html);
            },
            error: function(response) {
                jQuery('#working_msg').html('');
                jQuery('#working_modal').modal('hide');
                alert("An error occurred submitting necrosis image analysis");
            }
        });
    });

    jQuery(document).on("click", "#image_analysis_image_search_results_save", function() {

        // Retrieve observation units and linked analysis images and scores

        // Save in db inclucing multiple image relationships
        jQuery.ajax({
            url: '/ajax/image_analysis/store_phenotypes',
            method: 'POST',
            data: {
                'phenotypes': values_hash,
            },
            dataType:'json',
            beforeSend: function() {
                jQuery('#working_modal').modal('show');
            },
            success: function(response) {},
            error: function(response) {}
        });

    });

});

function _load_image_search_results() {
    images_table = jQuery('#image_analysis_image_search_results').DataTable({
        'destroy' : true,
        'searching' : false,
        'ordering'  : false,
        'processing': true,
        'serverSide': true,
        'scrollX': true,
        'lengthMenu': [10,20,50,100,1000,5000],
        'ajax': { 'url':  '/ajax/search/images',
            'data': function(d) {
              d.html_select_box = "image_analysis_select";
              d.image_description_filename_composite = jQuery('#image_description_filename_composite').val();
              d.image_person = jQuery('#image_submitter').val();
              d.image_tag = jQuery('#image_tag').val();
              d.image_stock_uniquename = jQuery('#image_stock_uniquename').val();
              d.image_project_name = jQuery('#html_image_analysis_trial_select').val();
            }
        }
    });
}

function _create_values_hash (results) {
    var uniquename, trait, image_id, value, new_uniquename;
    var values_hash = {};
    for (var i=0; i<results.length; i++) {
        // trait = results[i].result.trait_name;
        image_id = results[i].result.analyzed_image_id;
        value = results[i].result.trait_value;
        if (values_hash[results[i].stock_uniquename] && typeof(values_hash[results[i].stock_uniquename][trait]) !== "undefined" && trait !== "undefined" && image_id !== "undefined" && value !== "undefined") {
            uniquename = results[i].stock_uniquename;
            trait = results[i].result.trait_name;
            values_hash[uniquename][trait][5].push({
                "id": image_id,
                "link": results[i].result.image_link,
                "name": results[i].image_original_filename+results[i].image_file_ext,
                "value": parseFloat(value)
            });
        }
        else if (trait !== "undefined" && image_id !== "undefined" && value !== "undefined") {
            new_uniquename = results[i].stock_uniquename;
            new_trait = results[i].result.trait_name;
            values_hash[new_uniquename] = {};
            values_hash[new_uniquename][new_trait] = ['','','','','',[]];
            values_hash[new_uniquename][new_trait][5].push({
                "id": image_id,
                "link": results[i].result.image_link,
                "name": results[i].image_original_filename+results[i].image_file_ext,
                "value": parseFloat(value)
            });
            if (typeof(uniquename) !== "undefined") { // save storable stock-level pheno data
                console.log(values_hash);
                console.log(uniquename);
                console.log(trait);
                var values = values_hash[uniquename][trait][5].map(({ value }) => value);
                console.log("Values are:");
                console.log(values);
                values_hash[uniquename][trait][0] = _average(values);
                values_hash[uniquename][trait][1] = Date.now();
                values_hash[uniquename][trait][2] = results[i].result.username;
                values_hash[uniquename][trait][4] = values_hash[uniquename][trait][5].map(({ id }) => id);
            }
        }
        else {} // if no result returned for an image, skip it.
    }
    return values_hash;
}

function _group_image_phenotypes_by_stock (values_hash) {
    var data = [];
    Object.keys(values_hash).forEach(function(stock) {
        Object.keys(values_hash[stock]).forEach(function(trait) {
            data.push({
                "stock": stock,
                "trait": trait,
                "avg": values_hash[stock][trait][0],
                "details": values_hash[stock][trait][5]
            })
        });
    });
    return data;
}

function _average(array) {
    var usable_values = array.filter(value => !isNaN(value));
    if (usable_values.length > 0) {
        console.log(usable_values);
        var avg = usable_values.reduce((a, b) => a + b) / usable_values.length;
        return Math.round((avg + Number.EPSILON) * 100) / 100; // round to two decimal pts
    } else {
        return undefined;
    }
}

function format ( d ) {
return `<table class="table">
            <thead>
                <tr>
                  <th scope="col">Image Name</th>
                  <th scope="col">Analyzed Image</th>
                  <th scope="col">Value</th>
                </tr>
             </thead>
             <tbody>
                <tr>
                  <td>'+d.details.name+'</td>
                  <td><img src="'+d.details.link+'"></td>
                  <td>'+d.details.value+'</td>
                </tr>
            </tbody>
        </table>`;
}

</script>
