
<%args>
$query
$graph_url => undef
$seq_filename
$database => 'unknown database'
$best_window => () # best region coordinates
$best_seq => () # best region sequence
@scores => ()
$error => undef
$fragment_size => undef
$seq_fragment => undef
$expr_file => undef
$messages => ""
$errors => ""
$coverage => 0
$image_map => ""
@ids => ()
</%args>

<%perl>
use strict;

use Data::Dumper;
use JSON::Any;
my $json = JSON::Any->new;

if ($errors) { print "An error occurred. $error." }
if ($messages) { print $messages; }

</%perl>

<& /util/import_javascript.mas, classes => [ 'Text.Markup', 'sprintf'] &>

<& /page/page_title.mas, title=>"VIGS Tool Results" &>


%if ($scores[0]->[0] == 0) {
  Note: No results were found.
%}

<% $messages %><br /><br />

User sequence matched against <% $database %>.<br /><br />

<form action="/tools/vigs/view">
      Target sequences:
      <input size="2" name="targets" value="<% $coverage %>" />
      <input type="hidden" name="id" value="<% $seq_filename %>" />
      <input type="hidden" name="fragment_size" value="<% $fragment_size %>" />
      <input type="hidden" name="database" value="<% $database %>" />
      Fragment length:
      <input size= "3" name="seq_fragment" value="<% $seq_fragment %>" />
      <input type="hidden" name="expr_file" value="<% $expr_file %>" />
      <button type="submit" value="change" />Change</button>
</form>

<p>
Start: <input type="text" id="cbr_start" value=<% $$best_window[0][0]+1 %> size=4> 
End: <input type="text" id="cbr_end" size=4 value="<% $$best_window[0][1]+1 %>">
<button type="button" value="Customize best region" onClick="getCustomRegion()">Customize Best Region</button>
</p>

<&| /page/info_section.mas, title=>"Distribution of $fragment_size-mers", collapsible => 1, collapsed => 0 &>

<div class="seq_map" align="center" style="color: #777777">
<img id="map_img" src="<% $graph_url %>" usemap="#blabla" />
<div id="square" class="square"></div>
</div>

<style>
.seq_map {
    position:relative;
}

.square {
    position:absolute;
    top:18px;
    left:0px;
    width:0px;
    height:161px;
    border:0px solid #000000;
    background-color:rgba(0,0,0,0.2);
}
</style>

</&>

<br />
<br />

<&| /page/info_section.mas, title=>"Best region", collapsible => 1, collapsed => 0 &>
<div id="br_seq">

% if (length($best_seq) > 10) {
% print "<p><b>Best target region (".($$best_window[0][0]+1)."-".($$best_window[0][1]+1).")</b></p>";
% print "$best_seq <br />";
% } else {
% print "<p><b>No results were found</b></p>";
% }

</div>
</&>

<&| /page/info_section.mas, title=>"Sequence overview", collapsible => 1, collapsed => 0 &>

<span id="query" style="display:none" ><% $query->seq() %></span>
<div id="markup" style="align:left;">

</div>

</&>

<&| /page/info_section.mas, title=>"Sequences with perfect matches of $fragment_size-mers", collapsible => 1, collapsed => 0 &>
% foreach my $id (@ids) {
% print $id->[0]." (".$id->[1].")<br />";
% }

</&>

<script>
	function getCustomRegion() {
		 var cbr_start = parseInt(document.getElementById("cbr_start").value);
		 var cbr_end = parseInt(document.getElementById("cbr_end").value);
		 
		 var source_el = document.getElementById('query'); 
		 var sequence = source_el.innerHTML;
		 var img_left = (cbr_start*700/<% length($query->seq()) %>)-1;
		 var img_width = ((cbr_end-cbr_start+1)*700/<% length($query->seq()) %>)-1;
		 var map_el = document.getElementById('map_img');
		 var img_height = (map_el.height - 20);

		 document.getElementById("br_seq").innerHTML ="<p><b>Custom Region (" + cbr_start + "-" + cbr_end + ")</b></p>";
		 for (var i=cbr_start; i<cbr_end; i= i+60) {
		     if (cbr_end<i+61) {
		     	document.getElementById("br_seq").innerHTML += sequence.substring(i-1,cbr_end)+"<br>";
		     }
		     else {
		     	document.getElementById("br_seq").innerHTML += sequence.substring(i-1,i+59)+"<br>";
		     }
		 }
		 document.getElementById("br_seq").innerHTML += "\
		 <p><b>Best target region (<% $$best_window[0][0]+1 %>-<%$$best_window[0][1]+1 %>)</b></p>";

		 document.getElementById("square").style.border="2px solid #000000";
		 document.getElementById("square").style.left=""+img_left+"px";
		 document.getElementById("square").style.width=""+img_width+"px";
		 document.getElementById("square").style.height=""+img_height+"px";
		 var best_region = [[cbr_start,cbr_end]];
		 hilite_sequence(best_region);
	}
</script>

<script>
function hilite_sequence(best_region) {
	 
	 var regions = best_region;

	 var markup = new Text.Markup( { 'highlight' : [ '<span class="highlighted">', '</span>' ], 'break' : [ '<br />', '' ], 'space' : [ '<span>&nbsp;</span>', '' ] });

	 var source_el = document.getElementById('query');
	 var markup_el = document.getElementById('markup');

	 var hilite_regions = [];

	 for (var i=0; i<regions.length; i++) {
	     //alert("HERE " + regions[i]); //regions[i].join('X'));
	     if (regions[i][0] < 1) {
	 	 regions[i][0] = 1
	     }
	     if (regions[i][1] > 10) {
	     	hilite_regions[i]=['highlight', regions[i][0], regions[i][1]+1];
	     }
         }

	 var sequence = source_el.innerHTML;

	 var break_regions = [];
	 for (var i=0; i<sequence.length; i=i+60) {
	     break_regions.push([ 'break', i, i ]);
	 }

         var space_regions = [];
	 for (var i =0; i<sequence.length; i=i+10) {
	     space_regions.push(['space', i, i]);
         }

	 var all_regions = break_regions.concat(hilite_regions, space_regions);

	 var markedup_seq = markup.markup(all_regions, sequence);
	 //alert('Markedup Seq: '+markedup_seq);

         //insert line numbers
         var line_length = 60;
         var current_pos = 1;
	 var lines = markedup_seq.split('<br />');
         var final_seq = '';
	 var leading_spaces = new Array('', '', '', '', '', '');
	 
	 for (var i=1; i<lines.length; i++) {
             leading_str = leading_spaces.slice(0,Math.ceil(6-(Math.log(current_pos)/Math.log(10)))).join('&nbsp;'); // poor man's sprintf
	     leading_str2 = leading_spaces.slice(0,Math.ceil(6-(Math.log(current_pos +line_length -1)/Math.log(10)))).join('&nbsp;');

	     if (current_pos + line_length < sequence.length) {
	     	final_seq = final_seq + leading_str + current_pos + ' ' + lines[i] + ' ' + leading_str2 + ( current_pos + line_length - 1) + '<br />';
	     } else {
	        final_seq = final_seq + leading_str + current_pos + ' ' + lines[i] + ' ' + leading_str2 + sequence.length + '<br />';
	     }

               current_pos += line_length;
          }

	  markup_el.innerHTML='<font face="courier" size="2">'+final_seq+'</font>';

}

</script>

<script>
	var regions = <% $json->encode($best_window) %>;
	hilite_sequence(regions);
</script>

<script language="javascript" type="text/javascript" src="/js/popup.js"></script>
