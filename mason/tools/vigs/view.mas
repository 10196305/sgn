
<%args>
$query
$raw_blast_url => undef
$coverage_graph_url => undef
$click_map_html => undef
@regions => ()  # list of listrefs, index is coverage level
$error => undef
$fragment_size => undef
@blast_matches => ()
</%args>

% use Data::Dumper;
% use JSON::Any;
% my $json = JSON::Any->new;

% if ($error) { print "An error occurred. $error."}

<& /util/import_javascript.mas, classes => 'Text.Markup' &>

<& /page/page_title.mas, title=>"VIGS Tool Results" &>

<center><b>Conservedness Histogram</b></center>
<p>The histogram shows a count of hits <i>for each base</i> in the query sequence,
but counts <i>only the domains BLAST finds</i>, meaning this is really more a function of region than of individual base.
Within the graph, green shows exact base matches within conserved regions; blue shows non-matching bases within conserved regions. Gaps introduced into the query by BLAST are ignored; gaps introduced into target sequences are not.</p>

% #print "COVERAGE GRAPH = " .$coverage_graph_url;
% #print Dumper(\@regions);

<div align="center" style="color: #777777">
<img src="<% $coverage_graph_url %>" />
</div>

view <a href="<% $raw_blast_url %>">raw blast report</a>

% #print "QUERY: $query. ID=".$query->id()." SEQUENCE:".$query->seq()."<br />";
<br /><br />

<script>
	function hilite_sequence() { 

	    var markup = new Text.Markup( { 'highlight' : [ '<span class="highlighted">', '</span>' ], 'break' : [ '<br />', '' ], 'space' : [ '<span>&nbsp;</span>', '' ] });
	   // alert("hilite_sequence");
	    var source_el = document.getElementById('query');
	    var markup_el = document.getElementById('markup');
	    var coverage_select = document.getElementById('coverage_select');
	    var coverage = coverage_select.options[coverage_select.selectedIndex].value;

	    var all_regions = <% $json->encode(\@regions) %>;

	    var selected_regions = all_regions[coverage];
	    //	alert('Coverage: '+coverage+' Selected regions: '+selected_regions);
	    var hilite_regions = [];
	    for (var i=0; i<selected_regions.length; i++) { 
	       hilite_regions[i]=[ 'highlight', selected_regions[i][0]-1, selected_regions[i][1]-1 ];
}	       


	    var sequence = source_el.innerHTML;

	    var break_regions = [];
	    for (var i=0; i<sequence.length; i=i+60) { 
	        break_regions.push([ 'break', i, i ]);
}
	//alert('Break regions: ' + break_regions);

	var space_regions = [];
	for (var i =0; i<sequence.length; i=i+6) { 
	       space_regions.push(['space', i, i]);
}	       

	 var all_regions = break_regions.concat(hilite_regions, space_regions);

	    var markedup_seq = markup.markup(all_regions, sequence);
	    //alert('Markedup Seq: '+markedup_seq);
	    markup_el.innerHTML='<font face="courier" size="3">'+markedup_seq+'</font>';
	    	    	    	    //alert("HERE5!");			  	   
	}


</script>

<b>Highlight coverage</b> <select id="coverage_select" name="coverage_select" onchange="hilite_sequence()" >

% foreach my $coverage (0..8) { 
% my $selected;
%   if ($coverage == 1) { $selected= qq { selected="1" }; }
%    else { $selected = ""	     ; }
%    print "<option value=\"$coverage\" $selected>$coverage</option>\n";
% }

</select>
<span id="query" style="display:none" ><% $query->seq() %></span>
<span id="markup"></span>
<h2>Sequences with perfect matches above <% $fragment_size %> bp</h2>

% foreach my $b (@blast_matches) {
%   print $b."<br />";
%}

<script>
	hilite_sequence();
</script>
