
<%doc>

=head1 NAME 

/tools/sequence.mas - mason module to display a sequence, either as fasta text or as nicely formatted html, with optional highlighting of sub-regions.

=head1 ARGUMENTS

=over 5

=item seq

the sequence [Bio::Seq object]

=item format

the format to render, either 'text' or 'html'

=item hilite

a list of refs to start/end coords

=back

=head1 AUTHOR

Lukas Mueller <lam87@cornell.edu>

=cut

</%doc>

<%args>
$seq
$title => 'Sequence'
$format => 'html'
$coords => [ ];
$width => 90
</%args>

<%perl>

use Bio::Seq;
use CXGN::Page::FormattingHelpers qw | html_string_linebreak_and_highlight info_section_html html_break_string |;

my $seq_html = html_string_linebreak_and_highlight($seq->seq(), $coords, 'news', $width);

my $output = info_section_html(
			       title=> "Sequence: ".$seq->id(),
			       contents=> "<font style=\"font-family:monospace\">".$seq_html."</font>",
			       subtitle=> $seq->desc()." (".length($seq->seq())." residues)",
			       #collapsible => 1,
			       collapsed => undef,
			      );

</%perl>



<%perl>

if ($format eq "text") {
	$output = ">".($seq->id())."\n".html_break_string($seq->seq(), $width, "\n");
        print "$output\n";
}else{

  </%perl>
<& /page/page_title.mas, title=>$title &>
  <%perl>
	
#	print "<a href=\"show_match_seq.pl?id=".$seq->id()."&amp;format=text\">Show result in text format</a><br />\n";
        print "$output";

}

</%perl>



