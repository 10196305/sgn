
<%args>
</%args>

<& /util/import_javascript.mas, classes => ['CXGN.BreederSearch'] &>

<& /page/page_title.mas, title=>"Compose a new trait" &>
</br>

<div class="container">
  <div class="row">
    <div class="col-md-6 form-group">
      <label for="object_select_div" class="control-label">Object</label>
      <p class="help-block"><small>Pick the object on which the new trait is measured</small></p>
      <div id="object_select_div">
      </div>
    </div>
    <div class="col-md-6 form-group">
      <center><label class="control-label">Exisiting Traits</label></center>
      <center><p class="help-block"><small>Existing traits that match the current selections</small></p></center>
      <div id="matched_traits_div">
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 form-group">
      <label for="attribute_select_div" class="control-label">Attribute</label>
      <p class="help-block"><small>Pick the attribute the new trait measures</small></p>
      <div id="attribute_select_div">
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 form-group">
      <label for="unit_select_div" class="control-label">Unit</label>
      <p class="help-block"><small>Pick the units in which the new trait is measured</small></p>
      <div id="unit_select_div">
      </div>
    </div>
  </div>
  <div class="row">
    <div class="col-md-6 form-group">
      <label for="time_select_div" class="control-label">Time</label>
      <p class="help-block"><small>If applicable, pick the time at which the new trait is measured</small></p>
      <div id="time_select_div">
      </div>
    </div>
  <!--  <div class="col-md-6 form-group">
      <label for="definition" class="control-label">Definition</label>
      <textarea class="form-control" id="definition" rows="3"></textarea>
    </div>
-->  </div>
<br>
  <div class="row">
    <div class="col-md-6 form-group">
      <center><button id="compose_trait" class="btn btn-primary">Submit</button></center>
    </div>
  </div>
</div>

<script>
get_select_box('trait_components', 'object_select_div', { 'id' : 'object_select', 'name': 'object_select', 'default': 'Select an object', 'cv_type': 'object_ontology' });
get_select_box('trait_components', 'attribute_select_div', { 'id' : 'attribute_select', 'name': 'attribute_select', 'default': 'Select a attribute', 'cv_type': 'attribute_ontology' });
get_select_box('trait_components', 'unit_select_div', { 'id' : 'unit_select', 'name': 'unit_select', 'default': 'Select a unit', 'cv_type': 'unit_ontology' });
get_select_box('trait_components', 'time_select_div', { 'id' : 'time_select', 'name': 'time_select', 'default': 'Select a time', 'cv_type': 'time_ontology' });

jQuery(document).on('change','#object_select, #attribute_select, #unit_select, #time_select', function() { // retrieve matching traits each time component selection changes
    console.log("Change in component selects\n");
    var component_ids = get_component_ids();
    matching_traits = retrieve_matching_traits(component_ids);
    var trait_html = format_options_list(matching_traits);
    jQuery('#matched_traits_div').html(trait_html);
});

jQuery('#compose_trait').on('click', function () {

  var component_ids = get_component_ids();
  matching_traits = retrieve_matching_traits(component_ids);
  if (matching_traits.length > 0) {
    alert("Error. This combination in not new. Use trait"+matching_traits);
  }
  else {
    jQuery.ajax( {
      url: '/ajax/onto/compose',
      timeout: 60000,
      async: false,
      method: 'POST',
      data: {'ids': component_ids},
      beforeSend: function(){
        disable_ui();
      },
      complete : function(){
        enable_ui();
      },
      success: function(response) {
        console.log("Success! Stored new term with id "+response.success);
        alert("Success! Stored new term with id "+response.success);
      },
      error: function(request, status, err) {

      }
    });
  }
});

function get_component_ids () {
  var component_ids = [];
  if (jQuery("#object_select").val()) { component_ids.push(jQuery("#object_select").val()); }
  if (jQuery("#attribute_select").val()) { component_ids.push(jQuery("#attribute_select").val()); }
  if (jQuery("#unit_select").val()) { component_ids.push(jQuery("#unit_select").val()); }
  if (jQuery("#time_select").val()) { component_ids.push(jQuery("#time_select").val()); }
  return component_ids;
}

function retrieve_matching_traits (component_ids) {
var categories = ['trait_components','traits'];
var querytype = [1];
var data = [component_ids];
  jQuery.ajax( {
    url: '/ajax/breeder/search',
	  timeout: 60000,
    async: false,
    method: 'POST',
    data: {'categories': categories, 'data': data, 'querytypes': querytype},
	  success: function(response) {
      traits = response.list || [];
      console.log("traits="+traits);
    },
	  error: function(request, status, err) {
      console.log("Error retrieving matching traits\n");
    }
	});

  return traits;

}


</script>
