
<%args>
</%args>

<& /util/import_javascript.mas, classes => ['CXGN.BreederSearch'] &>

<& /page/page_title.mas, title=>"Compose a new trait" &>
</br>



<div class="container">
<ul class="nav nav-tabs">
  <li class="active"><a data-toggle="tab" href="#components">Components</a></li>
  <li><a data-toggle="tab" href="#traits">Traits</a></li>
</ul>
</br>
<div class="tab-content">
  <div id="components" class="tab-pane fade in active">
  <div class="row">
    <div class="col-md-6 form-group">
      <label for="object_select_div" class="control-label">Object</label>
      <p class="help-block"><small>Pick the object on which the new trait is measured</small></p>
      <div id="object_select_div">
      </div><br>
      <button class="btn btn-default btn-sm" id="object_select_all" name="object_select_all"/>Select All</button>
      <button class="btn btn-default btn-sm" id="object_select_clear" name="object_select_clear"/>Clear</button>
    </div>
    <div class="col-md-6 form-group">
      <label for="attribute_select_div" class="control-label">Attribute</label>
      <p class="help-block"><small>Pick the attribute the new trait measures</small></p>
      <div id="attribute_select_div">
      </div><br>
      <button class="btn btn-default btn-sm" id="attribute_select_all" name="attribute_select_all"/>Select All</button>
      <button class="btn btn-default btn-sm" id="attribute_select_clear" name="attribute_select_clear"/>Clear</button>
    </div>
    </div>
    <div class="row">
    <div class="col-md-6 form-group">
      <label for="method_select_div" class="control-label">Method</label>
      <p class="help-block"><small>Pick the method by which the new trait is measured</small></p>
      <div id="method_select_div">
      </div><br>
      <button class="btn btn-default btn-sm" id="method_select_all" name="method_select_all"/>Select All</button>
      <button class="btn btn-default btn-sm" id="method_select_clear" name="method_select_clear"/>Clear</button>
    </div>
    <div class="col-md-6 form-group">
      <label for="unit_select_div" class="control-label">Unit</label>
      <p class="help-block"><small>Pick the units in which the new trait is measured</small></p>
      <div id="unit_select_div">
      </div><br>
      <button class="btn btn-default btn-sm" id="unit_select_all" name="unit_select_all"/>Select All</button>
      <button class="btn btn-default btn-sm" id="unit_select_clear" name="unit_select_clear"/>Clear</button>
    </div>
    </div>
  </div>
  <div id="traits" class="tab-pane fade row">
  <div class="col-md-12 form-group">
    <label for="trait_select_div" class="control-label">Trait</label>
    <p class="help-block"><small>Pick an existing trait</small></p>
    <div id="trait_select_div">
    </div><br>
    <button class="btn btn-default btn-sm" id="trait_select_all" name="trait_select_all"/>Select All</button>
    <button class="btn btn-default btn-sm" id="trait_select_clear" name="trait_select_clear"/>Clear</button>
  </div>
  </div>
  </div>
  <hr style="margin-top:4px;margin-bottom:4px" /><br>
  <div class="row">
    <div class="col-md-4 form-group">
      <label for="tod_select_div" class="control-label">Time of Day</label>
      <p class="help-block"><small><i>Optional</i> Pick the time of day at which the new trait is measured</small></p>
      <div id="tod_select_div">
      </div><br>
      <button class="btn btn-default btn-sm" id="tod_select_all" name="tod_select_all"/>Select All</button>
      <button class="btn btn-default btn-sm" id="tod_select_clear" name="tod_select_clear"/>Clear</button>
    </div>
    <div class="col-md-4 form-group">
      <label for="week_select_div" class="control-label">Week</label>
      <p class="help-block"><small><i>Optional</i> Pick the week in which the new trait is measured</small></p>
      <div id="week_select_div">
      </div><br>
      <button class="btn btn-default btn-sm" id="week_select_all" name="week_select_all"/>Select All</button>
      <button class="btn btn-default btn-sm" id="week_select_clear" name="week_select_clear"/>Clear</button>
    </div>
    <div class="col-md-4 form-group">
      <label for="month_select_div" class="control-label">Month</label>
      <p class="help-block"><small><i>Optional</i> Pick the month in which the new trait is measured</small></p>
      <div id="month_select_div">
      </div><br>
      <button class="btn btn-default btn-sm" id="month_select_all" name="month_select_all"/>Select All</button>
      <button class="btn btn-default btn-sm" id="month_select_clear" name="month_select_clear"/>Clear</button>
    </div>
  </div>
<hr style="margin-top:4px;margin-bottom:4px" /><br>
<div class="row">
<div class="col-md-6 form-group">
  <center><label class="control-label">Existing Traits</label></center>
  <center><p class="help-block"><small>Existing traits that match the current selections</small></p></center>
  <select multiple class="form-control" id="existing_traits"></select>
  </br>
  <div id="existing_traits_to_list"></div>
</div>
<div class="col-md-6 form-group">
  <center><label class="control-label">New Traits</label></center>
  <center><p class="help-block"><small>New traits that can be made from the current selections</small></p></center>
  <select multiple class="form-control" id="new_traits"></select>
</div>
</div>
<br>
  <div class="row">
    <div class="col-md-12 form-group">
      <center><button id="compose_trait" class="btn btn-primary">Submit</button></center>
    </div>
  </div>
</div>
</div>

<script>
get_select_box('trait_components', 'object_select_div', { 'id' : 'object_select', 'name': 'object_select', 'multiple': 'true', 'cv_type': 'object_ontology' });
get_select_box('trait_components', 'attribute_select_div', { 'id' : 'attribute_select', 'name': 'attribute_select', 'multiple': 'true', 'cv_type': 'attribute_ontology' });
get_select_box('trait_components', 'method_select_div', { 'id' : 'method_select', 'name': 'method_select', 'multiple': 'true', 'cv_type': 'method_ontology' });
get_select_box('trait_components', 'unit_select_div', { 'id' : 'unit_select', 'name': 'unit_select', 'multiple': 'true', 'cv_type': 'unit_ontology' });
get_select_box('trait_components', 'trait_select_div', { 'id' : 'trait_select', 'name': 'trait_select', 'multiple': 'true', 'cv_type': 'trait_ontology' });
get_select_box('ontology_children', 'tod_select_div', { 'selectbox_id' : 'tod_select', 'selectbox_name': 'tod_select', 'multiple': 'true', 'parent_node_cvterm': 'time of day|CASSTIME:0000001', 'rel_cvterm': 'is_a', 'rel_cv': 'relationship' });
get_select_box('ontology_children', 'week_select_div', { 'selectbox_id' : 'week_select', 'selectbox_name': 'week_select', 'multiple': 'true', 'parent_node_cvterm': 'weeks|CASSTIME:0000005', 'rel_cvterm': 'is_a', 'rel_cv': 'relationship' });
get_select_box('ontology_children', 'month_select_div', { 'selectbox_id' : 'month_select', 'selectbox_name': 'month_select', 'multiple': 'true', 'parent_node_cvterm': 'months|CASSTIME:0000006', 'rel_cvterm': 'is_a', 'rel_cv': 'relationship' });

addToListMenu('existing_traits_to_list', 'existing_traits', {
  selectText: true,
  listType: 'traits'
});

jQuery(document).on('change','#object_select, #attribute_select, #method_select, #unit_select, #trait_select, #tod_select, #week_select, #month_select', function() { // retrieve matching traits each time component selection changes
  display_matching_traits();
});

jQuery('#object_select_all, #attribute_select_all, #method_select_all, #unit_select_all, #trait_select_all, #tod_select_all, #week_select_all, #month_select_all').click( // select all data in a panel
  function() {
  var name = jQuery(this).attr('name');
  var select_id = name.substring(0, name.length - 4);
  selectAllOptions(document.getElementById(select_id));
  display_matching_traits();
});

jQuery('#object_select_clear, #attribute_select_clear, #method_select_clear, #unit_select_clear, #trait_select_clear, #tod_select_clear, #week_select_clear, #month_select_clear').click( // clear all selections in a panel
  function() {
  var name = jQuery(this).attr('name');
  var select_id = name.substring(0, name.length - 6);
  clearAllOptions(document.getElementById(select_id));
  display_matching_traits();
});


jQuery('#compose_trait').on('click', function () {

var new_traits = jQuery("#new_traits_div").val();
for (var i = 0; i < new_traits.length; i++) {
  var component_ids = new_traits[i];
  var matching_trait_id = retrieve_exact_trait(component_ids);

  if (matching_trait_id) {
    alert("Error. This combination already exists with id "+matching_trait_id);
  }
  else {
    jQuery.ajax( {
      url: '/ajax/onto/compose',
      timeout: 60000,
      async: false,
      method: 'POST',
      data: {'ids': component_ids},
      beforeSend: function(){
        disable_ui();
      },
      complete : function(){
        enable_ui();
      },
      success: function(response) {
        console.log("Success! Stored new term with id "+response.success);
        alert("Success! Stored new term with id "+response.success);
      },
      error: function(request, status, err) {

      }
    });
  }
}
});


function display_matching_traits () {

var component_ids = get_component_ids();
var response = retrieve_matching_traits(component_ids);
var matching_traits = response[0];
var new_traits = response[1];
var trait_html;
var new_trait_html;

if (matching_traits.length > 0) {
  trait_html = format_options_list(matching_traits);
}
else {
  trait_html = 'No matching traits.';
}
if (new_traits.length > 0) {
  new_trait_html = format_options_list(new_traits);
}
else {
  new_trait_html = 'No new traits.';
}

jQuery('#existing_traits').html(trait_html);
jQuery('#new_traits').html(new_trait_html);

}

function get_component_ids () {
  var component_ids = [];
  if (jQuery("#object_select").val()) { component_ids.push(jQuery("#object_select").val()); }
  if (jQuery("#attribute_select").val()) { component_ids.push(jQuery("#attribute_select").val()); }
  if (jQuery("#method_select").val()) { component_ids.push(jQuery("#method_select").val()); }
  if (jQuery("#unit_select").val()) { component_ids.push(jQuery("#unit_select").val()); }
  if (jQuery("#trait_select").val()) { component_ids.push(jQuery("#trait_select").val()); }
  if (jQuery("#tod_select").val()) { component_ids.push(jQuery("#tod_select").val()); }
  if (jQuery("#week_select").val()) { component_ids.push(jQuery("#week_select").val()); }
  if (jQuery("#month_select").val()) { component_ids.push(jQuery("#month_select").val()); }
  return component_ids;
}

function retrieve_exact_trait (component_ids) {
jQuery.ajax( {
  url: '/ajax/onto/get_trait_from_exact_components',
  async: false,
  data: {'ids': component_ids},
  success: function(response) {
    if(response.trait_id) {
      trait_id = response.trait_id;
    }
    if(response.error) {
      trait_id = 0;
    };
  },
  error: function(request, status, err) {
    console.log("Error retrieving exact match");
  }
});
  return trait_id;
}


function retrieve_matching_traits (component_ids) {
  if (component_ids.length < 1) {
    return [];
  }
  var ids = {};
  ids["object_ids"] = jQuery("#object_select").val();
  ids["attribute_ids"] = jQuery("#attribute_select").val();
  ids["method_ids"] = jQuery("#method_select").val();
  ids["unit_ids"] = jQuery("#unit_select").val();
  ids["trait_ids"] = jQuery("#trait_select").val();
  ids["tod_ids"] = jQuery("#tod_select").val();
  ids["week_ids"] = jQuery("#week_select").val();
  ids["month_ids"] = jQuery("#month_select").val();

jQuery.ajax( {
  url: '/ajax/onto/get_traits_from_component_categories',
  async: false,
  data: { 'object_ids': ids["object_ids"],
          'attribute_ids': ids["attribute_ids"],
          'method_ids': ids["method_ids"],
          'unit_ids': ids["unit_ids"],
          'trait_ids': ids["trait_ids"],
          'tod_ids': ids["tod_ids"],
          'week_ids': ids["week_ids"],
          'month_ids': ids["month_ids"],
        },
  success: function(response) {
    traits = response.existing_traits || [];
    new_traits = response.new_traits || [];
    console.log("traits="+traits+"\n newtraits="+new_traits);
  },
  error: function(request, status, err) {
    console.log("Error retrieving matches");
  }
});
  return [traits, new_traits];
}




</script>
