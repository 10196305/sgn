
<%doc>

=head1 NAME

/phenotypes/phenotype_data.mas - a component for printing table with stats of a phenotype object

=head1 DESCRIPTION


Parameters:

=over 3

=item phenotypes

arrayref of L<Bio::Chado::Schema::Phenotype> objects

=item div

div id (for using with javascript)

=item has_qtl

applies to qtl populations. Used for adding a link to the qtl page


=back

=head1 AUTHOR

Naama Menda <nm249@cornell.edu>

=cut

</%doc>

<%args>
    $phenotypes=>undef
    $div=> ''
    $has_qtl => undef
    $object_id => undef
</%args>

<%once>
use CXGN::Page::FormattingHelpers qw/ tooltipped_text columnar_table_html /;

use Statistics::Descriptive;
use Scalar::Util qw(looks_like_number);

</%once>

<%perl>

my @data;
my @qual_data;
my %info; # hash of term names, since we can have multiple phenotypes of the same term
my $graph_icon = qq |<img src="/documents/img/pop_graph.png"/> |;

foreach my $phenotype (@$phenotypes) {
  #attr_id
  my ($observable) = $phenotype->observable;
  my $definition = $observable->definition || '';
  my ($unit_cvterm) = $phenotype->search_related
    ('phenotype_cvterms',
     { 'cv.name' => 'unit.ontology' },
     { prefetch => { 'cvterm' => 'cv' } }
    )->single;
  my $unit = $unit_cvterm->cvterm->name if $unit_cvterm;
  no warnings 'uninitialized';
  push @ { $info{$observable->name."|". $observable->cvterm_id ."|". $definition . "|" . $unit} } , $phenotype;
}
my $count = 0;
#display traits sorted by name
##NEED TO SORT BY cvtermprop or by parent? , then by name######
foreach my $term(sort keys %info ) {
  my ($term_name, $term_id, $definition, $unit) = split '\|' , $term;
  $unit = " ($unit)" if $unit;
  $definition .= $definition . $unit if $unit;

  my @values; # all quantitative data does here
  my @qual_values; #all qualitative data goes here
  foreach my $i ( @{ $info{$term} } ) {
    my $value = $i->value;

    if (looks_like_number($value))  {  push @values, $value ; }
    else { push @qual_values, $value ; }
  }
  my $stat = Statistics::Descriptive::Sparse->new();
  $stat->add_data(@values);

  my $mean_value =  sprintf("%.2f", $stat->mean);
  my $min = sprintf("%.2f", $stat->min);
  my $max = sprintf("%.2f", $stat->max);

  if (scalar(@values) ) {
    push  @data,  [map {$_}
                   ( (tooltipped_text(qq|<a href="/chado/cvterm.pl?cvterm_id=$term_id">$term_name</a> $unit|, $definition ) ), $mean_value, $min, $max, scalar(@values) ) ];

    push  @{ $data[$count] }, qq | <a href="/phenome/qtl_analysis.pl?stock_id=$object_id&amp;cvterm_id=$term_id" onClick="Qtl.waitPage()"> $graph_icon</a> |    if $has_qtl;
    $count++;
  }
  if (scalar(@qual_values) ) {
    push  @qual_data,  [map {$_}
                        ( (tooltipped_text(qq|<a href="/chado/cvterm.pl?cvterm_id=$term_id">$term_name</a>|, $definition) ), join(', ' , @qual_values ) ) ];
  }
}

my @headings = ("Trait" , "Average", "Min", "Max", "Lines/repeats");
push @headings , 'QTL(s)' if $has_qtl;


</%perl>

<script  language="javascript">

</script>

<& /util/import_javascript.mas, classes => [ "CXGN.Phenome.Qtl" ] &>

<div id = "$div">

% if(@data) {

<& /page/columnar_table.mas,
  headings => \@headings,
    data     => \@data ,
      __alt_freq   =>2,
      __alt_width  =>1,
      __alt_offset =>3,
      __align =>'lrrrc',
&>

% }

% if(@qual_data) {

<& /page/columnar_table.mas,
  headings => ["Qualitative Trait", "Value"],
    data     => \@qual_data ,
      __alt_freq   =>2,
      __alt_width  =>1,
      __alt_offset =>3,
      __align =>'ll',
&>

% }
</div>

<& /qtl/waitmessage.mas &>
